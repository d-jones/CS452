 .data # Program at 1.1	 	
  .byte 49 # StringLiteral at 22.19  
  .byte 32 # StringLiteral at 22.19 	 
  .byte 61 # StringLiteral at 22.19		 
  .byte 61 # StringLiteral at 22.19		
  .byte 32 # StringLiteral at 22.19 		
  .byte 49 # StringLiteral at 22.19	  
  .byte 32 # StringLiteral at 22.19			
  .byte 61 # StringLiteral at 22.19		
  .byte 61 # StringLiteral at 22.19		
  .byte 62 # StringLiteral at 22.19   
  .byte 32 # StringLiteral at 22.19		 
  .byte 80 # StringLiteral at 22.19		
  .byte 65 # StringLiteral at 22.19		 
  .byte 83 # StringLiteral at 22.19	
  .byte 83 # StringLiteral at 22.19		
  .byte 10 # StringLiteral at 22.19	  
  .word CLASS_String # StringLiteral at 22.19			
  .word 5 # StringLiteral at 22.19  	
  .word -16 # StringLiteral at 22.19 	 
7276:strLit_78: # StringLiteral at 22.19 	
  .byte 49 # StringLiteral at 25.19   
  .byte 32 # StringLiteral at 25.19  	
  .byte 61 # StringLiteral at 25.19	  
  .byte 61 # StringLiteral at 25.19   
  .byte 32 # StringLiteral at 25.19 
  .byte 49 # StringLiteral at 25.19 		
  .byte 32 # StringLiteral at 25.19 
  .byte 61 # StringLiteral at 25.19	
  .byte 61 # StringLiteral at 25.19 		
  .byte 62 # StringLiteral at 25.19 	
  .byte 32 # StringLiteral at 25.19  
  .byte 70 # StringLiteral at 25.19	  
  .byte 65 # StringLiteral at 25.19	  
  .byte 73 # StringLiteral at 25.19	 
  .byte 76 # StringLiteral at 25.19	 	
  .byte 69 # StringLiteral at 25.19  	
  .byte 68 # StringLiteral at 25.19		 
  .byte 10 # StringLiteral at 25.19  
  .byte 0 # StringLiteral at 25.19  	
  .byte 0 # StringLiteral at 25.19  
  .word CLASS_String # StringLiteral at 25.19	 	
  .word 6 # StringLiteral at 25.19 	
  .word -18 # StringLiteral at 25.19  
7308:strLit_83: # StringLiteral at 25.19		
  .byte 49 # StringLiteral at 28.19	  
  .byte 32 # StringLiteral at 28.19	  
  .byte 33 # StringLiteral at 28.19	  
  .byte 61 # StringLiteral at 28.19 		
  .byte 32 # StringLiteral at 28.19   
  .byte 50 # StringLiteral at 28.19  
  .byte 32 # StringLiteral at 28.19	 	
  .byte 61 # StringLiteral at 28.19 	 
  .byte 61 # StringLiteral at 28.19 
  .byte 62 # StringLiteral at 28.19 	 
  .byte 32 # StringLiteral at 28.19	 
  .byte 80 # StringLiteral at 28.19 	
  .byte 65 # StringLiteral at 28.19	
  .byte 83 # StringLiteral at 28.19	
  .byte 83 # StringLiteral at 28.19  	
  .byte 10 # StringLiteral at 28.19  	
  .word CLASS_String # StringLiteral at 28.19 		
  .word 5 # StringLiteral at 28.19	
  .word -16 # StringLiteral at 28.19	 	
7336:strLit_93: # StringLiteral at 28.19 	
  .byte 49 # StringLiteral at 31.19			
  .byte 32 # StringLiteral at 31.19 	
  .byte 33 # StringLiteral at 31.19	 
  .byte 61 # StringLiteral at 31.19			
  .byte 32 # StringLiteral at 31.19	 
  .byte 50 # StringLiteral at 31.19	
  .byte 32 # StringLiteral at 31.19  	
  .byte 61 # StringLiteral at 31.19   
  .byte 61 # StringLiteral at 31.19		 
  .byte 62 # StringLiteral at 31.19	 
  .byte 32 # StringLiteral at 31.19 
  .byte 70 # StringLiteral at 31.19 	 
  .byte 65 # StringLiteral at 31.19 	 
  .byte 73 # StringLiteral at 31.19 	
  .byte 76 # StringLiteral at 31.19 	
  .byte 69 # StringLiteral at 31.19 	
  .byte 68 # StringLiteral at 31.19  
  .byte 10 # StringLiteral at 31.19  	
  .byte 0 # StringLiteral at 31.19	
  .byte 0 # StringLiteral at 31.19  	
  .word CLASS_String # StringLiteral at 31.19 		
  .word 6 # StringLiteral at 31.19		 
  .word -18 # StringLiteral at 31.19		
7368:strLit_98: # StringLiteral at 31.19 	
  .byte 98 # StringLiteral at 34.19  	
  .byte 49 # StringLiteral at 34.19		
  .byte 32 # StringLiteral at 34.19 	 
  .byte 61 # StringLiteral at 34.19	 
  .byte 61 # StringLiteral at 34.19  	
  .byte 32 # StringLiteral at 34.19 
  .byte 116 # StringLiteral at 34.19 	
  .byte 114 # StringLiteral at 34.19	 	
  .byte 117 # StringLiteral at 34.19		
  .byte 101 # StringLiteral at 34.19 		
  .byte 32 # StringLiteral at 34.19	 	
  .byte 61 # StringLiteral at 34.19   
  .byte 61 # StringLiteral at 34.19 	
  .byte 62 # StringLiteral at 34.19   
  .byte 32 # StringLiteral at 34.19			
  .byte 80 # StringLiteral at 34.19  
  .byte 65 # StringLiteral at 34.19 		
  .byte 83 # StringLiteral at 34.19			
  .byte 83 # StringLiteral at 34.19	  
  .byte 10 # StringLiteral at 34.19 
  .word CLASS_String # StringLiteral at 34.19   
  .word 6 # StringLiteral at 34.19 		
  .word -20 # StringLiteral at 34.19	 
7400:strLit_107: # StringLiteral at 34.19 
  .byte 98 # StringLiteral at 37.19		 
  .byte 49 # StringLiteral at 37.19	
  .byte 32 # StringLiteral at 37.19	 	
  .byte 61 # StringLiteral at 37.19 
  .byte 61 # StringLiteral at 37.19	 
  .byte 32 # StringLiteral at 37.19  
  .byte 116 # StringLiteral at 37.19   
  .byte 114 # StringLiteral at 37.19			
  .byte 117 # StringLiteral at 37.19			
  .byte 101 # StringLiteral at 37.19	  
  .byte 32 # StringLiteral at 37.19	  
  .byte 61 # StringLiteral at 37.19	
  .byte 61 # StringLiteral at 37.19		
  .byte 62 # StringLiteral at 37.19	 
  .byte 32 # StringLiteral at 37.19	 	
  .byte 70 # StringLiteral at 37.19 	 
  .byte 65 # StringLiteral at 37.19 	 
  .byte 73 # StringLiteral at 37.19 
  .byte 76 # StringLiteral at 37.19	
  .byte 69 # StringLiteral at 37.19	 	
  .byte 68 # StringLiteral at 37.19	 
  .byte 10 # StringLiteral at 37.19	 
  .byte 0 # StringLiteral at 37.19 	
  .byte 0 # StringLiteral at 37.19  	
  .word CLASS_String # StringLiteral at 37.19   
  .word 7 # StringLiteral at 37.19	 	
  .word -22 # StringLiteral at 37.19  	
7436:strLit_112: # StringLiteral at 37.19 		
  .byte 98 # StringLiteral at 40.19	  
  .byte 50 # StringLiteral at 40.19 
  .byte 32 # StringLiteral at 40.19 		
  .byte 61 # StringLiteral at 40.19 
  .byte 61 # StringLiteral at 40.19   
  .byte 32 # StringLiteral at 40.19 
  .byte 102 # StringLiteral at 40.19		
  .byte 97 # StringLiteral at 40.19 	
  .byte 108 # StringLiteral at 40.19			
  .byte 115 # StringLiteral at 40.19  
  .byte 101 # StringLiteral at 40.19	 
  .byte 32 # StringLiteral at 40.19 	
  .byte 61 # StringLiteral at 40.19 	
  .byte 61 # StringLiteral at 40.19 		
  .byte 62 # StringLiteral at 40.19			
  .byte 32 # StringLiteral at 40.19	 	
  .byte 80 # StringLiteral at 40.19  	
  .byte 65 # StringLiteral at 40.19 	 
  .byte 83 # StringLiteral at 40.19   
  .byte 83 # StringLiteral at 40.19  
  .byte 10 # StringLiteral at 40.19 	 
  .byte 0 # StringLiteral at 40.19	 
  .byte 0 # StringLiteral at 40.19	
  .byte 0 # StringLiteral at 40.19		
  .word CLASS_String # StringLiteral at 40.19		
  .word 7 # StringLiteral at 40.19	  
  .word -21 # StringLiteral at 40.19 		
7472:strLit_121: # StringLiteral at 40.19 		
  .byte 98 # StringLiteral at 43.19		
  .byte 50 # StringLiteral at 43.19 
  .byte 32 # StringLiteral at 43.19	  
  .byte 61 # StringLiteral at 43.19	  
  .byte 61 # StringLiteral at 43.19	 
  .byte 32 # StringLiteral at 43.19 		
  .byte 102 # StringLiteral at 43.19  	
  .byte 97 # StringLiteral at 43.19			
  .byte 108 # StringLiteral at 43.19 	
  .byte 115 # StringLiteral at 43.19 	
  .byte 101 # StringLiteral at 43.19  	
  .byte 32 # StringLiteral at 43.19	 	
  .byte 61 # StringLiteral at 43.19		 
  .byte 61 # StringLiteral at 43.19  
  .byte 62 # StringLiteral at 43.19  	
  .byte 32 # StringLiteral at 43.19		
  .byte 70 # StringLiteral at 43.19   
  .byte 65 # StringLiteral at 43.19 	 
  .byte 73 # StringLiteral at 43.19		 
  .byte 76 # StringLiteral at 43.19	
  .byte 69 # StringLiteral at 43.19  
  .byte 68 # StringLiteral at 43.19		
  .byte 10 # StringLiteral at 43.19	 	
  .byte 0 # StringLiteral at 43.19  
  .word CLASS_String # StringLiteral at 43.19 	
  .word 7 # StringLiteral at 43.19	 
  .word -23 # StringLiteral at 43.19  
7508:strLit_126: # StringLiteral at 43.19	
  .byte 98 # StringLiteral at 46.19			
  .byte 51 # StringLiteral at 46.19  
  .byte 32 # StringLiteral at 46.19  	
  .byte 61 # StringLiteral at 46.19	  
  .byte 61 # StringLiteral at 46.19	
  .byte 32 # StringLiteral at 46.19	
  .byte 116 # StringLiteral at 46.19   
  .byte 114 # StringLiteral at 46.19 		
  .byte 117 # StringLiteral at 46.19		
  .byte 101 # StringLiteral at 46.19   
  .byte 32 # StringLiteral at 46.19	 	
  .byte 61 # StringLiteral at 46.19 	
  .byte 61 # StringLiteral at 46.19	 	
  .byte 62 # StringLiteral at 46.19 	 
  .byte 32 # StringLiteral at 46.19 	
  .byte 80 # StringLiteral at 46.19  	
  .byte 65 # StringLiteral at 46.19		 
  .byte 83 # StringLiteral at 46.19 	 
  .byte 83 # StringLiteral at 46.19		 
  .byte 10 # StringLiteral at 46.19	  
  .word CLASS_String # StringLiteral at 46.19	 	
  .word 6 # StringLiteral at 46.19  
  .word -20 # StringLiteral at 46.19			
7540:strLit_135: # StringLiteral at 46.19  	
  .byte 98 # StringLiteral at 49.19 	 
  .byte 51 # StringLiteral at 49.19		
  .byte 32 # StringLiteral at 49.19		
  .byte 61 # StringLiteral at 49.19	
  .byte 61 # StringLiteral at 49.19		
  .byte 32 # StringLiteral at 49.19	
  .byte 116 # StringLiteral at 49.19	  
  .byte 114 # StringLiteral at 49.19		 
  .byte 117 # StringLiteral at 49.19	 
  .byte 101 # StringLiteral at 49.19	  
  .byte 32 # StringLiteral at 49.19			
  .byte 61 # StringLiteral at 49.19 
  .byte 61 # StringLiteral at 49.19  
  .byte 62 # StringLiteral at 49.19   
  .byte 32 # StringLiteral at 49.19  
  .byte 70 # StringLiteral at 49.19  
  .byte 65 # StringLiteral at 49.19	  
  .byte 73 # StringLiteral at 49.19	 	
  .byte 76 # StringLiteral at 49.19 	 
  .byte 69 # StringLiteral at 49.19 		
  .byte 68 # StringLiteral at 49.19			
  .byte 10 # StringLiteral at 49.19	 	
  .byte 0 # StringLiteral at 49.19	
  .byte 0 # StringLiteral at 49.19		
  .word CLASS_String # StringLiteral at 49.19			
  .word 7 # StringLiteral at 49.19   
  .word -22 # StringLiteral at 49.19  	
7576:strLit_140: # StringLiteral at 49.19			
  .byte 98 # StringLiteral at 52.19 		
  .byte 52 # StringLiteral at 52.19 		
  .byte 32 # StringLiteral at 52.19 	 
  .byte 61 # StringLiteral at 52.19	  
  .byte 61 # StringLiteral at 52.19  	
  .byte 32 # StringLiteral at 52.19			
  .byte 116 # StringLiteral at 52.19  	
  .byte 114 # StringLiteral at 52.19 	 
  .byte 117 # StringLiteral at 52.19  	
  .byte 101 # StringLiteral at 52.19 		
  .byte 32 # StringLiteral at 52.19			
  .byte 61 # StringLiteral at 52.19  	
  .byte 61 # StringLiteral at 52.19 		
  .byte 62 # StringLiteral at 52.19 		
  .byte 32 # StringLiteral at 52.19	 	
  .byte 80 # StringLiteral at 52.19   
  .byte 65 # StringLiteral at 52.19		
  .byte 83 # StringLiteral at 52.19 		
  .byte 83 # StringLiteral at 52.19		
  .byte 10 # StringLiteral at 52.19	 	
  .word CLASS_String # StringLiteral at 52.19  	
  .word 6 # StringLiteral at 52.19   
  .word -20 # StringLiteral at 52.19	 	
7608:strLit_149: # StringLiteral at 52.19 	
  .byte 98 # StringLiteral at 55.19	  
  .byte 52 # StringLiteral at 55.19  
  .byte 32 # StringLiteral at 55.19  	
  .byte 61 # StringLiteral at 55.19 		
  .byte 61 # StringLiteral at 55.19	
  .byte 32 # StringLiteral at 55.19  
  .byte 116 # StringLiteral at 55.19   
  .byte 114 # StringLiteral at 55.19  	
  .byte 117 # StringLiteral at 55.19		
  .byte 101 # StringLiteral at 55.19 		
  .byte 32 # StringLiteral at 55.19	 
  .byte 61 # StringLiteral at 55.19	
  .byte 61 # StringLiteral at 55.19	
  .byte 62 # StringLiteral at 55.19	 
  .byte 32 # StringLiteral at 55.19 		
  .byte 70 # StringLiteral at 55.19 
  .byte 65 # StringLiteral at 55.19		
  .byte 73 # StringLiteral at 55.19	
  .byte 76 # StringLiteral at 55.19 	 
  .byte 69 # StringLiteral at 55.19	 	
  .byte 68 # StringLiteral at 55.19  	
  .byte 10 # StringLiteral at 55.19	 	
  .byte 0 # StringLiteral at 55.19	 	
  .byte 0 # StringLiteral at 55.19   
  .word CLASS_String # StringLiteral at 55.19	 
  .word 7 # StringLiteral at 55.19 		
  .word -22 # StringLiteral at 55.19 
7644:strLit_154: # StringLiteral at 55.19		
  .byte 98 # StringLiteral at 58.19 		
  .byte 53 # StringLiteral at 58.19	  
  .byte 32 # StringLiteral at 58.19 	
  .byte 61 # StringLiteral at 58.19 	
  .byte 61 # StringLiteral at 58.19 
  .byte 32 # StringLiteral at 58.19	  
  .byte 116 # StringLiteral at 58.19 	
  .byte 114 # StringLiteral at 58.19   
  .byte 117 # StringLiteral at 58.19		
  .byte 101 # StringLiteral at 58.19  	
  .byte 32 # StringLiteral at 58.19  
  .byte 61 # StringLiteral at 58.19	  
  .byte 61 # StringLiteral at 58.19	  
  .byte 62 # StringLiteral at 58.19  
  .byte 32 # StringLiteral at 58.19		
  .byte 80 # StringLiteral at 58.19  	
  .byte 65 # StringLiteral at 58.19  
  .byte 83 # StringLiteral at 58.19 		
  .byte 83 # StringLiteral at 58.19	 
  .byte 10 # StringLiteral at 58.19 		
  .word CLASS_String # StringLiteral at 58.19	 
  .word 6 # StringLiteral at 58.19	  
  .word -20 # StringLiteral at 58.19	  
7676:strLit_163: # StringLiteral at 58.19  	
  .byte 98 # StringLiteral at 61.19 		
  .byte 53 # StringLiteral at 61.19	
  .byte 32 # StringLiteral at 61.19	 	
  .byte 61 # StringLiteral at 61.19		 
  .byte 61 # StringLiteral at 61.19			
  .byte 32 # StringLiteral at 61.19	 
  .byte 116 # StringLiteral at 61.19	
  .byte 114 # StringLiteral at 61.19 	
  .byte 117 # StringLiteral at 61.19 	
  .byte 101 # StringLiteral at 61.19 
  .byte 32 # StringLiteral at 61.19	 	
  .byte 61 # StringLiteral at 61.19   
  .byte 61 # StringLiteral at 61.19  
  .byte 62 # StringLiteral at 61.19 	 
  .byte 32 # StringLiteral at 61.19 		
  .byte 70 # StringLiteral at 61.19  	
  .byte 65 # StringLiteral at 61.19   
  .byte 73 # StringLiteral at 61.19	
  .byte 76 # StringLiteral at 61.19		
  .byte 69 # StringLiteral at 61.19	  
  .byte 68 # StringLiteral at 61.19  
  .byte 10 # StringLiteral at 61.19   
  .byte 0 # StringLiteral at 61.19 
  .byte 0 # StringLiteral at 61.19	
  .word CLASS_String # StringLiteral at 61.19	
  .word 7 # StringLiteral at 61.19		
  .word -22 # StringLiteral at 61.19   
7712:strLit_168: # StringLiteral at 61.19	 
  .byte 98 # StringLiteral at 64.19		
  .byte 54 # StringLiteral at 64.19	 	
  .byte 32 # StringLiteral at 64.19	  
  .byte 61 # StringLiteral at 64.19		 
  .byte 61 # StringLiteral at 64.19		 
  .byte 32 # StringLiteral at 64.19  	
  .byte 116 # StringLiteral at 64.19	
  .byte 114 # StringLiteral at 64.19 
  .byte 117 # StringLiteral at 64.19   
  .byte 101 # StringLiteral at 64.19 	
  .byte 32 # StringLiteral at 64.19  	
  .byte 61 # StringLiteral at 64.19		 
  .byte 61 # StringLiteral at 64.19		
  .byte 62 # StringLiteral at 64.19 		
  .byte 32 # StringLiteral at 64.19 
  .byte 80 # StringLiteral at 64.19 		
  .byte 65 # StringLiteral at 64.19	  
  .byte 83 # StringLiteral at 64.19 		
  .byte 83 # StringLiteral at 64.19		
  .byte 10 # StringLiteral at 64.19		 
  .word CLASS_String # StringLiteral at 64.19	  
  .word 6 # StringLiteral at 64.19 	 
  .word -20 # StringLiteral at 64.19  
7744:strLit_177: # StringLiteral at 64.19	 	
  .byte 98 # StringLiteral at 67.19			
  .byte 54 # StringLiteral at 67.19	  
  .byte 32 # StringLiteral at 67.19 	
  .byte 61 # StringLiteral at 67.19			
  .byte 61 # StringLiteral at 67.19	  
  .byte 32 # StringLiteral at 67.19	
  .byte 116 # StringLiteral at 67.19 
  .byte 114 # StringLiteral at 67.19	  
  .byte 117 # StringLiteral at 67.19			
  .byte 101 # StringLiteral at 67.19	  
  .byte 32 # StringLiteral at 67.19   
  .byte 61 # StringLiteral at 67.19	  
  .byte 61 # StringLiteral at 67.19 	
  .byte 62 # StringLiteral at 67.19 	
  .byte 32 # StringLiteral at 67.19 	
  .byte 70 # StringLiteral at 67.19 	 
  .byte 65 # StringLiteral at 67.19	 	
  .byte 73 # StringLiteral at 67.19	
  .byte 76 # StringLiteral at 67.19 
  .byte 69 # StringLiteral at 67.19		 
  .byte 68 # StringLiteral at 67.19  
  .byte 10 # StringLiteral at 67.19  	
  .byte 0 # StringLiteral at 67.19	  
  .byte 0 # StringLiteral at 67.19	  
  .word CLASS_String # StringLiteral at 67.19	
  .word 7 # StringLiteral at 67.19  	
  .word -22 # StringLiteral at 67.19	
7780:strLit_182: # StringLiteral at 67.19  	
  .byte 98 # StringLiteral at 70.19	 	
  .byte 55 # StringLiteral at 70.19	 	
  .byte 32 # StringLiteral at 70.19		 
  .byte 61 # StringLiteral at 70.19	 
  .byte 61 # StringLiteral at 70.19 	 
  .byte 32 # StringLiteral at 70.19 
  .byte 116 # StringLiteral at 70.19	 	
  .byte 114 # StringLiteral at 70.19	 
  .byte 117 # StringLiteral at 70.19 	
  .byte 101 # StringLiteral at 70.19   
  .byte 32 # StringLiteral at 70.19			
  .byte 61 # StringLiteral at 70.19	 	
  .byte 61 # StringLiteral at 70.19  	
  .byte 62 # StringLiteral at 70.19	 	
  .byte 32 # StringLiteral at 70.19	 	
  .byte 80 # StringLiteral at 70.19  
  .byte 65 # StringLiteral at 70.19   
  .byte 83 # StringLiteral at 70.19  
  .byte 83 # StringLiteral at 70.19   
  .byte 10 # StringLiteral at 70.19			
  .word CLASS_String # StringLiteral at 70.19	
  .word 6 # StringLiteral at 70.19 	 
  .word -20 # StringLiteral at 70.19	 	
7812:strLit_191: # StringLiteral at 70.19	
  .byte 98 # StringLiteral at 73.19	 
  .byte 55 # StringLiteral at 73.19	  
  .byte 32 # StringLiteral at 73.19			
  .byte 61 # StringLiteral at 73.19 	
  .byte 61 # StringLiteral at 73.19  	
  .byte 32 # StringLiteral at 73.19	 
  .byte 116 # StringLiteral at 73.19 
  .byte 114 # StringLiteral at 73.19  
  .byte 117 # StringLiteral at 73.19			
  .byte 101 # StringLiteral at 73.19 	 
  .byte 32 # StringLiteral at 73.19  	
  .byte 61 # StringLiteral at 73.19	
  .byte 61 # StringLiteral at 73.19	  
  .byte 62 # StringLiteral at 73.19 		
  .byte 32 # StringLiteral at 73.19 
  .byte 70 # StringLiteral at 73.19		
  .byte 65 # StringLiteral at 73.19			
  .byte 73 # StringLiteral at 73.19			
  .byte 76 # StringLiteral at 73.19 
  .byte 69 # StringLiteral at 73.19  	
  .byte 68 # StringLiteral at 73.19	  
  .byte 10 # StringLiteral at 73.19			
  .byte 0 # StringLiteral at 73.19 	 
  .byte 0 # StringLiteral at 73.19 	 
  .word CLASS_String # StringLiteral at 73.19			
  .word 7 # StringLiteral at 73.19  	
  .word -22 # StringLiteral at 73.19		 
7848:strLit_196: # StringLiteral at 73.19  	
  .byte 98 # StringLiteral at 76.19 		
  .byte 56 # StringLiteral at 76.19 
  .byte 32 # StringLiteral at 76.19  	
  .byte 61 # StringLiteral at 76.19			
  .byte 61 # StringLiteral at 76.19		 
  .byte 32 # StringLiteral at 76.19 		
  .byte 116 # StringLiteral at 76.19		
  .byte 114 # StringLiteral at 76.19 	
  .byte 117 # StringLiteral at 76.19		 
  .byte 32 # StringLiteral at 76.19  	
  .byte 61 # StringLiteral at 76.19	  
  .byte 61 # StringLiteral at 76.19	 	
  .byte 62 # StringLiteral at 76.19 
  .byte 32 # StringLiteral at 76.19 	
  .byte 80 # StringLiteral at 76.19	
  .byte 65 # StringLiteral at 76.19			
  .byte 83 # StringLiteral at 76.19 
  .byte 83 # StringLiteral at 76.19	 	
  .byte 10 # StringLiteral at 76.19 	
  .byte 0 # StringLiteral at 76.19		
  .word CLASS_String # StringLiteral at 76.19  	
  .word 6 # StringLiteral at 76.19			
  .word -19 # StringLiteral at 76.19 	 
7880:strLit_205: # StringLiteral at 76.19  	
  .byte 98 # StringLiteral at 79.19			
  .byte 56 # StringLiteral at 79.19  	
  .byte 32 # StringLiteral at 79.19		
  .byte 61 # StringLiteral at 79.19 
  .byte 61 # StringLiteral at 79.19   
  .byte 32 # StringLiteral at 79.19 		
  .byte 116 # StringLiteral at 79.19	 
  .byte 114 # StringLiteral at 79.19 		
  .byte 117 # StringLiteral at 79.19 
  .byte 101 # StringLiteral at 79.19 	 
  .byte 32 # StringLiteral at 79.19			
  .byte 61 # StringLiteral at 79.19  
  .byte 61 # StringLiteral at 79.19	
  .byte 62 # StringLiteral at 79.19 
  .byte 32 # StringLiteral at 79.19 		
  .byte 70 # StringLiteral at 79.19   
  .byte 65 # StringLiteral at 79.19		 
  .byte 73 # StringLiteral at 79.19	 
  .byte 76 # StringLiteral at 79.19	 
  .byte 69 # StringLiteral at 79.19 
  .byte 68 # StringLiteral at 79.19   
  .byte 10 # StringLiteral at 79.19	  
  .byte 0 # StringLiteral at 79.19			
  .byte 0 # StringLiteral at 79.19	  
  .word CLASS_String # StringLiteral at 79.19   
  .word 7 # StringLiteral at 79.19		 
  .word -22 # StringLiteral at 79.19		 
7916:strLit_210: # StringLiteral at 79.19 
  .byte 98 # StringLiteral at 82.19		
  .byte 57 # StringLiteral at 82.19  
  .byte 32 # StringLiteral at 82.19	 	
  .byte 61 # StringLiteral at 82.19 		
  .byte 61 # StringLiteral at 82.19	 
  .byte 32 # StringLiteral at 82.19	  
  .byte 116 # StringLiteral at 82.19		 
  .byte 114 # StringLiteral at 82.19			
  .byte 117 # StringLiteral at 82.19		
  .byte 101 # StringLiteral at 82.19	 
  .byte 32 # StringLiteral at 82.19  
  .byte 61 # StringLiteral at 82.19		
  .byte 61 # StringLiteral at 82.19 	 
  .byte 62 # StringLiteral at 82.19	  
  .byte 32 # StringLiteral at 82.19 	
  .byte 80 # StringLiteral at 82.19  	
  .byte 65 # StringLiteral at 82.19		
  .byte 83 # StringLiteral at 82.19 		
  .byte 83 # StringLiteral at 82.19	
  .byte 10 # StringLiteral at 82.19  
  .word CLASS_String # StringLiteral at 82.19	 	
  .word 6 # StringLiteral at 82.19  	
  .word -20 # StringLiteral at 82.19	
7948:strLit_219: # StringLiteral at 82.19  	
  .byte 98 # StringLiteral at 85.19 		
  .byte 57 # StringLiteral at 85.19			
  .byte 32 # StringLiteral at 85.19	 	
  .byte 61 # StringLiteral at 85.19		
  .byte 61 # StringLiteral at 85.19	 	
  .byte 32 # StringLiteral at 85.19 
  .byte 116 # StringLiteral at 85.19 	 
  .byte 114 # StringLiteral at 85.19	  
  .byte 117 # StringLiteral at 85.19	 
  .byte 101 # StringLiteral at 85.19  
  .byte 32 # StringLiteral at 85.19	 	
  .byte 61 # StringLiteral at 85.19 	
  .byte 61 # StringLiteral at 85.19 
  .byte 62 # StringLiteral at 85.19			
  .byte 32 # StringLiteral at 85.19   
  .byte 70 # StringLiteral at 85.19	  
  .byte 65 # StringLiteral at 85.19  
  .byte 73 # StringLiteral at 85.19			
  .byte 76 # StringLiteral at 85.19   
  .byte 69 # StringLiteral at 85.19 
  .byte 68 # StringLiteral at 85.19 		
  .byte 10 # StringLiteral at 85.19	
  .byte 0 # StringLiteral at 85.19		 
  .byte 0 # StringLiteral at 85.19	 
  .word CLASS_String # StringLiteral at 85.19   
  .word 7 # StringLiteral at 85.19		 
  .word -22 # StringLiteral at 85.19		 
7984:strLit_224: # StringLiteral at 85.19		
  .byte 98 # StringLiteral at 88.19   
  .byte 49 # StringLiteral at 88.19	  
  .byte 48 # StringLiteral at 88.19  	
  .byte 32 # StringLiteral at 88.19		
  .byte 61 # StringLiteral at 88.19	 	
  .byte 61 # StringLiteral at 88.19 	
  .byte 32 # StringLiteral at 88.19		
  .byte 116 # StringLiteral at 88.19	
  .byte 114 # StringLiteral at 88.19		
  .byte 117 # StringLiteral at 88.19	 
  .byte 101 # StringLiteral at 88.19 	 
  .byte 32 # StringLiteral at 88.19   
  .byte 61 # StringLiteral at 88.19		
  .byte 61 # StringLiteral at 88.19 	
  .byte 62 # StringLiteral at 88.19   
  .byte 32 # StringLiteral at 88.19 		
  .byte 80 # StringLiteral at 88.19  
  .byte 65 # StringLiteral at 88.19		 
  .byte 83 # StringLiteral at 88.19	  
  .byte 83 # StringLiteral at 88.19 
  .byte 10 # StringLiteral at 88.19		
  .byte 0 # StringLiteral at 88.19 		
  .byte 0 # StringLiteral at 88.19  	
  .byte 0 # StringLiteral at 88.19	 
  .word CLASS_String # StringLiteral at 88.19	
  .word 7 # StringLiteral at 88.19	  
  .word -21 # StringLiteral at 88.19 		
8020:strLit_233: # StringLiteral at 88.19		
  .byte 98 # StringLiteral at 91.19  
  .byte 49 # StringLiteral at 91.19 		
  .byte 48 # StringLiteral at 91.19			
  .byte 32 # StringLiteral at 91.19  
  .byte 61 # StringLiteral at 91.19 	
  .byte 61 # StringLiteral at 91.19	  
  .byte 32 # StringLiteral at 91.19			
  .byte 116 # StringLiteral at 91.19		 
  .byte 114 # StringLiteral at 91.19  
  .byte 117 # StringLiteral at 91.19  
  .byte 101 # StringLiteral at 91.19 	 
  .byte 32 # StringLiteral at 91.19		
  .byte 61 # StringLiteral at 91.19	
  .byte 61 # StringLiteral at 91.19	 	
  .byte 62 # StringLiteral at 91.19	  
  .byte 32 # StringLiteral at 91.19			
  .byte 70 # StringLiteral at 91.19  
  .byte 65 # StringLiteral at 91.19  	
  .byte 73 # StringLiteral at 91.19 
  .byte 76 # StringLiteral at 91.19	 
  .byte 69 # StringLiteral at 91.19			
  .byte 68 # StringLiteral at 91.19	
  .byte 10 # StringLiteral at 91.19	 	
  .byte 0 # StringLiteral at 91.19		 
  .word CLASS_String # StringLiteral at 91.19			
  .word 7 # StringLiteral at 91.19	 	
  .word -23 # StringLiteral at 91.19	 
8056:strLit_238: # StringLiteral at 91.19		
  .byte 98 # StringLiteral at 94.19  	
  .byte 49 # StringLiteral at 94.19 
  .byte 49 # StringLiteral at 94.19 	
  .byte 32 # StringLiteral at 94.19			
  .byte 61 # StringLiteral at 94.19 
  .byte 61 # StringLiteral at 94.19	 	
  .byte 32 # StringLiteral at 94.19		 
  .byte 116 # StringLiteral at 94.19 		
  .byte 114 # StringLiteral at 94.19 		
  .byte 117 # StringLiteral at 94.19 
  .byte 101 # StringLiteral at 94.19	
  .byte 32 # StringLiteral at 94.19  	
  .byte 61 # StringLiteral at 94.19		 
  .byte 61 # StringLiteral at 94.19 		
  .byte 62 # StringLiteral at 94.19   
  .byte 32 # StringLiteral at 94.19	 
  .byte 80 # StringLiteral at 94.19 	 
  .byte 65 # StringLiteral at 94.19			
  .byte 83 # StringLiteral at 94.19	
  .byte 83 # StringLiteral at 94.19 		
  .byte 10 # StringLiteral at 94.19			
  .byte 0 # StringLiteral at 94.19  
  .byte 0 # StringLiteral at 94.19 	 
  .byte 0 # StringLiteral at 94.19 
  .word CLASS_String # StringLiteral at 94.19 	 
  .word 7 # StringLiteral at 94.19   
  .word -21 # StringLiteral at 94.19   
8092:strLit_247: # StringLiteral at 94.19 	 
  .byte 98 # StringLiteral at 97.19	 
  .byte 49 # StringLiteral at 97.19	
  .byte 49 # StringLiteral at 97.19	 	
  .byte 32 # StringLiteral at 97.19  	
  .byte 61 # StringLiteral at 97.19	 	
  .byte 61 # StringLiteral at 97.19	 	
  .byte 32 # StringLiteral at 97.19		
  .byte 116 # StringLiteral at 97.19 	 
  .byte 114 # StringLiteral at 97.19	 
  .byte 117 # StringLiteral at 97.19 	 
  .byte 101 # StringLiteral at 97.19	 
  .byte 32 # StringLiteral at 97.19			
  .byte 61 # StringLiteral at 97.19 	
  .byte 61 # StringLiteral at 97.19	  
  .byte 62 # StringLiteral at 97.19		 
  .byte 32 # StringLiteral at 97.19  
  .byte 70 # StringLiteral at 97.19 		
  .byte 65 # StringLiteral at 97.19	
  .byte 73 # StringLiteral at 97.19 	
  .byte 76 # StringLiteral at 97.19  
  .byte 69 # StringLiteral at 97.19	 	
  .byte 68 # StringLiteral at 97.19   
  .byte 10 # StringLiteral at 97.19  
  .byte 0 # StringLiteral at 97.19 	 
  .word CLASS_String # StringLiteral at 97.19	 	
  .word 7 # StringLiteral at 97.19		
  .word -23 # StringLiteral at 97.19 	
8128:strLit_252: # StringLiteral at 97.19  
  .byte 98 # StringLiteral at 100.19	 	
  .byte 49 # StringLiteral at 100.19	 	
  .byte 50 # StringLiteral at 100.19   
  .byte 32 # StringLiteral at 100.19 	
  .byte 61 # StringLiteral at 100.19			
  .byte 61 # StringLiteral at 100.19   
  .byte 32 # StringLiteral at 100.19 		
  .byte 116 # StringLiteral at 100.19		 
  .byte 114 # StringLiteral at 100.19  	
  .byte 117 # StringLiteral at 100.19   
  .byte 101 # StringLiteral at 100.19  
  .byte 32 # StringLiteral at 100.19 
  .byte 61 # StringLiteral at 100.19	 
  .byte 61 # StringLiteral at 100.19			
  .byte 62 # StringLiteral at 100.19 
  .byte 32 # StringLiteral at 100.19			
  .byte 80 # StringLiteral at 100.19			
  .byte 65 # StringLiteral at 100.19 
  .byte 83 # StringLiteral at 100.19   
  .byte 83 # StringLiteral at 100.19		
  .byte 10 # StringLiteral at 100.19	  
  .byte 0 # StringLiteral at 100.19	
  .byte 0 # StringLiteral at 100.19 	 
  .byte 0 # StringLiteral at 100.19 		
  .word CLASS_String # StringLiteral at 100.19	 	
  .word 7 # StringLiteral at 100.19			
  .word -21 # StringLiteral at 100.19 	 
8164:strLit_261: # StringLiteral at 100.19		 
  .byte 98 # StringLiteral at 103.19	 	
  .byte 49 # StringLiteral at 103.19	 	
  .byte 50 # StringLiteral at 103.19  	
  .byte 32 # StringLiteral at 103.19  	
  .byte 61 # StringLiteral at 103.19			
  .byte 61 # StringLiteral at 103.19   
  .byte 32 # StringLiteral at 103.19	  
  .byte 116 # StringLiteral at 103.19	
  .byte 114 # StringLiteral at 103.19		 
  .byte 117 # StringLiteral at 103.19  
  .byte 101 # StringLiteral at 103.19		 
  .byte 32 # StringLiteral at 103.19	 
  .byte 61 # StringLiteral at 103.19	 	
  .byte 61 # StringLiteral at 103.19	 	
  .byte 62 # StringLiteral at 103.19 		
  .byte 32 # StringLiteral at 103.19			
  .byte 70 # StringLiteral at 103.19	
  .byte 65 # StringLiteral at 103.19	 
  .byte 73 # StringLiteral at 103.19  
  .byte 76 # StringLiteral at 103.19   
  .byte 69 # StringLiteral at 103.19		 
  .byte 68 # StringLiteral at 103.19 
  .byte 10 # StringLiteral at 103.19	
  .byte 0 # StringLiteral at 103.19	 
  .word CLASS_String # StringLiteral at 103.19 	 
  .word 7 # StringLiteral at 103.19 
  .word -23 # StringLiteral at 103.19 	
8200:strLit_266: # StringLiteral at 103.19		
  .byte 98 # StringLiteral at 106.19  	
  .byte 49 # StringLiteral at 106.19 	 
  .byte 51 # StringLiteral at 106.19	  
  .byte 32 # StringLiteral at 106.19		 
  .byte 61 # StringLiteral at 106.19 
  .byte 61 # StringLiteral at 106.19	  
  .byte 32 # StringLiteral at 106.19 	 
  .byte 116 # StringLiteral at 106.19 
  .byte 114 # StringLiteral at 106.19		
  .byte 117 # StringLiteral at 106.19	 
  .byte 101 # StringLiteral at 106.19 
  .byte 32 # StringLiteral at 106.19  	
  .byte 61 # StringLiteral at 106.19	
  .byte 61 # StringLiteral at 106.19  
  .byte 62 # StringLiteral at 106.19  	
  .byte 32 # StringLiteral at 106.19  	
  .byte 80 # StringLiteral at 106.19 	 
  .byte 65 # StringLiteral at 106.19	  
  .byte 83 # StringLiteral at 106.19 		
  .byte 83 # StringLiteral at 106.19 	 
  .byte 10 # StringLiteral at 106.19	  
  .byte 0 # StringLiteral at 106.19			
  .byte 0 # StringLiteral at 106.19	 	
  .byte 0 # StringLiteral at 106.19		
  .word CLASS_String # StringLiteral at 106.19	 
  .word 7 # StringLiteral at 106.19 		
  .word -21 # StringLiteral at 106.19  
8236:strLit_275: # StringLiteral at 106.19  	
  .byte 98 # StringLiteral at 109.19 	
  .byte 49 # StringLiteral at 109.19	 
  .byte 51 # StringLiteral at 109.19	  
  .byte 32 # StringLiteral at 109.19	  
  .byte 61 # StringLiteral at 109.19		
  .byte 61 # StringLiteral at 109.19			
  .byte 32 # StringLiteral at 109.19  	
  .byte 116 # StringLiteral at 109.19		
  .byte 114 # StringLiteral at 109.19 
  .byte 117 # StringLiteral at 109.19	  
  .byte 101 # StringLiteral at 109.19 
  .byte 32 # StringLiteral at 109.19 	
  .byte 61 # StringLiteral at 109.19 
  .byte 61 # StringLiteral at 109.19  
  .byte 62 # StringLiteral at 109.19 	
  .byte 32 # StringLiteral at 109.19	
  .byte 70 # StringLiteral at 109.19 
  .byte 65 # StringLiteral at 109.19			
  .byte 73 # StringLiteral at 109.19 		
  .byte 76 # StringLiteral at 109.19 
  .byte 69 # StringLiteral at 109.19		 
  .byte 68 # StringLiteral at 109.19  
  .byte 10 # StringLiteral at 109.19	  
  .byte 0 # StringLiteral at 109.19  
  .word CLASS_String # StringLiteral at 109.19 
  .word 7 # StringLiteral at 109.19  
  .word -23 # StringLiteral at 109.19 	 
8272:strLit_280: # StringLiteral at 109.19		 
  .byte 42 # StringLiteral at 113.18	  
  .byte 42 # StringLiteral at 113.18 	 
  .byte 42 # StringLiteral at 113.18  	
  .byte 42 # StringLiteral at 113.18   
  .byte 42 # StringLiteral at 113.18	
  .byte 42 # StringLiteral at 113.18		
  .byte 42 # StringLiteral at 113.18		
  .byte 42 # StringLiteral at 113.18 	
  .byte 42 # StringLiteral at 113.18		
  .byte 42 # StringLiteral at 113.18 	
  .byte 42 # StringLiteral at 113.18 	 
  .byte 42 # StringLiteral at 113.18  
  .byte 42 # StringLiteral at 113.18   
  .byte 42 # StringLiteral at 113.18			
  .byte 42 # StringLiteral at 113.18   
  .byte 42 # StringLiteral at 113.18  	
  .byte 42 # StringLiteral at 113.18  
  .byte 42 # StringLiteral at 113.18	
  .byte 42 # StringLiteral at 113.18	
  .byte 42 # StringLiteral at 113.18	  
  .byte 42 # StringLiteral at 113.18 
  .byte 42 # StringLiteral at 113.18  
  .byte 42 # StringLiteral at 113.18  
  .byte 42 # StringLiteral at 113.18	 
  .byte 42 # StringLiteral at 113.18 		
  .byte 42 # StringLiteral at 113.18	  
  .byte 42 # StringLiteral at 113.18	  
  .byte 42 # StringLiteral at 113.18	  
  .byte 10 # StringLiteral at 113.18	
  .byte 0 # StringLiteral at 113.18	 
  .byte 0 # StringLiteral at 113.18 	 
  .byte 0 # StringLiteral at 113.18	  
  .word CLASS_String # StringLiteral at 113.18   
  .word 9 # StringLiteral at 113.18		
  .word -29 # StringLiteral at 113.18   
8316:strLit_286: # StringLiteral at 113.18		
  .byte 98 # StringLiteral at 117.19	 
  .byte 49 # StringLiteral at 117.19	  
  .byte 32 # StringLiteral at 117.19 	 
  .byte 33 # StringLiteral at 117.19 	 
  .byte 61 # StringLiteral at 117.19	
  .byte 32 # StringLiteral at 117.19		 
  .byte 102 # StringLiteral at 117.19 	
  .byte 97 # StringLiteral at 117.19		 
  .byte 108 # StringLiteral at 117.19  
  .byte 115 # StringLiteral at 117.19		 
  .byte 101 # StringLiteral at 117.19 
  .byte 32 # StringLiteral at 117.19	 	
  .byte 61 # StringLiteral at 117.19   
  .byte 61 # StringLiteral at 117.19	 
  .byte 62 # StringLiteral at 117.19	  
  .byte 32 # StringLiteral at 117.19	  
  .byte 80 # StringLiteral at 117.19		 
  .byte 65 # StringLiteral at 117.19	
  .byte 83 # StringLiteral at 117.19	  
  .byte 83 # StringLiteral at 117.19		
  .byte 10 # StringLiteral at 117.19  
  .byte 0 # StringLiteral at 117.19	 	
  .byte 0 # StringLiteral at 117.19  
  .byte 0 # StringLiteral at 117.19			
  .word CLASS_String # StringLiteral at 117.19	  
  .word 7 # StringLiteral at 117.19 	 
  .word -21 # StringLiteral at 117.19			
8352:strLit_294: # StringLiteral at 117.19 	 
  .byte 98 # StringLiteral at 120.19  
  .byte 49 # StringLiteral at 120.19 	 
  .byte 32 # StringLiteral at 120.19		 
  .byte 33 # StringLiteral at 120.19	  
  .byte 61 # StringLiteral at 120.19 		
  .byte 32 # StringLiteral at 120.19	
  .byte 102 # StringLiteral at 120.19 	 
  .byte 97 # StringLiteral at 120.19 		
  .byte 108 # StringLiteral at 120.19	 	
  .byte 115 # StringLiteral at 120.19 
  .byte 101 # StringLiteral at 120.19	 
  .byte 32 # StringLiteral at 120.19	 	
  .byte 61 # StringLiteral at 120.19		 
  .byte 61 # StringLiteral at 120.19			
  .byte 62 # StringLiteral at 120.19	
  .byte 32 # StringLiteral at 120.19		
  .byte 70 # StringLiteral at 120.19	 
  .byte 65 # StringLiteral at 120.19	
  .byte 73 # StringLiteral at 120.19	  
  .byte 76 # StringLiteral at 120.19 
  .byte 69 # StringLiteral at 120.19			
  .byte 68 # StringLiteral at 120.19	  
  .byte 10 # StringLiteral at 120.19			
  .byte 0 # StringLiteral at 120.19		
  .word CLASS_String # StringLiteral at 120.19 		
  .word 7 # StringLiteral at 120.19			
  .word -23 # StringLiteral at 120.19	
8388:strLit_299: # StringLiteral at 120.19	
  .byte 98 # StringLiteral at 123.19  
  .byte 50 # StringLiteral at 123.19   
  .byte 32 # StringLiteral at 123.19	 	
  .byte 33 # StringLiteral at 123.19 		
  .byte 61 # StringLiteral at 123.19	  
  .byte 32 # StringLiteral at 123.19		 
  .byte 116 # StringLiteral at 123.19		
  .byte 114 # StringLiteral at 123.19  	
  .byte 117 # StringLiteral at 123.19 		
  .byte 101 # StringLiteral at 123.19			
  .byte 32 # StringLiteral at 123.19	
  .byte 61 # StringLiteral at 123.19	 	
  .byte 61 # StringLiteral at 123.19		
  .byte 62 # StringLiteral at 123.19 		
  .byte 32 # StringLiteral at 123.19 
  .byte 80 # StringLiteral at 123.19		
  .byte 65 # StringLiteral at 123.19	
  .byte 83 # StringLiteral at 123.19 	
  .byte 83 # StringLiteral at 123.19		 
  .byte 10 # StringLiteral at 123.19  	
  .word CLASS_String # StringLiteral at 123.19	 
  .word 6 # StringLiteral at 123.19  
  .word -20 # StringLiteral at 123.19 	 
8420:strLit_309: # StringLiteral at 123.19	 	
  .byte 98 # StringLiteral at 126.19   
  .byte 50 # StringLiteral at 126.19 
  .byte 32 # StringLiteral at 126.19	 	
  .byte 33 # StringLiteral at 126.19	  
  .byte 61 # StringLiteral at 126.19		
  .byte 32 # StringLiteral at 126.19		
  .byte 116 # StringLiteral at 126.19	 
  .byte 114 # StringLiteral at 126.19		 
  .byte 117 # StringLiteral at 126.19			
  .byte 101 # StringLiteral at 126.19	  
  .byte 32 # StringLiteral at 126.19 	 
  .byte 61 # StringLiteral at 126.19	
  .byte 61 # StringLiteral at 126.19	 	
  .byte 62 # StringLiteral at 126.19	 
  .byte 32 # StringLiteral at 126.19			
  .byte 70 # StringLiteral at 126.19			
  .byte 65 # StringLiteral at 126.19 
  .byte 73 # StringLiteral at 126.19   
  .byte 76 # StringLiteral at 126.19	
  .byte 69 # StringLiteral at 126.19 	 
  .byte 68 # StringLiteral at 126.19		 
  .byte 10 # StringLiteral at 126.19   
  .byte 0 # StringLiteral at 126.19		
  .byte 0 # StringLiteral at 126.19  	
  .word CLASS_String # StringLiteral at 126.19   
  .word 7 # StringLiteral at 126.19 	 
  .word -22 # StringLiteral at 126.19 
8456:strLit_314: # StringLiteral at 126.19 	
  .byte 98 # StringLiteral at 129.19	 
  .byte 51 # StringLiteral at 129.19	
  .byte 32 # StringLiteral at 129.19	 	
  .byte 33 # StringLiteral at 129.19		
  .byte 61 # StringLiteral at 129.19	  
  .byte 32 # StringLiteral at 129.19	  
  .byte 102 # StringLiteral at 129.19 	
  .byte 97 # StringLiteral at 129.19		
  .byte 108 # StringLiteral at 129.19		
  .byte 115 # StringLiteral at 129.19	 	
  .byte 101 # StringLiteral at 129.19  	
  .byte 32 # StringLiteral at 129.19  	
  .byte 61 # StringLiteral at 129.19	 	
  .byte 61 # StringLiteral at 129.19	 	
  .byte 62 # StringLiteral at 129.19 	 
  .byte 32 # StringLiteral at 129.19  	
  .byte 80 # StringLiteral at 129.19	 	
  .byte 65 # StringLiteral at 129.19 
  .byte 83 # StringLiteral at 129.19	 	
  .byte 83 # StringLiteral at 129.19  	
  .byte 10 # StringLiteral at 129.19	 	
  .byte 0 # StringLiteral at 129.19   
  .byte 0 # StringLiteral at 129.19 		
  .byte 0 # StringLiteral at 129.19	 	
  .word CLASS_String # StringLiteral at 129.19 		
  .word 7 # StringLiteral at 129.19	 	
  .word -21 # StringLiteral at 129.19  
8492:strLit_324: # StringLiteral at 129.19	  
  .byte 98 # StringLiteral at 132.19		 
  .byte 51 # StringLiteral at 132.19  
  .byte 32 # StringLiteral at 132.19			
  .byte 33 # StringLiteral at 132.19 	 
  .byte 61 # StringLiteral at 132.19	
  .byte 32 # StringLiteral at 132.19		 
  .byte 102 # StringLiteral at 132.19 	
  .byte 97 # StringLiteral at 132.19	
  .byte 108 # StringLiteral at 132.19			
  .byte 115 # StringLiteral at 132.19			
  .byte 101 # StringLiteral at 132.19	
  .byte 32 # StringLiteral at 132.19			
  .byte 61 # StringLiteral at 132.19 	
  .byte 61 # StringLiteral at 132.19   
  .byte 62 # StringLiteral at 132.19		 
  .byte 32 # StringLiteral at 132.19 	
  .byte 70 # StringLiteral at 132.19		
  .byte 65 # StringLiteral at 132.19 	
  .byte 73 # StringLiteral at 132.19 	
  .byte 76 # StringLiteral at 132.19			
  .byte 69 # StringLiteral at 132.19		 
  .byte 68 # StringLiteral at 132.19 	
  .byte 10 # StringLiteral at 132.19 	
  .byte 0 # StringLiteral at 132.19	
  .word CLASS_String # StringLiteral at 132.19 
  .word 7 # StringLiteral at 132.19 		
  .word -23 # StringLiteral at 132.19  
8528:strLit_329: # StringLiteral at 132.19 
  .byte 98 # StringLiteral at 135.19	 	
  .byte 52 # StringLiteral at 135.19		 
  .byte 32 # StringLiteral at 135.19  	
  .byte 33 # StringLiteral at 135.19 	 
  .byte 61 # StringLiteral at 135.19	 
  .byte 32 # StringLiteral at 135.19 	 
  .byte 102 # StringLiteral at 135.19	 
  .byte 97 # StringLiteral at 135.19 
  .byte 108 # StringLiteral at 135.19  
  .byte 115 # StringLiteral at 135.19   
  .byte 101 # StringLiteral at 135.19   
  .byte 32 # StringLiteral at 135.19 
  .byte 61 # StringLiteral at 135.19		
  .byte 61 # StringLiteral at 135.19	 
  .byte 62 # StringLiteral at 135.19		
  .byte 32 # StringLiteral at 135.19  
  .byte 80 # StringLiteral at 135.19		
  .byte 65 # StringLiteral at 135.19  	
  .byte 83 # StringLiteral at 135.19 
  .byte 83 # StringLiteral at 135.19	 	
  .byte 10 # StringLiteral at 135.19 	 
  .byte 0 # StringLiteral at 135.19 	
  .byte 0 # StringLiteral at 135.19	 	
  .byte 0 # StringLiteral at 135.19		 
  .word CLASS_String # StringLiteral at 135.19	  
  .word 7 # StringLiteral at 135.19 
  .word -21 # StringLiteral at 135.19 
8564:strLit_339: # StringLiteral at 135.19  	
  .byte 98 # StringLiteral at 138.19	 	
  .byte 52 # StringLiteral at 138.19 	
  .byte 32 # StringLiteral at 138.19 
  .byte 33 # StringLiteral at 138.19	 	
  .byte 61 # StringLiteral at 138.19	 	
  .byte 32 # StringLiteral at 138.19	
  .byte 102 # StringLiteral at 138.19 		
  .byte 97 # StringLiteral at 138.19   
  .byte 108 # StringLiteral at 138.19 		
  .byte 115 # StringLiteral at 138.19 	 
  .byte 101 # StringLiteral at 138.19 
  .byte 32 # StringLiteral at 138.19	
  .byte 61 # StringLiteral at 138.19 		
  .byte 61 # StringLiteral at 138.19	 
  .byte 62 # StringLiteral at 138.19 	 
  .byte 32 # StringLiteral at 138.19  
  .byte 70 # StringLiteral at 138.19	 
  .byte 65 # StringLiteral at 138.19   
  .byte 73 # StringLiteral at 138.19  	
  .byte 76 # StringLiteral at 138.19			
  .byte 69 # StringLiteral at 138.19	
  .byte 68 # StringLiteral at 138.19 	 
  .byte 10 # StringLiteral at 138.19	
  .byte 0 # StringLiteral at 138.19   
  .word CLASS_String # StringLiteral at 138.19   
  .word 7 # StringLiteral at 138.19	 	
  .word -23 # StringLiteral at 138.19 
8600:strLit_344: # StringLiteral at 138.19	 
  .byte 98 # StringLiteral at 141.19		 
  .byte 53 # StringLiteral at 141.19	 
  .byte 32 # StringLiteral at 141.19	 
  .byte 33 # StringLiteral at 141.19	
  .byte 61 # StringLiteral at 141.19 		
  .byte 32 # StringLiteral at 141.19 	 
  .byte 102 # StringLiteral at 141.19		 
  .byte 97 # StringLiteral at 141.19	 
  .byte 108 # StringLiteral at 141.19		 
  .byte 115 # StringLiteral at 141.19	  
  .byte 101 # StringLiteral at 141.19	 
  .byte 32 # StringLiteral at 141.19		 
  .byte 61 # StringLiteral at 141.19 
  .byte 61 # StringLiteral at 141.19			
  .byte 62 # StringLiteral at 141.19			
  .byte 32 # StringLiteral at 141.19 	 
  .byte 80 # StringLiteral at 141.19 
  .byte 65 # StringLiteral at 141.19 	 
  .byte 83 # StringLiteral at 141.19		
  .byte 83 # StringLiteral at 141.19 	 
  .byte 10 # StringLiteral at 141.19  	
  .byte 0 # StringLiteral at 141.19	 
  .byte 0 # StringLiteral at 141.19	 
  .byte 0 # StringLiteral at 141.19 	 
  .word CLASS_String # StringLiteral at 141.19	  
  .word 7 # StringLiteral at 141.19  	
  .word -21 # StringLiteral at 141.19 		
8636:strLit_354: # StringLiteral at 141.19  
  .byte 98 # StringLiteral at 144.19	 
  .byte 53 # StringLiteral at 144.19	 	
  .byte 32 # StringLiteral at 144.19 
  .byte 33 # StringLiteral at 144.19  	
  .byte 61 # StringLiteral at 144.19		 
  .byte 32 # StringLiteral at 144.19 	 
  .byte 102 # StringLiteral at 144.19	 	
  .byte 97 # StringLiteral at 144.19	 	
  .byte 108 # StringLiteral at 144.19	 
  .byte 115 # StringLiteral at 144.19  	
  .byte 101 # StringLiteral at 144.19 
  .byte 32 # StringLiteral at 144.19  
  .byte 61 # StringLiteral at 144.19	  
  .byte 61 # StringLiteral at 144.19	
  .byte 62 # StringLiteral at 144.19	
  .byte 32 # StringLiteral at 144.19  
  .byte 70 # StringLiteral at 144.19	 	
  .byte 65 # StringLiteral at 144.19  
  .byte 73 # StringLiteral at 144.19	 
  .byte 76 # StringLiteral at 144.19	 
  .byte 69 # StringLiteral at 144.19	
  .byte 68 # StringLiteral at 144.19  	
  .byte 10 # StringLiteral at 144.19	 
  .byte 0 # StringLiteral at 144.19	
  .word CLASS_String # StringLiteral at 144.19  
  .word 7 # StringLiteral at 144.19			
  .word -23 # StringLiteral at 144.19   
8672:strLit_359: # StringLiteral at 144.19		
  .byte 98 # StringLiteral at 147.19			
  .byte 54 # StringLiteral at 147.19 	 
  .byte 32 # StringLiteral at 147.19	
  .byte 33 # StringLiteral at 147.19	 	
  .byte 61 # StringLiteral at 147.19		
  .byte 32 # StringLiteral at 147.19	 	
  .byte 102 # StringLiteral at 147.19   
  .byte 97 # StringLiteral at 147.19		 
  .byte 108 # StringLiteral at 147.19   
  .byte 115 # StringLiteral at 147.19			
  .byte 101 # StringLiteral at 147.19  
  .byte 32 # StringLiteral at 147.19		
  .byte 61 # StringLiteral at 147.19 
  .byte 61 # StringLiteral at 147.19 	
  .byte 62 # StringLiteral at 147.19  	
  .byte 32 # StringLiteral at 147.19		 
  .byte 80 # StringLiteral at 147.19 	 
  .byte 65 # StringLiteral at 147.19 	 
  .byte 83 # StringLiteral at 147.19	 
  .byte 83 # StringLiteral at 147.19	 	
  .byte 10 # StringLiteral at 147.19 		
  .byte 0 # StringLiteral at 147.19	 	
  .byte 0 # StringLiteral at 147.19 	 
  .byte 0 # StringLiteral at 147.19	 	
  .word CLASS_String # StringLiteral at 147.19	 
  .word 7 # StringLiteral at 147.19 	
  .word -21 # StringLiteral at 147.19		
8708:strLit_369: # StringLiteral at 147.19	
  .byte 98 # StringLiteral at 150.19	  
  .byte 54 # StringLiteral at 150.19	 
  .byte 32 # StringLiteral at 150.19 
  .byte 33 # StringLiteral at 150.19			
  .byte 61 # StringLiteral at 150.19 	
  .byte 32 # StringLiteral at 150.19  	
  .byte 102 # StringLiteral at 150.19  	
  .byte 97 # StringLiteral at 150.19	
  .byte 108 # StringLiteral at 150.19		 
  .byte 115 # StringLiteral at 150.19		
  .byte 101 # StringLiteral at 150.19 	
  .byte 32 # StringLiteral at 150.19	  
  .byte 61 # StringLiteral at 150.19		 
  .byte 61 # StringLiteral at 150.19  
  .byte 62 # StringLiteral at 150.19 	 
  .byte 32 # StringLiteral at 150.19	  
  .byte 70 # StringLiteral at 150.19	 
  .byte 65 # StringLiteral at 150.19 	
  .byte 73 # StringLiteral at 150.19   
  .byte 76 # StringLiteral at 150.19  	
  .byte 69 # StringLiteral at 150.19   
  .byte 68 # StringLiteral at 150.19 
  .byte 10 # StringLiteral at 150.19	  
  .byte 0 # StringLiteral at 150.19	 
  .word CLASS_String # StringLiteral at 150.19		
  .word 7 # StringLiteral at 150.19		
  .word -23 # StringLiteral at 150.19   
8744:strLit_374: # StringLiteral at 150.19			
  .byte 98 # StringLiteral at 153.19 		
  .byte 55 # StringLiteral at 153.19 		
  .byte 32 # StringLiteral at 153.19   
  .byte 33 # StringLiteral at 153.19	  
  .byte 61 # StringLiteral at 153.19 
  .byte 32 # StringLiteral at 153.19		
  .byte 102 # StringLiteral at 153.19	  
  .byte 97 # StringLiteral at 153.19	
  .byte 108 # StringLiteral at 153.19  
  .byte 115 # StringLiteral at 153.19  	
  .byte 101 # StringLiteral at 153.19 	 
  .byte 32 # StringLiteral at 153.19  
  .byte 61 # StringLiteral at 153.19 	
  .byte 61 # StringLiteral at 153.19	
  .byte 62 # StringLiteral at 153.19  
  .byte 32 # StringLiteral at 153.19		 
  .byte 80 # StringLiteral at 153.19  	
  .byte 65 # StringLiteral at 153.19 		
  .byte 83 # StringLiteral at 153.19	  
  .byte 83 # StringLiteral at 153.19 		
  .byte 10 # StringLiteral at 153.19		 
  .byte 0 # StringLiteral at 153.19 		
  .byte 0 # StringLiteral at 153.19	  
  .byte 0 # StringLiteral at 153.19 
  .word CLASS_String # StringLiteral at 153.19  	
  .word 7 # StringLiteral at 153.19 	 
  .word -21 # StringLiteral at 153.19	 	
8780:strLit_384: # StringLiteral at 153.19	
  .byte 98 # StringLiteral at 156.19	 	
  .byte 55 # StringLiteral at 156.19 		
  .byte 32 # StringLiteral at 156.19  	
  .byte 33 # StringLiteral at 156.19	 	
  .byte 61 # StringLiteral at 156.19 		
  .byte 32 # StringLiteral at 156.19 	
  .byte 102 # StringLiteral at 156.19	  
  .byte 97 # StringLiteral at 156.19  
  .byte 108 # StringLiteral at 156.19		 
  .byte 115 # StringLiteral at 156.19		 
  .byte 101 # StringLiteral at 156.19	 	
  .byte 32 # StringLiteral at 156.19			
  .byte 61 # StringLiteral at 156.19	
  .byte 61 # StringLiteral at 156.19 	 
  .byte 62 # StringLiteral at 156.19		
  .byte 32 # StringLiteral at 156.19		 
  .byte 70 # StringLiteral at 156.19		
  .byte 65 # StringLiteral at 156.19 	
  .byte 73 # StringLiteral at 156.19		 
  .byte 76 # StringLiteral at 156.19 
  .byte 69 # StringLiteral at 156.19  
  .byte 68 # StringLiteral at 156.19	 	
  .byte 10 # StringLiteral at 156.19	  
  .byte 0 # StringLiteral at 156.19	
  .word CLASS_String # StringLiteral at 156.19		
  .word 7 # StringLiteral at 156.19			
  .word -23 # StringLiteral at 156.19		
8816:strLit_389: # StringLiteral at 156.19	  
  .byte 98 # StringLiteral at 159.19			
  .byte 56 # StringLiteral at 159.19   
  .byte 32 # StringLiteral at 159.19 	
  .byte 33 # StringLiteral at 159.19			
  .byte 61 # StringLiteral at 159.19   
  .byte 32 # StringLiteral at 159.19	  
  .byte 102 # StringLiteral at 159.19   
  .byte 97 # StringLiteral at 159.19		 
  .byte 108 # StringLiteral at 159.19 	 
  .byte 115 # StringLiteral at 159.19 	
  .byte 101 # StringLiteral at 159.19 	 
  .byte 32 # StringLiteral at 159.19 
  .byte 61 # StringLiteral at 159.19	 	
  .byte 61 # StringLiteral at 159.19		
  .byte 62 # StringLiteral at 159.19 	 
  .byte 32 # StringLiteral at 159.19	 
  .byte 80 # StringLiteral at 159.19	  
  .byte 65 # StringLiteral at 159.19 
  .byte 83 # StringLiteral at 159.19  
  .byte 83 # StringLiteral at 159.19		
  .byte 10 # StringLiteral at 159.19   
  .byte 0 # StringLiteral at 159.19 	 
  .byte 0 # StringLiteral at 159.19 
  .byte 0 # StringLiteral at 159.19 		
  .word CLASS_String # StringLiteral at 159.19		 
  .word 7 # StringLiteral at 159.19		
  .word -21 # StringLiteral at 159.19			
8852:strLit_399: # StringLiteral at 159.19 		
  .byte 98 # StringLiteral at 162.19 
  .byte 56 # StringLiteral at 162.19		
  .byte 32 # StringLiteral at 162.19  
  .byte 33 # StringLiteral at 162.19 	 
  .byte 61 # StringLiteral at 162.19			
  .byte 32 # StringLiteral at 162.19 	
  .byte 102 # StringLiteral at 162.19	  
  .byte 97 # StringLiteral at 162.19	 
  .byte 108 # StringLiteral at 162.19  
  .byte 115 # StringLiteral at 162.19		 
  .byte 101 # StringLiteral at 162.19	 
  .byte 32 # StringLiteral at 162.19 	 
  .byte 61 # StringLiteral at 162.19 	 
  .byte 61 # StringLiteral at 162.19	  
  .byte 62 # StringLiteral at 162.19  	
  .byte 32 # StringLiteral at 162.19		
  .byte 70 # StringLiteral at 162.19		 
  .byte 65 # StringLiteral at 162.19	  
  .byte 73 # StringLiteral at 162.19			
  .byte 76 # StringLiteral at 162.19		 
  .byte 69 # StringLiteral at 162.19	 	
  .byte 68 # StringLiteral at 162.19   
  .byte 10 # StringLiteral at 162.19	
  .byte 0 # StringLiteral at 162.19		
  .word CLASS_String # StringLiteral at 162.19 
  .word 7 # StringLiteral at 162.19	 	
  .word -23 # StringLiteral at 162.19			
8888:strLit_404: # StringLiteral at 162.19			
  .byte 98 # StringLiteral at 165.19  	
  .byte 57 # StringLiteral at 165.19		 
  .byte 32 # StringLiteral at 165.19 	
  .byte 33 # StringLiteral at 165.19		 
  .byte 61 # StringLiteral at 165.19  
  .byte 32 # StringLiteral at 165.19  
  .byte 102 # StringLiteral at 165.19   
  .byte 97 # StringLiteral at 165.19	 
  .byte 108 # StringLiteral at 165.19		 
  .byte 115 # StringLiteral at 165.19   
  .byte 101 # StringLiteral at 165.19 		
  .byte 32 # StringLiteral at 165.19 	
  .byte 61 # StringLiteral at 165.19	 	
  .byte 61 # StringLiteral at 165.19			
  .byte 62 # StringLiteral at 165.19	 
  .byte 32 # StringLiteral at 165.19		 
  .byte 80 # StringLiteral at 165.19 	
  .byte 65 # StringLiteral at 165.19   
  .byte 83 # StringLiteral at 165.19		
  .byte 83 # StringLiteral at 165.19			
  .byte 10 # StringLiteral at 165.19 
  .byte 0 # StringLiteral at 165.19 
  .byte 0 # StringLiteral at 165.19  	
  .byte 0 # StringLiteral at 165.19 		
  .word CLASS_String # StringLiteral at 165.19		 
  .word 7 # StringLiteral at 165.19  	
  .word -21 # StringLiteral at 165.19  	
8924:strLit_414: # StringLiteral at 165.19		
  .byte 98 # StringLiteral at 168.19			
  .byte 57 # StringLiteral at 168.19	 	
  .byte 32 # StringLiteral at 168.19 
  .byte 33 # StringLiteral at 168.19		
  .byte 61 # StringLiteral at 168.19	 
  .byte 32 # StringLiteral at 168.19  	
  .byte 102 # StringLiteral at 168.19	  
  .byte 97 # StringLiteral at 168.19		
  .byte 108 # StringLiteral at 168.19			
  .byte 115 # StringLiteral at 168.19  
  .byte 101 # StringLiteral at 168.19 
  .byte 32 # StringLiteral at 168.19		
  .byte 61 # StringLiteral at 168.19 
  .byte 61 # StringLiteral at 168.19			
  .byte 62 # StringLiteral at 168.19 	 
  .byte 32 # StringLiteral at 168.19	 
  .byte 70 # StringLiteral at 168.19 		
  .byte 65 # StringLiteral at 168.19 	
  .byte 73 # StringLiteral at 168.19	 
  .byte 76 # StringLiteral at 168.19  
  .byte 69 # StringLiteral at 168.19  	
  .byte 68 # StringLiteral at 168.19	  
  .byte 10 # StringLiteral at 168.19	
  .byte 0 # StringLiteral at 168.19	
  .word CLASS_String # StringLiteral at 168.19  	
  .word 7 # StringLiteral at 168.19		 
  .word -23 # StringLiteral at 168.19 	 
8960:strLit_419: # StringLiteral at 168.19	  
  .byte 98 # StringLiteral at 171.19	 
  .byte 49 # StringLiteral at 171.19  	
  .byte 48 # StringLiteral at 171.19			
  .byte 32 # StringLiteral at 171.19 	 
  .byte 33 # StringLiteral at 171.19	  
  .byte 61 # StringLiteral at 171.19   
  .byte 32 # StringLiteral at 171.19 	
  .byte 102 # StringLiteral at 171.19	  
  .byte 97 # StringLiteral at 171.19	 
  .byte 108 # StringLiteral at 171.19 	 
  .byte 115 # StringLiteral at 171.19 		
  .byte 101 # StringLiteral at 171.19	
  .byte 32 # StringLiteral at 171.19  	
  .byte 61 # StringLiteral at 171.19 	 
  .byte 61 # StringLiteral at 171.19   
  .byte 62 # StringLiteral at 171.19  	
  .byte 32 # StringLiteral at 171.19		 
  .byte 80 # StringLiteral at 171.19	
  .byte 65 # StringLiteral at 171.19   
  .byte 83 # StringLiteral at 171.19  
  .byte 83 # StringLiteral at 171.19	 	
  .byte 10 # StringLiteral at 171.19			
  .byte 0 # StringLiteral at 171.19		
  .byte 0 # StringLiteral at 171.19	 
  .word CLASS_String # StringLiteral at 171.19	  
  .word 7 # StringLiteral at 171.19 
  .word -22 # StringLiteral at 171.19	
8996:strLit_429: # StringLiteral at 171.19	  
  .byte 98 # StringLiteral at 174.19  	
  .byte 49 # StringLiteral at 174.19	 
  .byte 48 # StringLiteral at 174.19			
  .byte 32 # StringLiteral at 174.19	 
  .byte 33 # StringLiteral at 174.19 
  .byte 61 # StringLiteral at 174.19			
  .byte 32 # StringLiteral at 174.19 
  .byte 102 # StringLiteral at 174.19   
  .byte 97 # StringLiteral at 174.19	
  .byte 108 # StringLiteral at 174.19	  
  .byte 115 # StringLiteral at 174.19		 
  .byte 101 # StringLiteral at 174.19 	 
  .byte 32 # StringLiteral at 174.19 	 
  .byte 61 # StringLiteral at 174.19   
  .byte 61 # StringLiteral at 174.19		 
  .byte 62 # StringLiteral at 174.19 	
  .byte 32 # StringLiteral at 174.19  	
  .byte 70 # StringLiteral at 174.19 	 
  .byte 65 # StringLiteral at 174.19		 
  .byte 73 # StringLiteral at 174.19	
  .byte 76 # StringLiteral at 174.19 		
  .byte 69 # StringLiteral at 174.19		 
  .byte 68 # StringLiteral at 174.19  	
  .byte 10 # StringLiteral at 174.19		
  .word CLASS_String # StringLiteral at 174.19  	
  .word 7 # StringLiteral at 174.19 	 
  .word -24 # StringLiteral at 174.19	  
9032:strLit_434: # StringLiteral at 174.19 	 
  .byte 98 # StringLiteral at 177.19	 	
  .byte 49 # StringLiteral at 177.19			
  .byte 49 # StringLiteral at 177.19 	 
  .byte 32 # StringLiteral at 177.19 
  .byte 33 # StringLiteral at 177.19		
  .byte 61 # StringLiteral at 177.19 	 
  .byte 32 # StringLiteral at 177.19		 
  .byte 102 # StringLiteral at 177.19	  
  .byte 97 # StringLiteral at 177.19 	 
  .byte 108 # StringLiteral at 177.19 	
  .byte 115 # StringLiteral at 177.19			
  .byte 101 # StringLiteral at 177.19 	
  .byte 32 # StringLiteral at 177.19 	 
  .byte 61 # StringLiteral at 177.19	  
  .byte 61 # StringLiteral at 177.19  
  .byte 62 # StringLiteral at 177.19	  
  .byte 32 # StringLiteral at 177.19	 	
  .byte 80 # StringLiteral at 177.19 	 
  .byte 65 # StringLiteral at 177.19  
  .byte 83 # StringLiteral at 177.19	
  .byte 83 # StringLiteral at 177.19   
  .byte 10 # StringLiteral at 177.19	 	
  .byte 0 # StringLiteral at 177.19  	
  .byte 0 # StringLiteral at 177.19  
  .word CLASS_String # StringLiteral at 177.19	
  .word 7 # StringLiteral at 177.19	 
  .word -22 # StringLiteral at 177.19	
9068:strLit_444: # StringLiteral at 177.19  
  .byte 98 # StringLiteral at 180.19   
  .byte 49 # StringLiteral at 180.19  
  .byte 49 # StringLiteral at 180.19	 	
  .byte 32 # StringLiteral at 180.19 		
  .byte 33 # StringLiteral at 180.19			
  .byte 61 # StringLiteral at 180.19 	 
  .byte 32 # StringLiteral at 180.19 		
  .byte 102 # StringLiteral at 180.19 	
  .byte 97 # StringLiteral at 180.19  	
  .byte 108 # StringLiteral at 180.19	 
  .byte 115 # StringLiteral at 180.19 		
  .byte 101 # StringLiteral at 180.19	 
  .byte 32 # StringLiteral at 180.19	  
  .byte 61 # StringLiteral at 180.19 	 
  .byte 61 # StringLiteral at 180.19	
  .byte 62 # StringLiteral at 180.19 
  .byte 32 # StringLiteral at 180.19 	 
  .byte 70 # StringLiteral at 180.19 	
  .byte 65 # StringLiteral at 180.19	 
  .byte 73 # StringLiteral at 180.19			
  .byte 76 # StringLiteral at 180.19 
  .byte 69 # StringLiteral at 180.19 
  .byte 68 # StringLiteral at 180.19	  
  .byte 10 # StringLiteral at 180.19		
  .word CLASS_String # StringLiteral at 180.19   
  .word 7 # StringLiteral at 180.19 
  .word -24 # StringLiteral at 180.19	 	
9104:strLit_449: # StringLiteral at 180.19 		
  .byte 98 # StringLiteral at 183.19	 
  .byte 49 # StringLiteral at 183.19  
  .byte 50 # StringLiteral at 183.19			
  .byte 32 # StringLiteral at 183.19   
  .byte 33 # StringLiteral at 183.19	  
  .byte 61 # StringLiteral at 183.19		 
  .byte 32 # StringLiteral at 183.19		
  .byte 102 # StringLiteral at 183.19	
  .byte 97 # StringLiteral at 183.19		
  .byte 108 # StringLiteral at 183.19		 
  .byte 115 # StringLiteral at 183.19 
  .byte 101 # StringLiteral at 183.19	  
  .byte 32 # StringLiteral at 183.19 
  .byte 61 # StringLiteral at 183.19			
  .byte 61 # StringLiteral at 183.19  	
  .byte 62 # StringLiteral at 183.19	 	
  .byte 32 # StringLiteral at 183.19		 
  .byte 80 # StringLiteral at 183.19	 	
  .byte 65 # StringLiteral at 183.19 	 
  .byte 83 # StringLiteral at 183.19 	 
  .byte 83 # StringLiteral at 183.19 
  .byte 10 # StringLiteral at 183.19  	
  .byte 0 # StringLiteral at 183.19			
  .byte 0 # StringLiteral at 183.19	 
  .word CLASS_String # StringLiteral at 183.19	
  .word 7 # StringLiteral at 183.19			
  .word -22 # StringLiteral at 183.19   
9140:strLit_459: # StringLiteral at 183.19  	
  .byte 98 # StringLiteral at 186.19	 	
  .byte 49 # StringLiteral at 186.19  
  .byte 50 # StringLiteral at 186.19	  
  .byte 32 # StringLiteral at 186.19  	
  .byte 33 # StringLiteral at 186.19	 
  .byte 61 # StringLiteral at 186.19			
  .byte 32 # StringLiteral at 186.19   
  .byte 102 # StringLiteral at 186.19			
  .byte 97 # StringLiteral at 186.19	 
  .byte 108 # StringLiteral at 186.19	 	
  .byte 115 # StringLiteral at 186.19	  
  .byte 101 # StringLiteral at 186.19 	
  .byte 32 # StringLiteral at 186.19   
  .byte 61 # StringLiteral at 186.19 	 
  .byte 61 # StringLiteral at 186.19   
  .byte 62 # StringLiteral at 186.19 		
  .byte 32 # StringLiteral at 186.19	 
  .byte 70 # StringLiteral at 186.19 	
  .byte 65 # StringLiteral at 186.19  
  .byte 73 # StringLiteral at 186.19  	
  .byte 76 # StringLiteral at 186.19	  
  .byte 69 # StringLiteral at 186.19  	
  .byte 68 # StringLiteral at 186.19 		
  .byte 10 # StringLiteral at 186.19	 
  .word CLASS_String # StringLiteral at 186.19	 
  .word 7 # StringLiteral at 186.19	
  .word -24 # StringLiteral at 186.19	 	
9176:strLit_464: # StringLiteral at 186.19			
  .byte 98 # StringLiteral at 189.19 		
  .byte 49 # StringLiteral at 189.19 	 
  .byte 51 # StringLiteral at 189.19		
  .byte 32 # StringLiteral at 189.19 	 
  .byte 33 # StringLiteral at 189.19	  
  .byte 61 # StringLiteral at 189.19 		
  .byte 32 # StringLiteral at 189.19	 
  .byte 102 # StringLiteral at 189.19		
  .byte 97 # StringLiteral at 189.19 
  .byte 108 # StringLiteral at 189.19	
  .byte 115 # StringLiteral at 189.19 	 
  .byte 101 # StringLiteral at 189.19			
  .byte 32 # StringLiteral at 189.19   
  .byte 61 # StringLiteral at 189.19  
  .byte 61 # StringLiteral at 189.19		 
  .byte 62 # StringLiteral at 189.19 		
  .byte 32 # StringLiteral at 189.19			
  .byte 80 # StringLiteral at 189.19  
  .byte 65 # StringLiteral at 189.19	
  .byte 83 # StringLiteral at 189.19 		
  .byte 83 # StringLiteral at 189.19		
  .byte 10 # StringLiteral at 189.19   
  .byte 0 # StringLiteral at 189.19	
  .byte 0 # StringLiteral at 189.19  	
  .word CLASS_String # StringLiteral at 189.19  
  .word 7 # StringLiteral at 189.19 
  .word -22 # StringLiteral at 189.19	 	
9212:strLit_474: # StringLiteral at 189.19  
  .byte 98 # StringLiteral at 192.19   
  .byte 49 # StringLiteral at 192.19  
  .byte 51 # StringLiteral at 192.19		 
  .byte 32 # StringLiteral at 192.19		
  .byte 33 # StringLiteral at 192.19	 	
  .byte 61 # StringLiteral at 192.19	 
  .byte 32 # StringLiteral at 192.19 	
  .byte 102 # StringLiteral at 192.19	 	
  .byte 97 # StringLiteral at 192.19   
  .byte 108 # StringLiteral at 192.19  
  .byte 115 # StringLiteral at 192.19		
  .byte 101 # StringLiteral at 192.19  	
  .byte 32 # StringLiteral at 192.19	  
  .byte 61 # StringLiteral at 192.19	 
  .byte 61 # StringLiteral at 192.19			
  .byte 62 # StringLiteral at 192.19	 	
  .byte 32 # StringLiteral at 192.19	
  .byte 70 # StringLiteral at 192.19 		
  .byte 65 # StringLiteral at 192.19	
  .byte 73 # StringLiteral at 192.19		 
  .byte 76 # StringLiteral at 192.19  	
  .byte 69 # StringLiteral at 192.19		 
  .byte 68 # StringLiteral at 192.19   
  .byte 10 # StringLiteral at 192.19  
  .word CLASS_String # StringLiteral at 192.19  	
  .word 7 # StringLiteral at 192.19		
  .word -24 # StringLiteral at 192.19 
9248:strLit_479: # StringLiteral at 192.19 
  .byte 42 # StringLiteral at 196.18 	 
  .byte 42 # StringLiteral at 196.18		
  .byte 42 # StringLiteral at 196.18  	
  .byte 42 # StringLiteral at 196.18	
  .byte 42 # StringLiteral at 196.18	
  .byte 42 # StringLiteral at 196.18	
  .byte 42 # StringLiteral at 196.18  	
  .byte 42 # StringLiteral at 196.18		
  .byte 42 # StringLiteral at 196.18 	
  .byte 42 # StringLiteral at 196.18  
  .byte 42 # StringLiteral at 196.18   
  .byte 42 # StringLiteral at 196.18 	 
  .byte 42 # StringLiteral at 196.18	  
  .byte 42 # StringLiteral at 196.18			
  .byte 42 # StringLiteral at 196.18	  
  .byte 42 # StringLiteral at 196.18 
  .byte 42 # StringLiteral at 196.18	 
  .byte 42 # StringLiteral at 196.18   
  .byte 42 # StringLiteral at 196.18   
  .byte 42 # StringLiteral at 196.18   
  .byte 42 # StringLiteral at 196.18  	
  .byte 42 # StringLiteral at 196.18 
  .byte 42 # StringLiteral at 196.18	
  .byte 42 # StringLiteral at 196.18	 
  .byte 42 # StringLiteral at 196.18 		
  .byte 42 # StringLiteral at 196.18 	 
  .byte 42 # StringLiteral at 196.18 	
  .byte 42 # StringLiteral at 196.18   
  .byte 10 # StringLiteral at 196.18  
  .byte 0 # StringLiteral at 196.18	 	
  .byte 0 # StringLiteral at 196.18 		
  .byte 0 # StringLiteral at 196.18		
  .word CLASS_String # StringLiteral at 196.18  	
  .word 9 # StringLiteral at 196.18	  
  .word -29 # StringLiteral at 196.18	 	
9292:strLit_485: # StringLiteral at 196.18 
  .byte 33 # StringLiteral at 200.19 		
  .byte 40 # StringLiteral at 200.19	 	
  .byte 49 # StringLiteral at 200.19 
  .byte 32 # StringLiteral at 200.19 
  .byte 61 # StringLiteral at 200.19			
  .byte 61 # StringLiteral at 200.19  
  .byte 32 # StringLiteral at 200.19			
  .byte 50 # StringLiteral at 200.19			
  .byte 41 # StringLiteral at 200.19 
  .byte 32 # StringLiteral at 200.19 	
  .byte 61 # StringLiteral at 200.19		
  .byte 61 # StringLiteral at 200.19		 
  .byte 62 # StringLiteral at 200.19 
  .byte 32 # StringLiteral at 200.19  
  .byte 80 # StringLiteral at 200.19		
  .byte 65 # StringLiteral at 200.19	  
  .byte 83 # StringLiteral at 200.19 
  .byte 83 # StringLiteral at 200.19 		
  .byte 10 # StringLiteral at 200.19 		
  .byte 0 # StringLiteral at 200.19   
  .word CLASS_String # StringLiteral at 200.19	 	
  .word 6 # StringLiteral at 200.19		
  .word -19 # StringLiteral at 200.19	 	
9324:strLit_493: # StringLiteral at 200.19 		
  .byte 33 # StringLiteral at 203.19  	
  .byte 40 # StringLiteral at 203.19		 
  .byte 49 # StringLiteral at 203.19		
  .byte 32 # StringLiteral at 203.19		 
  .byte 61 # StringLiteral at 203.19	  
  .byte 61 # StringLiteral at 203.19 
  .byte 32 # StringLiteral at 203.19 	 
  .byte 50 # StringLiteral at 203.19  
  .byte 41 # StringLiteral at 203.19			
  .byte 32 # StringLiteral at 203.19	 
  .byte 61 # StringLiteral at 203.19	
  .byte 61 # StringLiteral at 203.19	
  .byte 62 # StringLiteral at 203.19	  
  .byte 32 # StringLiteral at 203.19 		
  .byte 70 # StringLiteral at 203.19 
  .byte 65 # StringLiteral at 203.19	
  .byte 73 # StringLiteral at 203.19			
  .byte 76 # StringLiteral at 203.19   
  .byte 69 # StringLiteral at 203.19 
  .byte 68 # StringLiteral at 203.19		 
  .byte 10 # StringLiteral at 203.19	 	
  .byte 0 # StringLiteral at 203.19	 
  .byte 0 # StringLiteral at 203.19	  
  .byte 0 # StringLiteral at 203.19  
  .word CLASS_String # StringLiteral at 203.19   
  .word 7 # StringLiteral at 203.19	 
  .word -21 # StringLiteral at 203.19 	 
9360:strLit_498: # StringLiteral at 203.19	 
  .byte 33 # StringLiteral at 206.19 	
  .byte 40 # StringLiteral at 206.19  	
  .byte 33 # StringLiteral at 206.19	 
  .byte 40 # StringLiteral at 206.19		 
  .byte 33 # StringLiteral at 206.19  	
  .byte 40 # StringLiteral at 206.19  	
  .byte 49 # StringLiteral at 206.19 		
  .byte 32 # StringLiteral at 206.19			
  .byte 61 # StringLiteral at 206.19		 
  .byte 61 # StringLiteral at 206.19  	
  .byte 32 # StringLiteral at 206.19 
  .byte 50 # StringLiteral at 206.19	 	
  .byte 41 # StringLiteral at 206.19 
  .byte 41 # StringLiteral at 206.19 	
  .byte 41 # StringLiteral at 206.19	 
  .byte 32 # StringLiteral at 206.19	 
  .byte 61 # StringLiteral at 206.19  
  .byte 61 # StringLiteral at 206.19	 	
  .byte 62 # StringLiteral at 206.19 		
  .byte 32 # StringLiteral at 206.19			
  .byte 80 # StringLiteral at 206.19	 	
  .byte 65 # StringLiteral at 206.19 	 
  .byte 83 # StringLiteral at 206.19		 
  .byte 83 # StringLiteral at 206.19		
  .byte 10 # StringLiteral at 206.19	
  .byte 0 # StringLiteral at 206.19  	
  .byte 0 # StringLiteral at 206.19	
  .byte 0 # StringLiteral at 206.19 		
  .word CLASS_String # StringLiteral at 206.19	 
  .word 8 # StringLiteral at 206.19 		
  .word -25 # StringLiteral at 206.19 		
9400:strLit_510: # StringLiteral at 206.19		 
  .byte 33 # StringLiteral at 209.19	 
  .byte 40 # StringLiteral at 209.19 		
  .byte 33 # StringLiteral at 209.19 
  .byte 40 # StringLiteral at 209.19 	
  .byte 33 # StringLiteral at 209.19		 
  .byte 40 # StringLiteral at 209.19 	
  .byte 49 # StringLiteral at 209.19 	
  .byte 32 # StringLiteral at 209.19	 	
  .byte 61 # StringLiteral at 209.19   
  .byte 61 # StringLiteral at 209.19	
  .byte 32 # StringLiteral at 209.19 		
  .byte 50 # StringLiteral at 209.19	
  .byte 41 # StringLiteral at 209.19	 	
  .byte 41 # StringLiteral at 209.19  
  .byte 41 # StringLiteral at 209.19	 	
  .byte 32 # StringLiteral at 209.19 		
  .byte 61 # StringLiteral at 209.19	  
  .byte 61 # StringLiteral at 209.19		 
  .byte 62 # StringLiteral at 209.19   
  .byte 32 # StringLiteral at 209.19		
  .byte 70 # StringLiteral at 209.19	 
  .byte 65 # StringLiteral at 209.19  
  .byte 73 # StringLiteral at 209.19	 	
  .byte 76 # StringLiteral at 209.19	 
  .byte 69 # StringLiteral at 209.19 		
  .byte 68 # StringLiteral at 209.19 	 
  .byte 10 # StringLiteral at 209.19	 
  .byte 0 # StringLiteral at 209.19 
  .word CLASS_String # StringLiteral at 209.19 	 
  .word 8 # StringLiteral at 209.19	  
  .word -27 # StringLiteral at 209.19	
9440:strLit_515: # StringLiteral at 209.19		
  .byte 33 # StringLiteral at 212.19 		
  .byte 40 # StringLiteral at 212.19 		
  .byte 33 # StringLiteral at 212.19	  
  .byte 40 # StringLiteral at 212.19 	
  .byte 33 # StringLiteral at 212.19		 
  .byte 40 # StringLiteral at 212.19  	
  .byte 33 # StringLiteral at 212.19	
  .byte 40 # StringLiteral at 212.19 
  .byte 49 # StringLiteral at 212.19	  
  .byte 32 # StringLiteral at 212.19   
  .byte 61 # StringLiteral at 212.19			
  .byte 61 # StringLiteral at 212.19	 
  .byte 32 # StringLiteral at 212.19	
  .byte 49 # StringLiteral at 212.19		
  .byte 41 # StringLiteral at 212.19 	
  .byte 41 # StringLiteral at 212.19		 
  .byte 41 # StringLiteral at 212.19		
  .byte 41 # StringLiteral at 212.19	  
  .byte 32 # StringLiteral at 212.19		 
  .byte 61 # StringLiteral at 212.19	  
  .byte 61 # StringLiteral at 212.19	  
  .byte 62 # StringLiteral at 212.19	 
  .byte 32 # StringLiteral at 212.19   
  .byte 80 # StringLiteral at 212.19	  
  .byte 65 # StringLiteral at 212.19	
  .byte 83 # StringLiteral at 212.19   
  .byte 83 # StringLiteral at 212.19		
  .byte 10 # StringLiteral at 212.19 	
  .word CLASS_String # StringLiteral at 212.19		
  .word 8 # StringLiteral at 212.19			
  .word -28 # StringLiteral at 212.19	
9480:strLit_528: # StringLiteral at 212.19 	
  .byte 33 # StringLiteral at 215.19  	
  .byte 40 # StringLiteral at 215.19	 	
  .byte 33 # StringLiteral at 215.19 		
  .byte 40 # StringLiteral at 215.19	
  .byte 33 # StringLiteral at 215.19	 	
  .byte 40 # StringLiteral at 215.19	  
  .byte 33 # StringLiteral at 215.19	
  .byte 40 # StringLiteral at 215.19	 	
  .byte 49 # StringLiteral at 215.19  	
  .byte 32 # StringLiteral at 215.19		 
  .byte 61 # StringLiteral at 215.19  	
  .byte 61 # StringLiteral at 215.19 
  .byte 32 # StringLiteral at 215.19	 
  .byte 49 # StringLiteral at 215.19	  
  .byte 41 # StringLiteral at 215.19  
  .byte 41 # StringLiteral at 215.19  
  .byte 41 # StringLiteral at 215.19			
  .byte 41 # StringLiteral at 215.19		 
  .byte 32 # StringLiteral at 215.19  	
  .byte 61 # StringLiteral at 215.19 	 
  .byte 61 # StringLiteral at 215.19   
  .byte 62 # StringLiteral at 215.19	 	
  .byte 32 # StringLiteral at 215.19			
  .byte 70 # StringLiteral at 215.19		
  .byte 65 # StringLiteral at 215.19			
  .byte 73 # StringLiteral at 215.19	  
  .byte 76 # StringLiteral at 215.19  	
  .byte 69 # StringLiteral at 215.19	 	
  .byte 68 # StringLiteral at 215.19 		
  .byte 10 # StringLiteral at 215.19		 
  .byte 0 # StringLiteral at 215.19 		
  .byte 0 # StringLiteral at 215.19 	 
  .word CLASS_String # StringLiteral at 215.19  
  .word 9 # StringLiteral at 215.19   
  .word -30 # StringLiteral at 215.19 	
9524:strLit_533: # StringLiteral at 215.19 
  .byte 42 # StringLiteral at 219.18 
  .byte 42 # StringLiteral at 219.18		 
  .byte 42 # StringLiteral at 219.18  
  .byte 42 # StringLiteral at 219.18	  
  .byte 42 # StringLiteral at 219.18		
  .byte 42 # StringLiteral at 219.18 		
  .byte 42 # StringLiteral at 219.18	 
  .byte 42 # StringLiteral at 219.18			
  .byte 42 # StringLiteral at 219.18		 
  .byte 42 # StringLiteral at 219.18  
  .byte 42 # StringLiteral at 219.18  
  .byte 42 # StringLiteral at 219.18   
  .byte 42 # StringLiteral at 219.18 	 
  .byte 42 # StringLiteral at 219.18 	 
  .byte 42 # StringLiteral at 219.18	 	
  .byte 42 # StringLiteral at 219.18 		
  .byte 42 # StringLiteral at 219.18 	
  .byte 42 # StringLiteral at 219.18	  
  .byte 42 # StringLiteral at 219.18  	
  .byte 42 # StringLiteral at 219.18	 
  .byte 42 # StringLiteral at 219.18	
  .byte 42 # StringLiteral at 219.18	  
  .byte 42 # StringLiteral at 219.18		 
  .byte 42 # StringLiteral at 219.18 		
  .byte 42 # StringLiteral at 219.18	  
  .byte 42 # StringLiteral at 219.18	
  .byte 42 # StringLiteral at 219.18 
  .byte 42 # StringLiteral at 219.18			
  .byte 10 # StringLiteral at 219.18	
  .byte 0 # StringLiteral at 219.18 		
  .byte 0 # StringLiteral at 219.18  	
  .byte 0 # StringLiteral at 219.18			
  .word CLASS_String # StringLiteral at 219.18	 
  .word 9 # StringLiteral at 219.18	  
  .word -29 # StringLiteral at 219.18			
9568:strLit_539: # StringLiteral at 219.18		 
  .byte 98 # StringLiteral at 222.19  	
  .byte 49 # StringLiteral at 222.19 	 
  .byte 32 # StringLiteral at 222.19   
  .byte 38 # StringLiteral at 222.19		 
  .byte 38 # StringLiteral at 222.19		 
  .byte 32 # StringLiteral at 222.19	  
  .byte 98 # StringLiteral at 222.19	
  .byte 51 # StringLiteral at 222.19  	
  .byte 32 # StringLiteral at 222.19		
  .byte 61 # StringLiteral at 222.19 
  .byte 61 # StringLiteral at 222.19		 
  .byte 62 # StringLiteral at 222.19			
  .byte 32 # StringLiteral at 222.19	 
  .byte 80 # StringLiteral at 222.19  	
  .byte 65 # StringLiteral at 222.19	  
  .byte 83 # StringLiteral at 222.19		
  .byte 83 # StringLiteral at 222.19			
  .byte 10 # StringLiteral at 222.19   
  .byte 0 # StringLiteral at 222.19	
  .byte 0 # StringLiteral at 222.19	
  .word CLASS_String # StringLiteral at 222.19			
  .word 6 # StringLiteral at 222.19  
  .word -18 # StringLiteral at 222.19   
9600:strLit_546: # StringLiteral at 222.19	
  .byte 98 # StringLiteral at 225.19  
  .byte 49 # StringLiteral at 225.19  
  .byte 32 # StringLiteral at 225.19	 	
  .byte 38 # StringLiteral at 225.19			
  .byte 38 # StringLiteral at 225.19 
  .byte 32 # StringLiteral at 225.19		
  .byte 98 # StringLiteral at 225.19	 
  .byte 51 # StringLiteral at 225.19		 
  .byte 32 # StringLiteral at 225.19		
  .byte 61 # StringLiteral at 225.19 
  .byte 61 # StringLiteral at 225.19 	 
  .byte 62 # StringLiteral at 225.19 		
  .byte 32 # StringLiteral at 225.19  	
  .byte 70 # StringLiteral at 225.19		 
  .byte 65 # StringLiteral at 225.19 	 
  .byte 73 # StringLiteral at 225.19 		
  .byte 76 # StringLiteral at 225.19  
  .byte 69 # StringLiteral at 225.19	 
  .byte 68 # StringLiteral at 225.19	  
  .byte 10 # StringLiteral at 225.19 	
  .word CLASS_String # StringLiteral at 225.19  
  .word 6 # StringLiteral at 225.19  	
  .word -20 # StringLiteral at 225.19	  
9632:strLit_551: # StringLiteral at 225.19		
  .byte 33 # StringLiteral at 228.19   
  .byte 40 # StringLiteral at 228.19 	
  .byte 33 # StringLiteral at 228.19  
  .byte 40 # StringLiteral at 228.19	
  .byte 98 # StringLiteral at 228.19 	 
  .byte 49 # StringLiteral at 228.19 	
  .byte 32 # StringLiteral at 228.19	 
  .byte 38 # StringLiteral at 228.19  
  .byte 38 # StringLiteral at 228.19 	 
  .byte 32 # StringLiteral at 228.19 
  .byte 98 # StringLiteral at 228.19  
  .byte 51 # StringLiteral at 228.19		 
  .byte 41 # StringLiteral at 228.19	
  .byte 41 # StringLiteral at 228.19 	 
  .byte 32 # StringLiteral at 228.19 	
  .byte 61 # StringLiteral at 228.19  	
  .byte 61 # StringLiteral at 228.19		
  .byte 62 # StringLiteral at 228.19 	 
  .byte 32 # StringLiteral at 228.19 	 
  .byte 80 # StringLiteral at 228.19 		
  .byte 65 # StringLiteral at 228.19 	 
  .byte 83 # StringLiteral at 228.19	  
  .byte 83 # StringLiteral at 228.19 	 
  .byte 0 # StringLiteral at 228.19   
  .word CLASS_String # StringLiteral at 228.19 
  .word 7 # StringLiteral at 228.19 
  .word -23 # StringLiteral at 228.19 		
9668:strLit_562: # StringLiteral at 228.19		 
  .byte 33 # StringLiteral at 231.19		
  .byte 40 # StringLiteral at 231.19 		
  .byte 33 # StringLiteral at 231.19	  
  .byte 40 # StringLiteral at 231.19	  
  .byte 98 # StringLiteral at 231.19		 
  .byte 49 # StringLiteral at 231.19	 
  .byte 32 # StringLiteral at 231.19	  
  .byte 38 # StringLiteral at 231.19			
  .byte 38 # StringLiteral at 231.19 
  .byte 32 # StringLiteral at 231.19	 
  .byte 98 # StringLiteral at 231.19 		
  .byte 51 # StringLiteral at 231.19	 
  .byte 41 # StringLiteral at 231.19  
  .byte 41 # StringLiteral at 231.19 	
  .byte 32 # StringLiteral at 231.19 	 
  .byte 61 # StringLiteral at 231.19  
  .byte 61 # StringLiteral at 231.19	 	
  .byte 62 # StringLiteral at 231.19 	
  .byte 32 # StringLiteral at 231.19 
  .byte 70 # StringLiteral at 231.19 	 
  .byte 65 # StringLiteral at 231.19 
  .byte 73 # StringLiteral at 231.19	 	
  .byte 76 # StringLiteral at 231.19 	
  .byte 69 # StringLiteral at 231.19		
  .byte 68 # StringLiteral at 231.19 	
  .byte 10 # StringLiteral at 231.19  
  .byte 0 # StringLiteral at 231.19	  
  .byte 0 # StringLiteral at 231.19	  
  .word CLASS_String # StringLiteral at 231.19		
  .word 8 # StringLiteral at 231.19 		
  .word -26 # StringLiteral at 231.19 	 
9708:strLit_567: # StringLiteral at 231.19 	 
9708:CLASS_Object: # Program at 1.1	  
9708:CLASS_String: # Program at 1.1	  
.text # Program at 1.1	  
.global main # Program at 1.1	 
0:main: # Program at 1.1	 
0#jal vm_init # Program at 1.1		 
4#subu $sp, $sp, 4 # NewObject at 0.0	  
8#sw $zero, ($sp) # NewObject at 0.0 		
12#jal fcn_573_main # Call at 0.0	
16#li $v0, 10 # Program at 1.1		
20#syscall # Program at 1.1 		
.globl fcn_573_main # MethodDeclVoid at 2.14	 
24:fcn_573_main: # MethodDeclVoid at 2.14		 
24#subu $sp, $sp, 8 # MethodDeclVoid at 2.14 		
28#sw $ra, 4($sp) # MethodDeclVoid at 2.14 	
32#sw $s2, ($sp) # MethodDeclVoid at 2.14	 	
36#lw $s2, 4($sp) # MethodDeclVoid at 2.14	 
40#subu $sp, $sp, 8 # IntegerLiteral at 3.12			
44#sw $s5, 4($sp) # IntegerLiteral at 3.12	  
48#li $t0, 1 # IntegerLiteral at 3.12 	 
52#sw $t0, ($sp) # IntegerLiteral at 3.12   
56#subu $sp, $sp, 8 # IntegerLiteral at 4.12		
60#sw $s5, 4($sp) # IntegerLiteral at 4.12   
64#li $t0, 2 # IntegerLiteral at 4.12  	
68#sw $t0, ($sp) # IntegerLiteral at 4.12 
72#subu $sp, $sp, 4 # True at 6.16	 
76#li $t0, 1 # True at 6.16 
80#sw $t0, ($sp) # True at 6.16 
84#subu $sp, $sp, 4 # False at 7.16			
88#sw $zero, ($sp) # False at 7.16   
92#subu $sp, $sp, 8 # IntegerLiteral at 8.16  	
96#sw $s5, 4($sp) # IntegerLiteral at 8.16 
100#li $t0, 2 # IntegerLiteral at 8.16 	
104#sw $t0, ($sp) # IntegerLiteral at 8.16		
108#subu $sp, $sp, 8 # IntegerLiteral at 8.20 		
112#sw $s5, 4($sp) # IntegerLiteral at 8.20 	 
116#li $t0, 1 # IntegerLiteral at 8.20	  
120#sw $t0, ($sp) # IntegerLiteral at 8.20 	
124#lw $t0, ($sp) # GreaterThan at 8.18 		
128#lw $t1, 8($sp) # GreaterThan at 8.18		
132#sgt $t0, $t1, $t0 # GreaterThan at 8.18	 	
136#addu $sp, $sp, 12 # GreaterThan at 8.18 	
140#sw $t0, ($sp) # GreaterThan at 8.18  	
144#subu $sp, $sp, 8 # IntegerLiteral at 9.16	 
148#sw $s5, 4($sp) # IntegerLiteral at 9.16 		
152#li $t0, 2 # IntegerLiteral at 9.16 
156#sw $t0, ($sp) # IntegerLiteral at 9.16			
160#lw $t0, 28($sp) # IdentifierExp at 9.20 
164#subu $sp, $sp, 8 # IdentifierExp at 9.20 	 
168#sw $s5, 4($sp) # IdentifierExp at 9.20	  
172#sw $t0, ($sp) # IdentifierExp at 9.20	 	
176#lw $t0, ($sp) # GreaterThan at 9.18	 
180#lw $t1, 8($sp) # GreaterThan at 9.18	  
184#sgt $t0, $t1, $t0 # GreaterThan at 9.18		
188#addu $sp, $sp, 12 # GreaterThan at 9.18	 
192#sw $t0, ($sp) # GreaterThan at 9.18		 
196#lw $t0, 16($sp) # IdentifierExp at 10.16 	
200#subu $sp, $sp, 8 # IdentifierExp at 10.16 	
204#sw $s5, 4($sp) # IdentifierExp at 10.16		 
208#sw $t0, ($sp) # IdentifierExp at 10.16			
212#subu $sp, $sp, 8 # IntegerLiteral at 10.21   
216#sw $s5, 4($sp) # IntegerLiteral at 10.21	  
220#li $t0, 1 # IntegerLiteral at 10.21	
224#sw $t0, ($sp) # IntegerLiteral at 10.21 	 
228#lw $t0, ($sp) # GreaterThan at 10.19	 
232#lw $t1, 8($sp) # GreaterThan at 10.19 
236#sgt $t0, $t1, $t0 # GreaterThan at 10.19		 
240#addu $sp, $sp, 12 # GreaterThan at 10.19			
244#sw $t0, ($sp) # GreaterThan at 10.19   
248#lw $t0, 20($sp) # IdentifierExp at 11.16  
252#subu $sp, $sp, 8 # IdentifierExp at 11.16			
256#sw $s5, 4($sp) # IdentifierExp at 11.16  	
260#sw $t0, ($sp) # IdentifierExp at 11.16  
264#lw $t0, 36($sp) # IdentifierExp at 11.21	 
268#subu $sp, $sp, 8 # IdentifierExp at 11.21	 
272#sw $s5, 4($sp) # IdentifierExp at 11.21  
276#sw $t0, ($sp) # IdentifierExp at 11.21 	 
280#lw $t0, ($sp) # GreaterThan at 11.19		 
284#lw $t1, 8($sp) # GreaterThan at 11.19			
288#sgt $t0, $t1, $t0 # GreaterThan at 11.19		
292#addu $sp, $sp, 12 # GreaterThan at 11.19 		
296#sw $t0, ($sp) # GreaterThan at 11.19	  
300#lw $t0, 24($sp) # IdentifierExp at 12.16 	
304#subu $sp, $sp, 8 # IdentifierExp at 12.16		 
308#sw $s5, 4($sp) # IdentifierExp at 12.16	 
312#sw $t0, ($sp) # IdentifierExp at 12.16		 
316#subu $sp, $sp, 8 # IntegerLiteral at 12.21	
320#sw $s5, 4($sp) # IntegerLiteral at 12.21	 	
324#li $t0, 0 # IntegerLiteral at 12.21 	
328#sw $t0, ($sp) # IntegerLiteral at 12.21 	
332#lw $t0, 48($sp) # IdentifierExp at 12.22		
336#subu $sp, $sp, 8 # IdentifierExp at 12.22  
340#sw $s5, 4($sp) # IdentifierExp at 12.22  
344#sw $t0, ($sp) # IdentifierExp at 12.22	 
348#lw $t0, ($sp) # Minus at 12.21   
352#lw $t1, 8($sp) # Minus at 12.21	 	
356#subu $t0, $t1, $t0 # Minus at 12.21			
360#addu $sp, $sp, 8 # Minus at 12.21	
364#sw $t0, ($sp) # Minus at 12.21 	
368#lw $t0, ($sp) # GreaterThan at 12.19		
372#lw $t1, 8($sp) # GreaterThan at 12.19		
376#sgt $t0, $t1, $t0 # GreaterThan at 12.19 	 
380#addu $sp, $sp, 12 # GreaterThan at 12.19		 
384#sw $t0, ($sp) # GreaterThan at 12.19 	
388#subu $sp, $sp, 8 # IntegerLiteral at 13.16	 
392#sw $s5, 4($sp) # IntegerLiteral at 13.16   
396#li $t0, 1 # IntegerLiteral at 13.16 
400#sw $t0, ($sp) # IntegerLiteral at 13.16	  
404#subu $sp, $sp, 8 # IntegerLiteral at 13.20	
408#sw $s5, 4($sp) # IntegerLiteral at 13.20		
412#li $t0, 2 # IntegerLiteral at 13.20			
416#sw $t0, ($sp) # IntegerLiteral at 13.20 
420#lw $t0, ($sp) # LessThan at 13.18	 
424#lw $t1, 8($sp) # LessThan at 13.18 
428#slt $t0, $t1, $t0 # LessThan at 13.18  
432#addu $sp, $sp, 12 # LessThan at 13.18 
436#sw $t0, ($sp) # LessThan at 13.18		
440#lw $t0, 40($sp) # IdentifierExp at 14.16	  
444#subu $sp, $sp, 8 # IdentifierExp at 14.16	  
448#sw $s5, 4($sp) # IdentifierExp at 14.16 
452#sw $t0, ($sp) # IdentifierExp at 14.16  	
456#subu $sp, $sp, 8 # IntegerLiteral at 14.21	 
460#sw $s5, 4($sp) # IntegerLiteral at 14.21	  
464#li $t0, 2 # IntegerLiteral at 14.21   
468#sw $t0, ($sp) # IntegerLiteral at 14.21 		
472#lw $t0, ($sp) # LessThan at 14.19	 	
476#lw $t1, 8($sp) # LessThan at 14.19		
480#slt $t0, $t1, $t0 # LessThan at 14.19		 
484#addu $sp, $sp, 12 # LessThan at 14.19   
488#sw $t0, ($sp) # LessThan at 14.19	 	
492#subu $sp, $sp, 8 # IntegerLiteral at 15.17		
496#sw $s5, 4($sp) # IntegerLiteral at 15.17  
500#li $t0, 1 # IntegerLiteral at 15.17	  
504#sw $t0, ($sp) # IntegerLiteral at 15.17	 	
508#lw $t0, 44($sp) # IdentifierExp at 15.21  
512#subu $sp, $sp, 8 # IdentifierExp at 15.21  
516#sw $s5, 4($sp) # IdentifierExp at 15.21  
520#sw $t0, ($sp) # IdentifierExp at 15.21	 	
524#lw $t0, ($sp) # LessThan at 15.19	 
528#lw $t1, 8($sp) # LessThan at 15.19			
532#slt $t0, $t1, $t0 # LessThan at 15.19		
536#addu $sp, $sp, 12 # LessThan at 15.19 
540#sw $t0, ($sp) # LessThan at 15.19   
544#lw $t0, 48($sp) # IdentifierExp at 16.17   
548#subu $sp, $sp, 8 # IdentifierExp at 16.17	 
552#sw $s5, 4($sp) # IdentifierExp at 16.17 		
556#sw $t0, ($sp) # IdentifierExp at 16.17		 
560#lw $t0, 48($sp) # IdentifierExp at 16.22 	 
564#subu $sp, $sp, 8 # IdentifierExp at 16.22		 
568#sw $s5, 4($sp) # IdentifierExp at 16.22  	
572#sw $t0, ($sp) # IdentifierExp at 16.22 
576#lw $t0, ($sp) # LessThan at 16.20   
580#lw $t1, 8($sp) # LessThan at 16.20 	 
584#slt $t0, $t1, $t0 # LessThan at 16.20  	
588#addu $sp, $sp, 12 # LessThan at 16.20			
592#sw $t0, ($sp) # LessThan at 16.20 		
596#subu $sp, $sp, 8 # IntegerLiteral at 17.17		
600#sw $s5, 4($sp) # IntegerLiteral at 17.17	 	
604#li $t0, 0 # IntegerLiteral at 17.17	  
608#sw $t0, ($sp) # IntegerLiteral at 17.17	
612#lw $t0, 60($sp) # IdentifierExp at 17.18  
616#subu $sp, $sp, 8 # IdentifierExp at 17.18 		
620#sw $s5, 4($sp) # IdentifierExp at 17.18	 
624#sw $t0, ($sp) # IdentifierExp at 17.18		
628#lw $t0, ($sp) # Minus at 17.17	 
632#lw $t1, 8($sp) # Minus at 17.17	 
636#subu $t0, $t1, $t0 # Minus at 17.17  	
640#addu $sp, $sp, 8 # Minus at 17.17 	 
644#sw $t0, ($sp) # Minus at 17.17 		
648#lw $t0, 52($sp) # IdentifierExp at 17.23			
652#subu $sp, $sp, 8 # IdentifierExp at 17.23 
656#sw $s5, 4($sp) # IdentifierExp at 17.23	
660#sw $t0, ($sp) # IdentifierExp at 17.23   
664#lw $t0, ($sp) # LessThan at 17.21  	
668#lw $t1, 8($sp) # LessThan at 17.21			
672#slt $t0, $t1, $t0 # LessThan at 17.21 
676#addu $sp, $sp, 12 # LessThan at 17.21	 	
680#sw $t0, ($sp) # LessThan at 17.21		
684#subu $sp, $sp, 8 # IntegerLiteral at 18.17	 
688#sw $s5, 4($sp) # IntegerLiteral at 18.17 	
692#li $t0, 0 # IntegerLiteral at 18.17	  
696#sw $t0, ($sp) # IntegerLiteral at 18.17	 
700#lw $t0, 56($sp) # IdentifierExp at 18.18	  
704#subu $sp, $sp, 8 # IdentifierExp at 18.18	
708#sw $s5, 4($sp) # IdentifierExp at 18.18  
712#sw $t0, ($sp) # IdentifierExp at 18.18  
716#lw $t0, ($sp) # Minus at 18.17		 
720#lw $t1, 8($sp) # Minus at 18.17		 
724#subu $t0, $t1, $t0 # Minus at 18.17	 	
728#addu $sp, $sp, 8 # Minus at 18.17			
732#sw $t0, ($sp) # Minus at 18.17	 
736#subu $sp, $sp, 8 # IntegerLiteral at 18.23			
740#sw $s5, 4($sp) # IntegerLiteral at 18.23	  
744#li $t0, 0 # IntegerLiteral at 18.23 		
748#sw $t0, ($sp) # IntegerLiteral at 18.23  
752#lw $t0, 72($sp) # IdentifierExp at 18.24	 	
756#subu $sp, $sp, 8 # IdentifierExp at 18.24		
760#sw $s5, 4($sp) # IdentifierExp at 18.24   
764#sw $t0, ($sp) # IdentifierExp at 18.24 
768#lw $t0, ($sp) # Minus at 18.23 	 
772#lw $t1, 8($sp) # Minus at 18.23  
776#subu $t0, $t1, $t0 # Minus at 18.23			
780#addu $sp, $sp, 8 # Minus at 18.23	 	
784#sw $t0, ($sp) # Minus at 18.23  	
788#lw $t0, ($sp) # LessThan at 18.21	 
792#lw $t1, 8($sp) # LessThan at 18.21  
796#slt $t0, $t1, $t0 # LessThan at 18.21	
800#addu $sp, $sp, 12 # LessThan at 18.21 		
804#sw $t0, ($sp) # LessThan at 18.21		
808#subu $sp, $sp, 8 # IntegerLiteral at 21.6			
812#sw $s5, 4($sp) # IntegerLiteral at 21.6	  
816#li $t0, 1 # IntegerLiteral at 21.6		
820#sw $t0, ($sp) # IntegerLiteral at 21.6 
824#subu $sp, $sp, 8 # IntegerLiteral at 21.11  	
828#sw $s5, 4($sp) # IntegerLiteral at 21.11	 	
832#li $t0, 1 # IntegerLiteral at 21.11	 	
836#sw $t0, ($sp) # IntegerLiteral at 21.11	  
840#lw $t0, ($sp) # Equals at 21.8			
844#lw $t1, 8($sp) # Equals at 21.8  	
848#seq $t0, $t0, $t1 # Equals at 21.8  	
849##...subu $at,$t0,$t1
853##...sltiu $t0,$at,1
856#addu $sp, $sp, 12 # Equals at 21.8 	
860#sw $t0, ($sp) # Equals at 21.8 	
864#lw $t0, ($sp) # If at 21.3			
868#addu $sp, $sp, 4 # If at 21.3 	 
872#beq $t0, $zero, if_else_88 # If at 21.3  
876#subu $sp, $sp, 4 # Super at 22.10		
880#sw $s2, ($sp) # Super at 22.10		
884#subu $sp, $sp, 4 # StringLiteral at 22.19	  
888#la $t0, strLit_78 # StringLiteral at 22.19  	
892#sw $t0, ($sp) # StringLiteral at 22.19 
896#jal printStr # Call at 22.10  	
900#j if_done_88 # If at 21.3	  
904:if_else_88: # If at 21.3 
904#subu $sp, $sp, 4 # Super at 25.10  	
908#sw $s2, ($sp) # Super at 25.10 
912#subu $sp, $sp, 4 # StringLiteral at 25.19	 	
916#la $t0, strLit_83 # StringLiteral at 25.19	  
920#sw $t0, ($sp) # StringLiteral at 25.19		
924#jal printStr # Call at 25.10 	 
928:if_done_88: # If at 21.3	 
928#subu $sp, $sp, 8 # IntegerLiteral at 27.6  	
932#sw $s5, 4($sp) # IntegerLiteral at 27.6		
936#li $t0, 1 # IntegerLiteral at 27.6 	
940#sw $t0, ($sp) # IntegerLiteral at 27.6   
944#subu $sp, $sp, 8 # IntegerLiteral at 27.11	 	
948#sw $s5, 4($sp) # IntegerLiteral at 27.11   
952#li $t0, 2 # IntegerLiteral at 27.11		
956#sw $t0, ($sp) # IntegerLiteral at 27.11	 	
960#lw $t0, ($sp) # Equals at 27.8 		
964#lw $t1, 8($sp) # Equals at 27.8		 
968#seq $t0, $t0, $t1 # Equals at 27.8	 
969##...subu $at,$t0,$t1
973##...sltiu $t0,$at,1
976#addu $sp, $sp, 12 # Equals at 27.8 
980#sw $t0, ($sp) # Equals at 27.8  	
984#lw $t0, ($sp) # Not at 27.8 	 
988#xor $t0, $t0, 1 # Not at 27.8	 	
992#sw $t0, ($sp) # Not at 27.8	 	
996#lw $t0, ($sp) # If at 27.3	  
1000#addu $sp, $sp, 4 # If at 27.3		 
1004#beq $t0, $zero, if_else_103 # If at 27.3 	 
1008#subu $sp, $sp, 4 # Super at 28.10 
1012#sw $s2, ($sp) # Super at 28.10  
1016#subu $sp, $sp, 4 # StringLiteral at 28.19		
1020#la $t0, strLit_93 # StringLiteral at 28.19 
1024#sw $t0, ($sp) # StringLiteral at 28.19		
1028#jal printStr # Call at 28.10 	 
1032#j if_done_103 # If at 27.3  
1036:if_else_103: # If at 27.3	  
1036#subu $sp, $sp, 4 # Super at 31.10 		
1040#sw $s2, ($sp) # Super at 31.10   
1044#subu $sp, $sp, 4 # StringLiteral at 31.19  
1048#la $t0, strLit_98 # StringLiteral at 31.19	 
1052#sw $t0, ($sp) # StringLiteral at 31.19	 
1056#jal printStr # Call at 31.10		
1060:if_done_103: # If at 27.3	 	
1060#lw $t0, 48($sp) # IdentifierExp at 33.6		 
1064#subu $sp, $sp, 4 # IdentifierExp at 33.6  	
1068#sw $t0, ($sp) # IdentifierExp at 33.6	 	
1072#subu $sp, $sp, 4 # True at 33.12	 	
1076#li $t0, 1 # True at 33.12		
1080#sw $t0, ($sp) # True at 33.12		
1084#lw $t0, ($sp) # Equals at 33.9 	 
1088#lw $t1, 4($sp) # Equals at 33.9  	
1092#seq $t0, $t0, $t1 # Equals at 33.9			
1093##...subu $at,$t0,$t1
1097##...sltiu $t0,$at,1
1100#addu $sp, $sp, 4 # Equals at 33.9 		
1104#sw $t0, ($sp) # Equals at 33.9	  
1108#lw $t0, ($sp) # If at 33.3			
1112#addu $sp, $sp, 4 # If at 33.3 		
1116#beq $t0, $zero, if_else_117 # If at 33.3	
1120#subu $sp, $sp, 4 # Super at 34.10 	 
1124#sw $s2, ($sp) # Super at 34.10	
1128#subu $sp, $sp, 4 # StringLiteral at 34.19			
1132#la $t0, strLit_107 # StringLiteral at 34.19	 	
1136#sw $t0, ($sp) # StringLiteral at 34.19	  
1140#jal printStr # Call at 34.10	 
1144#j if_done_117 # If at 33.3 	 
1148:if_else_117: # If at 33.3		
1148#subu $sp, $sp, 4 # Super at 37.10	 
1152#sw $s2, ($sp) # Super at 37.10 
1156#subu $sp, $sp, 4 # StringLiteral at 37.19	
1160#la $t0, strLit_112 # StringLiteral at 37.19   
1164#sw $t0, ($sp) # StringLiteral at 37.19		
1168#jal printStr # Call at 37.10 	 
1172:if_done_117: # If at 33.3	  
1172#lw $t0, 44($sp) # IdentifierExp at 39.6	 	
1176#subu $sp, $sp, 4 # IdentifierExp at 39.6	  
1180#sw $t0, ($sp) # IdentifierExp at 39.6	
1184#subu $sp, $sp, 4 # False at 39.12 	 
1188#sw $zero, ($sp) # False at 39.12			
1192#lw $t0, ($sp) # Equals at 39.9 	 
1196#lw $t1, 4($sp) # Equals at 39.9   
1200#seq $t0, $t0, $t1 # Equals at 39.9 		
1201##...subu $at,$t0,$t1
1205##...sltiu $t0,$at,1
1208#addu $sp, $sp, 4 # Equals at 39.9	 
1212#sw $t0, ($sp) # Equals at 39.9		
1216#lw $t0, ($sp) # If at 39.3	  
1220#addu $sp, $sp, 4 # If at 39.3   
1224#beq $t0, $zero, if_else_131 # If at 39.3   
1228#subu $sp, $sp, 4 # Super at 40.10			
1232#sw $s2, ($sp) # Super at 40.10 	
1236#subu $sp, $sp, 4 # StringLiteral at 40.19   
1240#la $t0, strLit_121 # StringLiteral at 40.19		
1244#sw $t0, ($sp) # StringLiteral at 40.19		 
1248#jal printStr # Call at 40.10 	
1252#j if_done_131 # If at 39.3	 	
1256:if_else_131: # If at 39.3  
1256#subu $sp, $sp, 4 # Super at 43.10  	
1260#sw $s2, ($sp) # Super at 43.10			
1264#subu $sp, $sp, 4 # StringLiteral at 43.19			
1268#la $t0, strLit_126 # StringLiteral at 43.19		 
1272#sw $t0, ($sp) # StringLiteral at 43.19 	
1276#jal printStr # Call at 43.10		
1280:if_done_131: # If at 39.3			
1280#lw $t0, 40($sp) # IdentifierExp at 45.6		 
1284#subu $sp, $sp, 4 # IdentifierExp at 45.6 	
1288#sw $t0, ($sp) # IdentifierExp at 45.6 	 
1292#subu $sp, $sp, 4 # True at 45.12	 
1296#li $t0, 1 # True at 45.12 
1300#sw $t0, ($sp) # True at 45.12 
1304#lw $t0, ($sp) # Equals at 45.9   
1308#lw $t1, 4($sp) # Equals at 45.9 
1312#seq $t0, $t0, $t1 # Equals at 45.9  
1313##...subu $at,$t0,$t1
1317##...sltiu $t0,$at,1
1320#addu $sp, $sp, 4 # Equals at 45.9 
1324#sw $t0, ($sp) # Equals at 45.9   
1328#lw $t0, ($sp) # If at 45.3	  
1332#addu $sp, $sp, 4 # If at 45.3	
1336#beq $t0, $zero, if_else_145 # If at 45.3			
1340#subu $sp, $sp, 4 # Super at 46.10   
1344#sw $s2, ($sp) # Super at 46.10		
1348#subu $sp, $sp, 4 # StringLiteral at 46.19 		
1352#la $t0, strLit_135 # StringLiteral at 46.19 	 
1356#sw $t0, ($sp) # StringLiteral at 46.19		 
1360#jal printStr # Call at 46.10   
1364#j if_done_145 # If at 45.3   
1368:if_else_145: # If at 45.3 	
1368#subu $sp, $sp, 4 # Super at 49.10 		
1372#sw $s2, ($sp) # Super at 49.10			
1376#subu $sp, $sp, 4 # StringLiteral at 49.19	 	
1380#la $t0, strLit_140 # StringLiteral at 49.19		 
1384#sw $t0, ($sp) # StringLiteral at 49.19	 	
1388#jal printStr # Call at 49.10	
1392:if_done_145: # If at 45.3		 
1392#lw $t0, 36($sp) # IdentifierExp at 51.6		
1396#subu $sp, $sp, 4 # IdentifierExp at 51.6  
1400#sw $t0, ($sp) # IdentifierExp at 51.6		 
1404#subu $sp, $sp, 4 # True at 51.12 
1408#li $t0, 1 # True at 51.12		
1412#sw $t0, ($sp) # True at 51.12	 	
1416#lw $t0, ($sp) # Equals at 51.9  	
1420#lw $t1, 4($sp) # Equals at 51.9 	
1424#seq $t0, $t0, $t1 # Equals at 51.9	
1425##...subu $at,$t0,$t1
1429##...sltiu $t0,$at,1
1432#addu $sp, $sp, 4 # Equals at 51.9 	
1436#sw $t0, ($sp) # Equals at 51.9  	
1440#lw $t0, ($sp) # If at 51.3	 
1444#addu $sp, $sp, 4 # If at 51.3	 	
1448#beq $t0, $zero, if_else_159 # If at 51.3  	
1452#subu $sp, $sp, 4 # Super at 52.10	 
1456#sw $s2, ($sp) # Super at 52.10	  
1460#subu $sp, $sp, 4 # StringLiteral at 52.19			
1464#la $t0, strLit_149 # StringLiteral at 52.19 	
1468#sw $t0, ($sp) # StringLiteral at 52.19	
1472#jal printStr # Call at 52.10  
1476#j if_done_159 # If at 51.3	  
1480:if_else_159: # If at 51.3	
1480#subu $sp, $sp, 4 # Super at 55.10	 	
1484#sw $s2, ($sp) # Super at 55.10 	
1488#subu $sp, $sp, 4 # StringLiteral at 55.19 	
1492#la $t0, strLit_154 # StringLiteral at 55.19		 
1496#sw $t0, ($sp) # StringLiteral at 55.19			
1500#jal printStr # Call at 55.10  	
1504:if_done_159: # If at 51.3	
1504#lw $t0, 32($sp) # IdentifierExp at 57.6  	
1508#subu $sp, $sp, 4 # IdentifierExp at 57.6	 
1512#sw $t0, ($sp) # IdentifierExp at 57.6  
1516#subu $sp, $sp, 4 # True at 57.12	
1520#li $t0, 1 # True at 57.12 
1524#sw $t0, ($sp) # True at 57.12		 
1528#lw $t0, ($sp) # Equals at 57.9  
1532#lw $t1, 4($sp) # Equals at 57.9 	 
1536#seq $t0, $t0, $t1 # Equals at 57.9 
1537##...subu $at,$t0,$t1
1541##...sltiu $t0,$at,1
1544#addu $sp, $sp, 4 # Equals at 57.9	
1548#sw $t0, ($sp) # Equals at 57.9	
1552#lw $t0, ($sp) # If at 57.3	  
1556#addu $sp, $sp, 4 # If at 57.3 	
1560#beq $t0, $zero, if_else_173 # If at 57.3		 
1564#subu $sp, $sp, 4 # Super at 58.10		
1568#sw $s2, ($sp) # Super at 58.10   
1572#subu $sp, $sp, 4 # StringLiteral at 58.19 	 
1576#la $t0, strLit_163 # StringLiteral at 58.19 		
1580#sw $t0, ($sp) # StringLiteral at 58.19   
1584#jal printStr # Call at 58.10	  
1588#j if_done_173 # If at 57.3 	 
1592:if_else_173: # If at 57.3	 	
1592#subu $sp, $sp, 4 # Super at 61.10		
1596#sw $s2, ($sp) # Super at 61.10		 
1600#subu $sp, $sp, 4 # StringLiteral at 61.19		
1604#la $t0, strLit_168 # StringLiteral at 61.19		 
1608#sw $t0, ($sp) # StringLiteral at 61.19	  
1612#jal printStr # Call at 61.10	 
1616:if_done_173: # If at 57.3	 	
1616#lw $t0, 28($sp) # IdentifierExp at 63.6 	
1620#subu $sp, $sp, 4 # IdentifierExp at 63.6	  
1624#sw $t0, ($sp) # IdentifierExp at 63.6  
1628#subu $sp, $sp, 4 # True at 63.12 	
1632#li $t0, 1 # True at 63.12  
1636#sw $t0, ($sp) # True at 63.12		
1640#lw $t0, ($sp) # Equals at 63.9	  
1644#lw $t1, 4($sp) # Equals at 63.9	
1648#seq $t0, $t0, $t1 # Equals at 63.9  
1649##...subu $at,$t0,$t1
1653##...sltiu $t0,$at,1
1656#addu $sp, $sp, 4 # Equals at 63.9 		
1660#sw $t0, ($sp) # Equals at 63.9 
1664#lw $t0, ($sp) # If at 63.3 		
1668#addu $sp, $sp, 4 # If at 63.3	  
1672#beq $t0, $zero, if_else_187 # If at 63.3   
1676#subu $sp, $sp, 4 # Super at 64.10	  
1680#sw $s2, ($sp) # Super at 64.10	
1684#subu $sp, $sp, 4 # StringLiteral at 64.19	  
1688#la $t0, strLit_177 # StringLiteral at 64.19  
1692#sw $t0, ($sp) # StringLiteral at 64.19  
1696#jal printStr # Call at 64.10	 
1700#j if_done_187 # If at 63.3	 	
1704:if_else_187: # If at 63.3		 
1704#subu $sp, $sp, 4 # Super at 67.10 		
1708#sw $s2, ($sp) # Super at 67.10 	 
1712#subu $sp, $sp, 4 # StringLiteral at 67.19		
1716#la $t0, strLit_182 # StringLiteral at 67.19	 
1720#sw $t0, ($sp) # StringLiteral at 67.19			
1724#jal printStr # Call at 67.10			
1728:if_done_187: # If at 63.3	  
1728#lw $t0, 24($sp) # IdentifierExp at 69.6  	
1732#subu $sp, $sp, 4 # IdentifierExp at 69.6	  
1736#sw $t0, ($sp) # IdentifierExp at 69.6		
1740#subu $sp, $sp, 4 # True at 69.12	  
1744#li $t0, 1 # True at 69.12  	
1748#sw $t0, ($sp) # True at 69.12 	 
1752#lw $t0, ($sp) # Equals at 69.9	 	
1756#lw $t1, 4($sp) # Equals at 69.9		
1760#seq $t0, $t0, $t1 # Equals at 69.9	 	
1761##...subu $at,$t0,$t1
1765##...sltiu $t0,$at,1
1768#addu $sp, $sp, 4 # Equals at 69.9   
1772#sw $t0, ($sp) # Equals at 69.9 	 
1776#lw $t0, ($sp) # If at 69.3 	 
1780#addu $sp, $sp, 4 # If at 69.3	 
1784#beq $t0, $zero, if_else_201 # If at 69.3		 
1788#subu $sp, $sp, 4 # Super at 70.10		
1792#sw $s2, ($sp) # Super at 70.10  	
1796#subu $sp, $sp, 4 # StringLiteral at 70.19   
1800#la $t0, strLit_191 # StringLiteral at 70.19			
1804#sw $t0, ($sp) # StringLiteral at 70.19		 
1808#jal printStr # Call at 70.10 	 
1812#j if_done_201 # If at 69.3  
1816:if_else_201: # If at 69.3  	
1816#subu $sp, $sp, 4 # Super at 73.10	  
1820#sw $s2, ($sp) # Super at 73.10  
1824#subu $sp, $sp, 4 # StringLiteral at 73.19	  
1828#la $t0, strLit_196 # StringLiteral at 73.19	  
1832#sw $t0, ($sp) # StringLiteral at 73.19 
1836#jal printStr # Call at 73.10  	
1840:if_done_201: # If at 69.3	  
1840#lw $t0, 20($sp) # IdentifierExp at 75.6	
1844#subu $sp, $sp, 4 # IdentifierExp at 75.6 	 
1848#sw $t0, ($sp) # IdentifierExp at 75.6  
1852#subu $sp, $sp, 4 # True at 75.12 		
1856#li $t0, 1 # True at 75.12 
1860#sw $t0, ($sp) # True at 75.12		
1864#lw $t0, ($sp) # Equals at 75.9		 
1868#lw $t1, 4($sp) # Equals at 75.9 		
1872#seq $t0, $t0, $t1 # Equals at 75.9  
1873##...subu $at,$t0,$t1
1877##...sltiu $t0,$at,1
1880#addu $sp, $sp, 4 # Equals at 75.9	 	
1884#sw $t0, ($sp) # Equals at 75.9	
1888#lw $t0, ($sp) # If at 75.3 		
1892#addu $sp, $sp, 4 # If at 75.3  	
1896#beq $t0, $zero, if_else_215 # If at 75.3	 
1900#subu $sp, $sp, 4 # Super at 76.10   
1904#sw $s2, ($sp) # Super at 76.10  	
1908#subu $sp, $sp, 4 # StringLiteral at 76.19	
1912#la $t0, strLit_205 # StringLiteral at 76.19  
1916#sw $t0, ($sp) # StringLiteral at 76.19  	
1920#jal printStr # Call at 76.10	
1924#j if_done_215 # If at 75.3  
1928:if_else_215: # If at 75.3	
1928#subu $sp, $sp, 4 # Super at 79.10	
1932#sw $s2, ($sp) # Super at 79.10		 
1936#subu $sp, $sp, 4 # StringLiteral at 79.19		 
1940#la $t0, strLit_210 # StringLiteral at 79.19	 	
1944#sw $t0, ($sp) # StringLiteral at 79.19  
1948#jal printStr # Call at 79.10			
1952:if_done_215: # If at 75.3 
1952#lw $t0, 16($sp) # IdentifierExp at 81.6 		
1956#subu $sp, $sp, 4 # IdentifierExp at 81.6	 
1960#sw $t0, ($sp) # IdentifierExp at 81.6	 	
1964#subu $sp, $sp, 4 # True at 81.12		 
1968#li $t0, 1 # True at 81.12 	
1972#sw $t0, ($sp) # True at 81.12			
1976#lw $t0, ($sp) # Equals at 81.9	 
1980#lw $t1, 4($sp) # Equals at 81.9	  
1984#seq $t0, $t0, $t1 # Equals at 81.9 	
1985##...subu $at,$t0,$t1
1989##...sltiu $t0,$at,1
1992#addu $sp, $sp, 4 # Equals at 81.9			
1996#sw $t0, ($sp) # Equals at 81.9 
2000#lw $t0, ($sp) # If at 81.3	 
2004#addu $sp, $sp, 4 # If at 81.3 
2008#beq $t0, $zero, if_else_229 # If at 81.3  
2012#subu $sp, $sp, 4 # Super at 82.10  
2016#sw $s2, ($sp) # Super at 82.10  	
2020#subu $sp, $sp, 4 # StringLiteral at 82.19  	
2024#la $t0, strLit_219 # StringLiteral at 82.19 	 
2028#sw $t0, ($sp) # StringLiteral at 82.19 
2032#jal printStr # Call at 82.10 		
2036#j if_done_229 # If at 81.3	  
2040:if_else_229: # If at 81.3 
2040#subu $sp, $sp, 4 # Super at 85.10	 
2044#sw $s2, ($sp) # Super at 85.10 
2048#subu $sp, $sp, 4 # StringLiteral at 85.19 		
2052#la $t0, strLit_224 # StringLiteral at 85.19	
2056#sw $t0, ($sp) # StringLiteral at 85.19	
2060#jal printStr # Call at 85.10	 
2064:if_done_229: # If at 81.3	 	
2064#lw $t0, 12($sp) # IdentifierExp at 87.6	  
2068#subu $sp, $sp, 4 # IdentifierExp at 87.6 
2072#sw $t0, ($sp) # IdentifierExp at 87.6		
2076#subu $sp, $sp, 4 # True at 87.13 	
2080#li $t0, 1 # True at 87.13  
2084#sw $t0, ($sp) # True at 87.13 
2088#lw $t0, ($sp) # Equals at 87.10			
2092#lw $t1, 4($sp) # Equals at 87.10 	 
2096#seq $t0, $t0, $t1 # Equals at 87.10 		
2097##...subu $at,$t0,$t1
2101##...sltiu $t0,$at,1
2104#addu $sp, $sp, 4 # Equals at 87.10	 
2108#sw $t0, ($sp) # Equals at 87.10	  
2112#lw $t0, ($sp) # If at 87.3 	 
2116#addu $sp, $sp, 4 # If at 87.3 		
2120#beq $t0, $zero, if_else_243 # If at 87.3	 	
2124#subu $sp, $sp, 4 # Super at 88.10  	
2128#sw $s2, ($sp) # Super at 88.10  
2132#subu $sp, $sp, 4 # StringLiteral at 88.19			
2136#la $t0, strLit_233 # StringLiteral at 88.19 
2140#sw $t0, ($sp) # StringLiteral at 88.19		
2144#jal printStr # Call at 88.10	 	
2148#j if_done_243 # If at 87.3 
2152:if_else_243: # If at 87.3 
2152#subu $sp, $sp, 4 # Super at 91.10 	 
2156#sw $s2, ($sp) # Super at 91.10	  
2160#subu $sp, $sp, 4 # StringLiteral at 91.19   
2164#la $t0, strLit_238 # StringLiteral at 91.19		
2168#sw $t0, ($sp) # StringLiteral at 91.19	
2172#jal printStr # Call at 91.10 	 
2176:if_done_243: # If at 87.3		 
2176#lw $t0, 8($sp) # IdentifierExp at 93.6 
2180#subu $sp, $sp, 4 # IdentifierExp at 93.6	 	
2184#sw $t0, ($sp) # IdentifierExp at 93.6		
2188#subu $sp, $sp, 4 # True at 93.13	
2192#li $t0, 1 # True at 93.13			
2196#sw $t0, ($sp) # True at 93.13		 
2200#lw $t0, ($sp) # Equals at 93.10 
2204#lw $t1, 4($sp) # Equals at 93.10	 
2208#seq $t0, $t0, $t1 # Equals at 93.10			
2209##...subu $at,$t0,$t1
2213##...sltiu $t0,$at,1
2216#addu $sp, $sp, 4 # Equals at 93.10	
2220#sw $t0, ($sp) # Equals at 93.10 	 
2224#lw $t0, ($sp) # If at 93.3  
2228#addu $sp, $sp, 4 # If at 93.3		
2232#beq $t0, $zero, if_else_257 # If at 93.3	
2236#subu $sp, $sp, 4 # Super at 94.10 	 
2240#sw $s2, ($sp) # Super at 94.10 		
2244#subu $sp, $sp, 4 # StringLiteral at 94.19	 
2248#la $t0, strLit_247 # StringLiteral at 94.19 	
2252#sw $t0, ($sp) # StringLiteral at 94.19	 	
2256#jal printStr # Call at 94.10		
2260#j if_done_257 # If at 93.3	 
2264:if_else_257: # If at 93.3 	 
2264#subu $sp, $sp, 4 # Super at 97.10  
2268#sw $s2, ($sp) # Super at 97.10 
2272#subu $sp, $sp, 4 # StringLiteral at 97.19  
2276#la $t0, strLit_252 # StringLiteral at 97.19	  
2280#sw $t0, ($sp) # StringLiteral at 97.19	  
2284#jal printStr # Call at 97.10 	 
2288:if_done_257: # If at 93.3  	
2288#lw $t0, 4($sp) # IdentifierExp at 99.6			
2292#subu $sp, $sp, 4 # IdentifierExp at 99.6   
2296#sw $t0, ($sp) # IdentifierExp at 99.6  	
2300#subu $sp, $sp, 4 # True at 99.13		 
2304#li $t0, 1 # True at 99.13   
2308#sw $t0, ($sp) # True at 99.13		
2312#lw $t0, ($sp) # Equals at 99.10	 	
2316#lw $t1, 4($sp) # Equals at 99.10 		
2320#seq $t0, $t0, $t1 # Equals at 99.10			
2321##...subu $at,$t0,$t1
2325##...sltiu $t0,$at,1
2328#addu $sp, $sp, 4 # Equals at 99.10		 
2332#sw $t0, ($sp) # Equals at 99.10 	 
2336#lw $t0, ($sp) # If at 99.3		 
2340#addu $sp, $sp, 4 # If at 99.3	 
2344#beq $t0, $zero, if_else_271 # If at 99.3   
2348#subu $sp, $sp, 4 # Super at 100.10	  
2352#sw $s2, ($sp) # Super at 100.10	 	
2356#subu $sp, $sp, 4 # StringLiteral at 100.19 		
2360#la $t0, strLit_261 # StringLiteral at 100.19			
2364#sw $t0, ($sp) # StringLiteral at 100.19 	
2368#jal printStr # Call at 100.10		 
2372#j if_done_271 # If at 99.3	  
2376:if_else_271: # If at 99.3 		
2376#subu $sp, $sp, 4 # Super at 103.10		 
2380#sw $s2, ($sp) # Super at 103.10  	
2384#subu $sp, $sp, 4 # StringLiteral at 103.19 	
2388#la $t0, strLit_266 # StringLiteral at 103.19   
2392#sw $t0, ($sp) # StringLiteral at 103.19 	 
2396#jal printStr # Call at 103.10			
2400:if_done_271: # If at 99.3  	
2400#lw $t0, 0($sp) # IdentifierExp at 105.6 	
2404#subu $sp, $sp, 4 # IdentifierExp at 105.6	
2408#sw $t0, ($sp) # IdentifierExp at 105.6 		
2412#subu $sp, $sp, 4 # True at 105.13   
2416#li $t0, 1 # True at 105.13	 
2420#sw $t0, ($sp) # True at 105.13   
2424#lw $t0, ($sp) # Equals at 105.10		
2428#lw $t1, 4($sp) # Equals at 105.10	 
2432#seq $t0, $t0, $t1 # Equals at 105.10   
2433##...subu $at,$t0,$t1
2437##...sltiu $t0,$at,1
2440#addu $sp, $sp, 4 # Equals at 105.10		
2444#sw $t0, ($sp) # Equals at 105.10 		
2448#lw $t0, ($sp) # If at 105.3 
2452#addu $sp, $sp, 4 # If at 105.3		
2456#beq $t0, $zero, if_else_285 # If at 105.3  	
2460#subu $sp, $sp, 4 # Super at 106.10	
2464#sw $s2, ($sp) # Super at 106.10 	
2468#subu $sp, $sp, 4 # StringLiteral at 106.19  	
2472#la $t0, strLit_275 # StringLiteral at 106.19		 
2476#sw $t0, ($sp) # StringLiteral at 106.19 		
2480#jal printStr # Call at 106.10  
2484#j if_done_285 # If at 105.3 		
2488:if_else_285: # If at 105.3	  
2488#subu $sp, $sp, 4 # Super at 109.10 	
2492#sw $s2, ($sp) # Super at 109.10   
2496#subu $sp, $sp, 4 # StringLiteral at 109.19	 	
2500#la $t0, strLit_280 # StringLiteral at 109.19 
2504#sw $t0, ($sp) # StringLiteral at 109.19 		
2508#jal printStr # Call at 109.10 		
2512:if_done_285: # If at 105.3		
2512#subu $sp, $sp, 4 # Super at 113.9	
2516#sw $s2, ($sp) # Super at 113.9 		
2520#subu $sp, $sp, 4 # StringLiteral at 113.18			
2524#la $t0, strLit_286 # StringLiteral at 113.18	  
2528#sw $t0, ($sp) # StringLiteral at 113.18   
2532#jal printStr # Call at 113.9  	
2536#lw $t0, 48($sp) # IdentifierExp at 116.6  
2540#subu $sp, $sp, 4 # IdentifierExp at 116.6			
2544#sw $t0, ($sp) # IdentifierExp at 116.6 	 
2548#subu $sp, $sp, 4 # False at 116.12 
2552#sw $zero, ($sp) # False at 116.12 
2556#lw $t0, ($sp) # Equals at 116.9			
2560#lw $t1, 4($sp) # Equals at 116.9	 
2564#seq $t0, $t0, $t1 # Equals at 116.9		 
2565##...subu $at,$t0,$t1
2569##...sltiu $t0,$at,1
2572#addu $sp, $sp, 4 # Equals at 116.9		
2576#sw $t0, ($sp) # Equals at 116.9		
2580#lw $t0, ($sp) # Not at 116.9	
2584#xor $t0, $t0, 1 # Not at 116.9			
2588#sw $t0, ($sp) # Not at 116.9	
2592#lw $t0, ($sp) # If at 116.3 	
2596#addu $sp, $sp, 4 # If at 116.3			
2600#beq $t0, $zero, if_else_304 # If at 116.3	 	
2604#subu $sp, $sp, 4 # Super at 117.10	 	
2608#sw $s2, ($sp) # Super at 117.10	  
2612#subu $sp, $sp, 4 # StringLiteral at 117.19			
2616#la $t0, strLit_294 # StringLiteral at 117.19 		
2620#sw $t0, ($sp) # StringLiteral at 117.19   
2624#jal printStr # Call at 117.10  	
2628#j if_done_304 # If at 116.3 	
2632:if_else_304: # If at 116.3			
2632#subu $sp, $sp, 4 # Super at 120.10 		
2636#sw $s2, ($sp) # Super at 120.10	  
2640#subu $sp, $sp, 4 # StringLiteral at 120.19	  
2644#la $t0, strLit_299 # StringLiteral at 120.19			
2648#sw $t0, ($sp) # StringLiteral at 120.19 
2652#jal printStr # Call at 120.10		
2656:if_done_304: # If at 116.3 	 
2656#lw $t0, 44($sp) # IdentifierExp at 122.6  
2660#subu $sp, $sp, 4 # IdentifierExp at 122.6 	
2664#sw $t0, ($sp) # IdentifierExp at 122.6 	
2668#subu $sp, $sp, 4 # True at 122.12		
2672#li $t0, 1 # True at 122.12  
2676#sw $t0, ($sp) # True at 122.12 	
2680#lw $t0, ($sp) # Equals at 122.9			
2684#lw $t1, 4($sp) # Equals at 122.9		
2688#seq $t0, $t0, $t1 # Equals at 122.9 
2689##...subu $at,$t0,$t1
2693##...sltiu $t0,$at,1
2696#addu $sp, $sp, 4 # Equals at 122.9  	
2700#sw $t0, ($sp) # Equals at 122.9 	 
2704#lw $t0, ($sp) # Not at 122.9 
2708#xor $t0, $t0, 1 # Not at 122.9   
2712#sw $t0, ($sp) # Not at 122.9	
2716#lw $t0, ($sp) # If at 122.3			
2720#addu $sp, $sp, 4 # If at 122.3  	
2724#beq $t0, $zero, if_else_319 # If at 122.3		
2728#subu $sp, $sp, 4 # Super at 123.10   
2732#sw $s2, ($sp) # Super at 123.10 
2736#subu $sp, $sp, 4 # StringLiteral at 123.19  
2740#la $t0, strLit_309 # StringLiteral at 123.19		 
2744#sw $t0, ($sp) # StringLiteral at 123.19	
2748#jal printStr # Call at 123.10 	
2752#j if_done_319 # If at 122.3	  
2756:if_else_319: # If at 122.3   
2756#subu $sp, $sp, 4 # Super at 126.10	  
2760#sw $s2, ($sp) # Super at 126.10   
2764#subu $sp, $sp, 4 # StringLiteral at 126.19		
2768#la $t0, strLit_314 # StringLiteral at 126.19  
2772#sw $t0, ($sp) # StringLiteral at 126.19  
2776#jal printStr # Call at 126.10	  
2780:if_done_319: # If at 122.3  	
2780#lw $t0, 40($sp) # IdentifierExp at 128.6	
2784#subu $sp, $sp, 4 # IdentifierExp at 128.6	 	
2788#sw $t0, ($sp) # IdentifierExp at 128.6	 	
2792#subu $sp, $sp, 4 # False at 128.12  
2796#sw $zero, ($sp) # False at 128.12  	
2800#lw $t0, ($sp) # Equals at 128.9  	
2804#lw $t1, 4($sp) # Equals at 128.9		 
2808#seq $t0, $t0, $t1 # Equals at 128.9 		
2809##...subu $at,$t0,$t1
2813##...sltiu $t0,$at,1
2816#addu $sp, $sp, 4 # Equals at 128.9 	 
2820#sw $t0, ($sp) # Equals at 128.9			
2824#lw $t0, ($sp) # Not at 128.9	 	
2828#xor $t0, $t0, 1 # Not at 128.9	  
2832#sw $t0, ($sp) # Not at 128.9 	
2836#lw $t0, ($sp) # If at 128.3  
2840#addu $sp, $sp, 4 # If at 128.3 	 
2844#beq $t0, $zero, if_else_334 # If at 128.3	  
2848#subu $sp, $sp, 4 # Super at 129.10   
2852#sw $s2, ($sp) # Super at 129.10 
2856#subu $sp, $sp, 4 # StringLiteral at 129.19		 
2860#la $t0, strLit_324 # StringLiteral at 129.19		 
2864#sw $t0, ($sp) # StringLiteral at 129.19 
2868#jal printStr # Call at 129.10	
2872#j if_done_334 # If at 128.3	 	
2876:if_else_334: # If at 128.3 		
2876#subu $sp, $sp, 4 # Super at 132.10 	
2880#sw $s2, ($sp) # Super at 132.10  
2884#subu $sp, $sp, 4 # StringLiteral at 132.19		
2888#la $t0, strLit_329 # StringLiteral at 132.19	
2892#sw $t0, ($sp) # StringLiteral at 132.19	 	
2896#jal printStr # Call at 132.10  
2900:if_done_334: # If at 128.3 		
2900#lw $t0, 36($sp) # IdentifierExp at 134.6 	 
2904#subu $sp, $sp, 4 # IdentifierExp at 134.6  	
2908#sw $t0, ($sp) # IdentifierExp at 134.6   
2912#subu $sp, $sp, 4 # False at 134.12			
2916#sw $zero, ($sp) # False at 134.12			
2920#lw $t0, ($sp) # Equals at 134.9			
2924#lw $t1, 4($sp) # Equals at 134.9 	 
2928#seq $t0, $t0, $t1 # Equals at 134.9 
2929##...subu $at,$t0,$t1
2933##...sltiu $t0,$at,1
2936#addu $sp, $sp, 4 # Equals at 134.9 	 
2940#sw $t0, ($sp) # Equals at 134.9 
2944#lw $t0, ($sp) # Not at 134.9		
2948#xor $t0, $t0, 1 # Not at 134.9	 	
2952#sw $t0, ($sp) # Not at 134.9	  
2956#lw $t0, ($sp) # If at 134.3  	
2960#addu $sp, $sp, 4 # If at 134.3  
2964#beq $t0, $zero, if_else_349 # If at 134.3  
2968#subu $sp, $sp, 4 # Super at 135.10		 
2972#sw $s2, ($sp) # Super at 135.10 	
2976#subu $sp, $sp, 4 # StringLiteral at 135.19	 	
2980#la $t0, strLit_339 # StringLiteral at 135.19		
2984#sw $t0, ($sp) # StringLiteral at 135.19 	 
2988#jal printStr # Call at 135.10 		
2992#j if_done_349 # If at 134.3	 	
2996:if_else_349: # If at 134.3 		
2996#subu $sp, $sp, 4 # Super at 138.10		
3000#sw $s2, ($sp) # Super at 138.10 	 
3004#subu $sp, $sp, 4 # StringLiteral at 138.19	 
3008#la $t0, strLit_344 # StringLiteral at 138.19  
3012#sw $t0, ($sp) # StringLiteral at 138.19   
3016#jal printStr # Call at 138.10		
3020:if_done_349: # If at 134.3	
3020#lw $t0, 32($sp) # IdentifierExp at 140.6	 	
3024#subu $sp, $sp, 4 # IdentifierExp at 140.6 	 
3028#sw $t0, ($sp) # IdentifierExp at 140.6   
3032#subu $sp, $sp, 4 # False at 140.12  	
3036#sw $zero, ($sp) # False at 140.12	  
3040#lw $t0, ($sp) # Equals at 140.9		
3044#lw $t1, 4($sp) # Equals at 140.9  	
3048#seq $t0, $t0, $t1 # Equals at 140.9 		
3049##...subu $at,$t0,$t1
3053##...sltiu $t0,$at,1
3056#addu $sp, $sp, 4 # Equals at 140.9   
3060#sw $t0, ($sp) # Equals at 140.9	  
3064#lw $t0, ($sp) # Not at 140.9	
3068#xor $t0, $t0, 1 # Not at 140.9		
3072#sw $t0, ($sp) # Not at 140.9  
3076#lw $t0, ($sp) # If at 140.3	  
3080#addu $sp, $sp, 4 # If at 140.3 	
3084#beq $t0, $zero, if_else_364 # If at 140.3   
3088#subu $sp, $sp, 4 # Super at 141.10 	 
3092#sw $s2, ($sp) # Super at 141.10	 
3096#subu $sp, $sp, 4 # StringLiteral at 141.19	 	
3100#la $t0, strLit_354 # StringLiteral at 141.19	  
3104#sw $t0, ($sp) # StringLiteral at 141.19 	
3108#jal printStr # Call at 141.10  	
3112#j if_done_364 # If at 140.3   
3116:if_else_364: # If at 140.3	  
3116#subu $sp, $sp, 4 # Super at 144.10		 
3120#sw $s2, ($sp) # Super at 144.10 		
3124#subu $sp, $sp, 4 # StringLiteral at 144.19   
3128#la $t0, strLit_359 # StringLiteral at 144.19  	
3132#sw $t0, ($sp) # StringLiteral at 144.19 	
3136#jal printStr # Call at 144.10		 
3140:if_done_364: # If at 140.3		 
3140#lw $t0, 28($sp) # IdentifierExp at 146.6	 	
3144#subu $sp, $sp, 4 # IdentifierExp at 146.6	 	
3148#sw $t0, ($sp) # IdentifierExp at 146.6 	
3152#subu $sp, $sp, 4 # False at 146.12 		
3156#sw $zero, ($sp) # False at 146.12	  
3160#lw $t0, ($sp) # Equals at 146.9 		
3164#lw $t1, 4($sp) # Equals at 146.9 		
3168#seq $t0, $t0, $t1 # Equals at 146.9   
3169##...subu $at,$t0,$t1
3173##...sltiu $t0,$at,1
3176#addu $sp, $sp, 4 # Equals at 146.9	  
3180#sw $t0, ($sp) # Equals at 146.9 
3184#lw $t0, ($sp) # Not at 146.9 		
3188#xor $t0, $t0, 1 # Not at 146.9 	
3192#sw $t0, ($sp) # Not at 146.9	 
3196#lw $t0, ($sp) # If at 146.3 		
3200#addu $sp, $sp, 4 # If at 146.3 	
3204#beq $t0, $zero, if_else_379 # If at 146.3	 	
3208#subu $sp, $sp, 4 # Super at 147.10		 
3212#sw $s2, ($sp) # Super at 147.10 
3216#subu $sp, $sp, 4 # StringLiteral at 147.19 	 
3220#la $t0, strLit_369 # StringLiteral at 147.19 	
3224#sw $t0, ($sp) # StringLiteral at 147.19	
3228#jal printStr # Call at 147.10		 
3232#j if_done_379 # If at 146.3  	
3236:if_else_379: # If at 146.3	  
3236#subu $sp, $sp, 4 # Super at 150.10	
3240#sw $s2, ($sp) # Super at 150.10	 	
3244#subu $sp, $sp, 4 # StringLiteral at 150.19	
3248#la $t0, strLit_374 # StringLiteral at 150.19		
3252#sw $t0, ($sp) # StringLiteral at 150.19 		
3256#jal printStr # Call at 150.10	
3260:if_done_379: # If at 146.3  
3260#lw $t0, 24($sp) # IdentifierExp at 152.6	 
3264#subu $sp, $sp, 4 # IdentifierExp at 152.6   
3268#sw $t0, ($sp) # IdentifierExp at 152.6  
3272#subu $sp, $sp, 4 # False at 152.12			
3276#sw $zero, ($sp) # False at 152.12 		
3280#lw $t0, ($sp) # Equals at 152.9 
3284#lw $t1, 4($sp) # Equals at 152.9			
3288#seq $t0, $t0, $t1 # Equals at 152.9		
3289##...subu $at,$t0,$t1
3293##...sltiu $t0,$at,1
3296#addu $sp, $sp, 4 # Equals at 152.9			
3300#sw $t0, ($sp) # Equals at 152.9 	
3304#lw $t0, ($sp) # Not at 152.9   
3308#xor $t0, $t0, 1 # Not at 152.9			
3312#sw $t0, ($sp) # Not at 152.9	 
3316#lw $t0, ($sp) # If at 152.3		 
3320#addu $sp, $sp, 4 # If at 152.3  	
3324#beq $t0, $zero, if_else_394 # If at 152.3 
3328#subu $sp, $sp, 4 # Super at 153.10			
3332#sw $s2, ($sp) # Super at 153.10	 
3336#subu $sp, $sp, 4 # StringLiteral at 153.19			
3340#la $t0, strLit_384 # StringLiteral at 153.19	 	
3344#sw $t0, ($sp) # StringLiteral at 153.19  	
3348#jal printStr # Call at 153.10 
3352#j if_done_394 # If at 152.3	  
3356:if_else_394: # If at 152.3			
3356#subu $sp, $sp, 4 # Super at 156.10		
3360#sw $s2, ($sp) # Super at 156.10  
3364#subu $sp, $sp, 4 # StringLiteral at 156.19		
3368#la $t0, strLit_389 # StringLiteral at 156.19	  
3372#sw $t0, ($sp) # StringLiteral at 156.19  
3376#jal printStr # Call at 156.10  	
3380:if_done_394: # If at 152.3		
3380#lw $t0, 20($sp) # IdentifierExp at 158.6		
3384#subu $sp, $sp, 4 # IdentifierExp at 158.6 
3388#sw $t0, ($sp) # IdentifierExp at 158.6	 	
3392#subu $sp, $sp, 4 # False at 158.12		
3396#sw $zero, ($sp) # False at 158.12 
3400#lw $t0, ($sp) # Equals at 158.9 	
3404#lw $t1, 4($sp) # Equals at 158.9			
3408#seq $t0, $t0, $t1 # Equals at 158.9 	 
3409##...subu $at,$t0,$t1
3413##...sltiu $t0,$at,1
3416#addu $sp, $sp, 4 # Equals at 158.9  	
3420#sw $t0, ($sp) # Equals at 158.9	  
3424#lw $t0, ($sp) # Not at 158.9  
3428#xor $t0, $t0, 1 # Not at 158.9 	 
3432#sw $t0, ($sp) # Not at 158.9	 
3436#lw $t0, ($sp) # If at 158.3  	
3440#addu $sp, $sp, 4 # If at 158.3			
3444#beq $t0, $zero, if_else_409 # If at 158.3		
3448#subu $sp, $sp, 4 # Super at 159.10 	 
3452#sw $s2, ($sp) # Super at 159.10 	 
3456#subu $sp, $sp, 4 # StringLiteral at 159.19  	
3460#la $t0, strLit_399 # StringLiteral at 159.19	
3464#sw $t0, ($sp) # StringLiteral at 159.19   
3468#jal printStr # Call at 159.10		
3472#j if_done_409 # If at 158.3	
3476:if_else_409: # If at 158.3 	 
3476#subu $sp, $sp, 4 # Super at 162.10 
3480#sw $s2, ($sp) # Super at 162.10	
3484#subu $sp, $sp, 4 # StringLiteral at 162.19	
3488#la $t0, strLit_404 # StringLiteral at 162.19 	 
3492#sw $t0, ($sp) # StringLiteral at 162.19 
3496#jal printStr # Call at 162.10	  
3500:if_done_409: # If at 158.3	 
3500#lw $t0, 16($sp) # IdentifierExp at 164.6		 
3504#subu $sp, $sp, 4 # IdentifierExp at 164.6 
3508#sw $t0, ($sp) # IdentifierExp at 164.6	 
3512#subu $sp, $sp, 4 # False at 164.12	 
3516#sw $zero, ($sp) # False at 164.12	
3520#lw $t0, ($sp) # Equals at 164.9 		
3524#lw $t1, 4($sp) # Equals at 164.9 		
3528#seq $t0, $t0, $t1 # Equals at 164.9   
3529##...subu $at,$t0,$t1
3533##...sltiu $t0,$at,1
3536#addu $sp, $sp, 4 # Equals at 164.9	 	
3540#sw $t0, ($sp) # Equals at 164.9	 
3544#lw $t0, ($sp) # Not at 164.9  
3548#xor $t0, $t0, 1 # Not at 164.9	 
3552#sw $t0, ($sp) # Not at 164.9			
3556#lw $t0, ($sp) # If at 164.3  	
3560#addu $sp, $sp, 4 # If at 164.3			
3564#beq $t0, $zero, if_else_424 # If at 164.3 		
3568#subu $sp, $sp, 4 # Super at 165.10	
3572#sw $s2, ($sp) # Super at 165.10 		
3576#subu $sp, $sp, 4 # StringLiteral at 165.19 	
3580#la $t0, strLit_414 # StringLiteral at 165.19  
3584#sw $t0, ($sp) # StringLiteral at 165.19	
3588#jal printStr # Call at 165.10			
3592#j if_done_424 # If at 164.3 	 
3596:if_else_424: # If at 164.3	 
3596#subu $sp, $sp, 4 # Super at 168.10 		
3600#sw $s2, ($sp) # Super at 168.10		
3604#subu $sp, $sp, 4 # StringLiteral at 168.19 	
3608#la $t0, strLit_419 # StringLiteral at 168.19	  
3612#sw $t0, ($sp) # StringLiteral at 168.19 	
3616#jal printStr # Call at 168.10 	
3620:if_done_424: # If at 164.3	
3620#lw $t0, 12($sp) # IdentifierExp at 170.6 
3624#subu $sp, $sp, 4 # IdentifierExp at 170.6  	
3628#sw $t0, ($sp) # IdentifierExp at 170.6 	
3632#subu $sp, $sp, 4 # False at 170.13 	 
3636#sw $zero, ($sp) # False at 170.13		
3640#lw $t0, ($sp) # Equals at 170.10 	 
3644#lw $t1, 4($sp) # Equals at 170.10 		
3648#seq $t0, $t0, $t1 # Equals at 170.10  
3649##...subu $at,$t0,$t1
3653##...sltiu $t0,$at,1
3656#addu $sp, $sp, 4 # Equals at 170.10 	
3660#sw $t0, ($sp) # Equals at 170.10		 
3664#lw $t0, ($sp) # Not at 170.10   
3668#xor $t0, $t0, 1 # Not at 170.10	 
3672#sw $t0, ($sp) # Not at 170.10 	
3676#lw $t0, ($sp) # If at 170.3	 	
3680#addu $sp, $sp, 4 # If at 170.3	
3684#beq $t0, $zero, if_else_439 # If at 170.3   
3688#subu $sp, $sp, 4 # Super at 171.10 	 
3692#sw $s2, ($sp) # Super at 171.10			
3696#subu $sp, $sp, 4 # StringLiteral at 171.19  	
3700#la $t0, strLit_429 # StringLiteral at 171.19  	
3704#sw $t0, ($sp) # StringLiteral at 171.19	 	
3708#jal printStr # Call at 171.10	 	
3712#j if_done_439 # If at 170.3			
3716:if_else_439: # If at 170.3 	
3716#subu $sp, $sp, 4 # Super at 174.10	  
3720#sw $s2, ($sp) # Super at 174.10 	
3724#subu $sp, $sp, 4 # StringLiteral at 174.19	 	
3728#la $t0, strLit_434 # StringLiteral at 174.19  	
3732#sw $t0, ($sp) # StringLiteral at 174.19	 
3736#jal printStr # Call at 174.10	  
3740:if_done_439: # If at 170.3 		
3740#lw $t0, 8($sp) # IdentifierExp at 176.6   
3744#subu $sp, $sp, 4 # IdentifierExp at 176.6  	
3748#sw $t0, ($sp) # IdentifierExp at 176.6 
3752#subu $sp, $sp, 4 # False at 176.13 	 
3756#sw $zero, ($sp) # False at 176.13  
3760#lw $t0, ($sp) # Equals at 176.10	  
3764#lw $t1, 4($sp) # Equals at 176.10 	 
3768#seq $t0, $t0, $t1 # Equals at 176.10	
3769##...subu $at,$t0,$t1
3773##...sltiu $t0,$at,1
3776#addu $sp, $sp, 4 # Equals at 176.10	 
3780#sw $t0, ($sp) # Equals at 176.10	
3784#lw $t0, ($sp) # Not at 176.10   
3788#xor $t0, $t0, 1 # Not at 176.10	 
3792#sw $t0, ($sp) # Not at 176.10 		
3796#lw $t0, ($sp) # If at 176.3 		
3800#addu $sp, $sp, 4 # If at 176.3 		
3804#beq $t0, $zero, if_else_454 # If at 176.3 	
3808#subu $sp, $sp, 4 # Super at 177.10 
3812#sw $s2, ($sp) # Super at 177.10	 
3816#subu $sp, $sp, 4 # StringLiteral at 177.19		
3820#la $t0, strLit_444 # StringLiteral at 177.19 
3824#sw $t0, ($sp) # StringLiteral at 177.19 
3828#jal printStr # Call at 177.10		 
3832#j if_done_454 # If at 176.3 	 
3836:if_else_454: # If at 176.3			
3836#subu $sp, $sp, 4 # Super at 180.10		 
3840#sw $s2, ($sp) # Super at 180.10   
3844#subu $sp, $sp, 4 # StringLiteral at 180.19		
3848#la $t0, strLit_449 # StringLiteral at 180.19  	
3852#sw $t0, ($sp) # StringLiteral at 180.19	
3856#jal printStr # Call at 180.10	 
3860:if_done_454: # If at 176.3 	
3860#lw $t0, 4($sp) # IdentifierExp at 182.6	 
3864#subu $sp, $sp, 4 # IdentifierExp at 182.6 
3868#sw $t0, ($sp) # IdentifierExp at 182.6  	
3872#subu $sp, $sp, 4 # False at 182.13 
3876#sw $zero, ($sp) # False at 182.13		 
3880#lw $t0, ($sp) # Equals at 182.10 
3884#lw $t1, 4($sp) # Equals at 182.10  	
3888#seq $t0, $t0, $t1 # Equals at 182.10	
3889##...subu $at,$t0,$t1
3893##...sltiu $t0,$at,1
3896#addu $sp, $sp, 4 # Equals at 182.10 	
3900#sw $t0, ($sp) # Equals at 182.10	 	
3904#lw $t0, ($sp) # Not at 182.10  	
3908#xor $t0, $t0, 1 # Not at 182.10		 
3912#sw $t0, ($sp) # Not at 182.10	 	
3916#lw $t0, ($sp) # If at 182.3 	 
3920#addu $sp, $sp, 4 # If at 182.3	 
3924#beq $t0, $zero, if_else_469 # If at 182.3   
3928#subu $sp, $sp, 4 # Super at 183.10   
3932#sw $s2, ($sp) # Super at 183.10   
3936#subu $sp, $sp, 4 # StringLiteral at 183.19 
3940#la $t0, strLit_459 # StringLiteral at 183.19   
3944#sw $t0, ($sp) # StringLiteral at 183.19 
3948#jal printStr # Call at 183.10 	
3952#j if_done_469 # If at 182.3	
3956:if_else_469: # If at 182.3	 	
3956#subu $sp, $sp, 4 # Super at 186.10 	 
3960#sw $s2, ($sp) # Super at 186.10	  
3964#subu $sp, $sp, 4 # StringLiteral at 186.19 		
3968#la $t0, strLit_464 # StringLiteral at 186.19	 
3972#sw $t0, ($sp) # StringLiteral at 186.19			
3976#jal printStr # Call at 186.10	
3980:if_done_469: # If at 182.3	 	
3980#lw $t0, 0($sp) # IdentifierExp at 188.6		
3984#subu $sp, $sp, 4 # IdentifierExp at 188.6 
3988#sw $t0, ($sp) # IdentifierExp at 188.6   
3992#subu $sp, $sp, 4 # False at 188.13  	
3996#sw $zero, ($sp) # False at 188.13   
4000#lw $t0, ($sp) # Equals at 188.10	
4004#lw $t1, 4($sp) # Equals at 188.10   
4008#seq $t0, $t0, $t1 # Equals at 188.10	
4009##...subu $at,$t0,$t1
4013##...sltiu $t0,$at,1
4016#addu $sp, $sp, 4 # Equals at 188.10 
4020#sw $t0, ($sp) # Equals at 188.10 
4024#lw $t0, ($sp) # Not at 188.10	 	
4028#xor $t0, $t0, 1 # Not at 188.10 	
4032#sw $t0, ($sp) # Not at 188.10	  
4036#lw $t0, ($sp) # If at 188.3 	
4040#addu $sp, $sp, 4 # If at 188.3 		
4044#beq $t0, $zero, if_else_484 # If at 188.3		
4048#subu $sp, $sp, 4 # Super at 189.10 
4052#sw $s2, ($sp) # Super at 189.10	  
4056#subu $sp, $sp, 4 # StringLiteral at 189.19 	
4060#la $t0, strLit_474 # StringLiteral at 189.19  
4064#sw $t0, ($sp) # StringLiteral at 189.19 		
4068#jal printStr # Call at 189.10		
4072#j if_done_484 # If at 188.3 
4076:if_else_484: # If at 188.3 		
4076#subu $sp, $sp, 4 # Super at 192.10 
4080#sw $s2, ($sp) # Super at 192.10 	 
4084#subu $sp, $sp, 4 # StringLiteral at 192.19		 
4088#la $t0, strLit_479 # StringLiteral at 192.19 		
4092#sw $t0, ($sp) # StringLiteral at 192.19	
4096#jal printStr # Call at 192.10		 
4100:if_done_484: # If at 188.3			
4100#subu $sp, $sp, 4 # Super at 196.9			
4104#sw $s2, ($sp) # Super at 196.9 		
4108#subu $sp, $sp, 4 # StringLiteral at 196.18 	 
4112#la $t0, strLit_485 # StringLiteral at 196.18  
4116#sw $t0, ($sp) # StringLiteral at 196.18 	 
4120#jal printStr # Call at 196.9			
4124#subu $sp, $sp, 8 # IntegerLiteral at 199.8			
4128#sw $s5, 4($sp) # IntegerLiteral at 199.8 		
4132#li $t0, 1 # IntegerLiteral at 199.8 	 
4136#sw $t0, ($sp) # IntegerLiteral at 199.8  
4140#subu $sp, $sp, 8 # IntegerLiteral at 199.13  	
4144#sw $s5, 4($sp) # IntegerLiteral at 199.13 
4148#li $t0, 2 # IntegerLiteral at 199.13 	
4152#sw $t0, ($sp) # IntegerLiteral at 199.13  
4156#lw $t0, ($sp) # Equals at 199.10 	 
4160#lw $t1, 8($sp) # Equals at 199.10  	
4164#seq $t0, $t0, $t1 # Equals at 199.10	 	
4165##...subu $at,$t0,$t1
4169##...sltiu $t0,$at,1
4172#addu $sp, $sp, 12 # Equals at 199.10	
4176#sw $t0, ($sp) # Equals at 199.10 		
4180#lw $t0, ($sp) # Not at 199.6		 
4184#xor $t0, $t0, 1 # Not at 199.6 		
4188#sw $t0, ($sp) # Not at 199.6	 	
4192#lw $t0, ($sp) # If at 199.3 	 
4196#addu $sp, $sp, 4 # If at 199.3 
4200#beq $t0, $zero, if_else_503 # If at 199.3		
4204#subu $sp, $sp, 4 # Super at 200.10	  
4208#sw $s2, ($sp) # Super at 200.10  
4212#subu $sp, $sp, 4 # StringLiteral at 200.19	  
4216#la $t0, strLit_493 # StringLiteral at 200.19  
4220#sw $t0, ($sp) # StringLiteral at 200.19	  
4224#jal printStr # Call at 200.10			
4228#j if_done_503 # If at 199.3	 	
4232:if_else_503: # If at 199.3	 	
4232#subu $sp, $sp, 4 # Super at 203.10	  
4236#sw $s2, ($sp) # Super at 203.10	 
4240#subu $sp, $sp, 4 # StringLiteral at 203.19   
4244#la $t0, strLit_498 # StringLiteral at 203.19 
4248#sw $t0, ($sp) # StringLiteral at 203.19  
4252#jal printStr # Call at 203.10   
4256:if_done_503: # If at 199.3   
4256#subu $sp, $sp, 8 # IntegerLiteral at 205.12 	
4260#sw $s5, 4($sp) # IntegerLiteral at 205.12  	
4264#li $t0, 1 # IntegerLiteral at 205.12  	
4268#sw $t0, ($sp) # IntegerLiteral at 205.12   
4272#subu $sp, $sp, 8 # IntegerLiteral at 205.17  
4276#sw $s5, 4($sp) # IntegerLiteral at 205.17		
4280#li $t0, 2 # IntegerLiteral at 205.17 		
4284#sw $t0, ($sp) # IntegerLiteral at 205.17		 
4288#lw $t0, ($sp) # Equals at 205.14	 	
4292#lw $t1, 8($sp) # Equals at 205.14 	
4296#seq $t0, $t0, $t1 # Equals at 205.14 	 
4297##...subu $at,$t0,$t1
4301##...sltiu $t0,$at,1
4304#addu $sp, $sp, 12 # Equals at 205.14	
4308#sw $t0, ($sp) # Equals at 205.14	  
4312#lw $t0, ($sp) # Not at 205.10	  
4316#xor $t0, $t0, 1 # Not at 205.10	 
4320#sw $t0, ($sp) # Not at 205.10 	 
4324#lw $t0, ($sp) # Not at 205.8   
4328#xor $t0, $t0, 1 # Not at 205.8 	
4332#sw $t0, ($sp) # Not at 205.8	
4336#lw $t0, ($sp) # Not at 205.6  	
4340#xor $t0, $t0, 1 # Not at 205.6 	
4344#sw $t0, ($sp) # Not at 205.6   
4348#lw $t0, ($sp) # If at 205.3 	 
4352#addu $sp, $sp, 4 # If at 205.3		 
4356#beq $t0, $zero, if_else_520 # If at 205.3  
4360#subu $sp, $sp, 4 # Super at 206.10 
4364#sw $s2, ($sp) # Super at 206.10   
4368#subu $sp, $sp, 4 # StringLiteral at 206.19 
4372#la $t0, strLit_510 # StringLiteral at 206.19  
4376#sw $t0, ($sp) # StringLiteral at 206.19   
4380#jal printStr # Call at 206.10	  
4384#j if_done_520 # If at 205.3  
4388:if_else_520: # If at 205.3   
4388#subu $sp, $sp, 4 # Super at 209.10	 	
4392#sw $s2, ($sp) # Super at 209.10	  
4396#subu $sp, $sp, 4 # StringLiteral at 209.19 	
4400#la $t0, strLit_515 # StringLiteral at 209.19 	
4404#sw $t0, ($sp) # StringLiteral at 209.19		 
4408#jal printStr # Call at 209.10	
4412:if_done_520: # If at 205.3   
4412#subu $sp, $sp, 8 # IntegerLiteral at 211.14  	
4416#sw $s5, 4($sp) # IntegerLiteral at 211.14 	
4420#li $t0, 1 # IntegerLiteral at 211.14 	 
4424#sw $t0, ($sp) # IntegerLiteral at 211.14	 
4428#subu $sp, $sp, 8 # IntegerLiteral at 211.19	 
4432#sw $s5, 4($sp) # IntegerLiteral at 211.19   
4436#li $t0, 1 # IntegerLiteral at 211.19 	 
4440#sw $t0, ($sp) # IntegerLiteral at 211.19 	 
4444#lw $t0, ($sp) # Equals at 211.16 	 
4448#lw $t1, 8($sp) # Equals at 211.16 		
4452#seq $t0, $t0, $t1 # Equals at 211.16  	
4453##...subu $at,$t0,$t1
4457##...sltiu $t0,$at,1
4460#addu $sp, $sp, 12 # Equals at 211.16 	 
4464#sw $t0, ($sp) # Equals at 211.16 	
4468#lw $t0, ($sp) # Not at 211.12   
4472#xor $t0, $t0, 1 # Not at 211.12   
4476#sw $t0, ($sp) # Not at 211.12  	
4480#lw $t0, ($sp) # Not at 211.10		 
4484#xor $t0, $t0, 1 # Not at 211.10	 	
4488#sw $t0, ($sp) # Not at 211.10	 
4492#lw $t0, ($sp) # Not at 211.8	 	
4496#xor $t0, $t0, 1 # Not at 211.8	 	
4500#sw $t0, ($sp) # Not at 211.8	
4504#lw $t0, ($sp) # Not at 211.6  
4508#xor $t0, $t0, 1 # Not at 211.6 	 
4512#sw $t0, ($sp) # Not at 211.6		
4516#lw $t0, ($sp) # If at 211.3  
4520#addu $sp, $sp, 4 # If at 211.3		 
4524#beq $t0, $zero, if_else_538 # If at 211.3   
4528#subu $sp, $sp, 4 # Super at 212.10		 
4532#sw $s2, ($sp) # Super at 212.10  
4536#subu $sp, $sp, 4 # StringLiteral at 212.19		 
4540#la $t0, strLit_528 # StringLiteral at 212.19			
4544#sw $t0, ($sp) # StringLiteral at 212.19  	
4548#jal printStr # Call at 212.10	  
4552#j if_done_538 # If at 211.3	 
4556:if_else_538: # If at 211.3 
4556#subu $sp, $sp, 4 # Super at 215.10	 
4560#sw $s2, ($sp) # Super at 215.10	
4564#subu $sp, $sp, 4 # StringLiteral at 215.19			
4568#la $t0, strLit_533 # StringLiteral at 215.19 
4572#sw $t0, ($sp) # StringLiteral at 215.19  
4576#jal printStr # Call at 215.10  	
4580:if_done_538: # If at 211.3	 	
4580#subu $sp, $sp, 4 # Super at 219.9	 
4584#sw $s2, ($sp) # Super at 219.9 	 
4588#subu $sp, $sp, 4 # StringLiteral at 219.18 	
4592#la $t0, strLit_539 # StringLiteral at 219.18	
4596#sw $t0, ($sp) # StringLiteral at 219.18 	
4600#jal printStr # Call at 219.9  	
4604#lw $t0, 48($sp) # IdentifierExp at 221.6 	 
4608#subu $sp, $sp, 4 # IdentifierExp at 221.6 		
4612#sw $t0, ($sp) # IdentifierExp at 221.6 
4616#lw $t0, ($sp) # And at 221.9		 
4620#beq $t0, $zero, skip_545 # And at 221.9 	 
4624#addu $sp, $sp, 4 # And at 221.9 	 
4628#lw $t0, 40($sp) # IdentifierExp at 221.12	
4632#subu $sp, $sp, 4 # IdentifierExp at 221.12	
4636#sw $t0, ($sp) # IdentifierExp at 221.12 	
4640:skip_545: # And at 221.9  	
4640#lw $t0, ($sp) # If at 221.3		 
4644#addu $sp, $sp, 4 # If at 221.3 		
4648#beq $t0, $zero, if_else_556 # If at 221.3	  
4652#subu $sp, $sp, 4 # Super at 222.10 
4656#sw $s2, ($sp) # Super at 222.10   
4660#subu $sp, $sp, 4 # StringLiteral at 222.19 	
4664#la $t0, strLit_546 # StringLiteral at 222.19 		
4668#sw $t0, ($sp) # StringLiteral at 222.19 		
4672#jal printStr # Call at 222.10  	
4676#j if_done_556 # If at 221.3		 
4680:if_else_556: # If at 221.3 
4680#subu $sp, $sp, 4 # Super at 225.10 
4684#sw $s2, ($sp) # Super at 225.10   
4688#subu $sp, $sp, 4 # StringLiteral at 225.19   
4692#la $t0, strLit_551 # StringLiteral at 225.19 	
4696#sw $t0, ($sp) # StringLiteral at 225.19 	 
4700#jal printStr # Call at 225.10			
4704:if_done_556: # If at 221.3  	
4704#lw $t0, 48($sp) # IdentifierExp at 227.10	
4708#subu $sp, $sp, 4 # IdentifierExp at 227.10  	
4712#sw $t0, ($sp) # IdentifierExp at 227.10 	
4716#lw $t0, ($sp) # And at 227.13	 	
4720#beq $t0, $zero, skip_559 # And at 227.13 
4724#addu $sp, $sp, 4 # And at 227.13	  
4728#lw $t0, 40($sp) # IdentifierExp at 227.16	
4732#subu $sp, $sp, 4 # IdentifierExp at 227.16  	
4736#sw $t0, ($sp) # IdentifierExp at 227.16 		
4740:skip_559: # And at 227.13  
4740#lw $t0, ($sp) # Not at 227.8	 
4744#xor $t0, $t0, 1 # Not at 227.8 
4748#sw $t0, ($sp) # Not at 227.8	
4752#lw $t0, ($sp) # Not at 227.6   
4756#xor $t0, $t0, 1 # Not at 227.6 	
4760#sw $t0, ($sp) # Not at 227.6		
4764#lw $t0, ($sp) # If at 227.3 	
4768#addu $sp, $sp, 4 # If at 227.3  	
4772#beq $t0, $zero, if_else_572 # If at 227.3   
4776#subu $sp, $sp, 4 # Super at 228.10	 
4780#sw $s2, ($sp) # Super at 228.10		 
4784#subu $sp, $sp, 4 # StringLiteral at 228.19  
4788#la $t0, strLit_562 # StringLiteral at 228.19  	
4792#sw $t0, ($sp) # StringLiteral at 228.19		 
4796#jal printStr # Call at 228.10		
4800#j if_done_572 # If at 227.3	  
4804:if_else_572: # If at 227.3 	 
4804#subu $sp, $sp, 4 # Super at 231.10	 
4808#sw $s2, ($sp) # Super at 231.10		 
4812#subu $sp, $sp, 4 # StringLiteral at 231.19		
4816#la $t0, strLit_567 # StringLiteral at 231.19 		
4820#sw $t0, ($sp) # StringLiteral at 231.19	
4824#jal printStr # Call at 231.10 
4828:if_done_572: # If at 227.3		
4828#lw $ra, 72($sp) # MethodDeclVoid at 2.14 		
4832#lw $s2, 4($sp) # MethodDeclVoid at 2.14	 	
4836#addu $sp, $sp, 80 # MethodDeclVoid at 2.14  
4840#jr $ra # MethodDeclVoid at 2.14 	
###############################################################
# MiniJava/UP library for MIPS/Spim -- version that assumes
#    one-word boolean on stack
# author: Steven R. Vegdahl
# date: 7-13 July 2004
# modified 12-17 March 2007
# modified 3-25 May 2007
# status: reasonably debugged (allegedly)
###############################################################

	.text

###############################################################
# readLine() - library method (class Lib)
# - reads line from standard input
# - produces String that contains the line read, except that it
#   does not include the end-of-line character-sequence. An
#   end-of-line character-sequence is one of the following:
#   - a return character followed by a newline character
#   - a newline character not preceded by a return character
#   - a return character not followed by a newline character
#   - an end-of-file character that follows at least one data
#     character
# - returns null on end-of-file
# - parameter:
#   - ($sp) - this-pointer
# - return-value:
#   - ($sp) - pointer to string containing line that was read
# - anomalies:
#   - with bare "return", looks ahead one character to check for
#     newline.  This could cause non-intuitive behavior when
#     run interactively.
###############################################################
4844:readLine:
	
4844#	subu $sp,$sp,8 # allocate space for data tag, saving $ra
4848#	sw $ra, 4($sp) # save $ra
4852#	move $t1,$sp # save "original" sp

4856:  doRead:

	# read the character
4856#	jal readLogicalChar

	# if we have a 'return', read another character to check for
	# newline
4860#	subu $t2,$v0,13
4864#	bne $t2,$zero,notReturnRL
4868#	jal readLogicalChar
4872#	subu $t2,$v0,10 # check for newline
4876#	beq $t2,$zero,foundNewLine
4880#	sw $v0,lastCharRead # push back character into queue
4884#	j foundNewLine # go process the line

4888:  notReturnRL:

	# at this point, $v0 has our character

4888#	subu $t0,$v0,10
4892#	beq $t0,$zero,foundNewLine
4896#	blt $v0,$zero,foundEof
4897##...slt $at,$v0,$zero
4901##...bne $at,$zero,$+16

	# we have a character, so push it onto stack
4904#	subu $sp,$sp,4
4908#	sw $v0,($sp)

	# loop back up to get next character
4912#	j doRead

4916:  foundEof:
	# if we had actually read some characters before hitting
        # the eof, go return them as if a newline had been read
4916#	bne $t1,$sp foundNewLine

	# otherwise, we got end of file without having read any
  # new characters, so return null
4920#	sw $zero,8($sp) # return-value: null
4924#	j rlReturn # return

4928:  foundNewLine:

	# at this point, we have our newline (or end-of-file), and all space
        # on the stack above $t1 are characters to be put into the string.
        # That is therefore the number of data words to allocate (plus 1
        # more for the class-pointer)


	# set up GC tag and char-count on stack
4928#	subu $t0,$t1,$sp # number of chars we read (times 4)
4932#	srl $s6,$t0,2 # number of words on stack with chars
4936#	subu $sp,$sp,4 # push char-count ...
4940#	sw $s6,($sp) # ... onto stack
4944#	addu $t2,$t0,5 # GC tag, incl. for count-word
4948#	sw $t2,($t1) # store GC tag
	
	# allocate the appropriate Object
4952#	addu $s6,$s6,7 # 3 to round up, plus 1 for v-table pointer word
4956#	srl $s6,$s6,2 # data words in object
4960#	move $s7,$zero # # object words in object
4964#	jal newObject # allocate space
	
	# store header words
4968#	la $t0,CLASS_String
4972#	sw $t0,-12($s7) # store class tag (String) into object
4976#	lw $t2,4($sp) # char-count
4980#	sll $t1,$t2,2 # 4 times number of chars
4984#	subu $t2,$zero,$t2 # negative of char-count
4988#	sw $t2,-4($s7) # store negative char-count as header-word 2

	# set up pointers to various parts of stack and object
4992#	lw $t0,-8($s7) # data words in object
4996#	sll $t0,$t0,2 # data bytes in object
5000#	subu $t0,$s7,$t0 # place to store first character (plus 8)	
5004#	subu $t0,$t0,$t2 # place to store last character (plus 9)
5008#	addu $sp,$sp,8 # pop redundant object-pointer and count
5012#	addu $t1,$t1,$sp # first non-char spot on stack

	# at this point:
	#  $t0 points to the target-spot for the last character (plus 9)
	#  $t1 contains top spot on the stack not containing a char
	#  $sp points to the word with the last source character

	# copy the characters, popping each off the stack

5016#	beq $sp,$t1,doneCharCopy
5020:  charCopyLoop:
5020#	lw $t2,($sp)
5024#	sb $t2,-9($t0)
5028#	addu $sp,$sp,4
5032#	subu $t0,$t0,1
5036#	bne $sp,$t1,charCopyLoop
5040:  doneCharCopy:

	# put our pointer (the return value) on the eventual top stack
5040#	sw $s7,8($sp)
	
5044:  rlReturn:
	# restore return address and return
5044#	lw $ra,4($sp) # restore return address, ...
5048#	addu $sp,$sp,8 # ... by popping it (and this-pointer) off stack
5052#	jr $ra

###################################################################
# readInt() - library method (class Lib)
# - skips whitespace
# - then attempts to read a base-10 integer from standard input
# - aborts program if a valid integer is not found
# - returns the integer that is read
# - truncates on overflow
# - parameter:
#   - ($sp) - this-pointer
# - return-value:
#   - ($sp) - value that was read
#   - 4($sp) - (dummy) GC tag
###################################################################
5056:readInt:

	# save $ra by pushing onto stack
5056#	subu $sp,$sp,4
5060#	sw $ra,($sp)

5064:  riSkipWhiteLoop:
	# read a character
5064#	jal readLogicalChar

	# if character <= 32 ascii, check for whitespace; if not
	# whitespace, abort 
5068#	subu $t0,$v0,32
5072#	bgt $t0,$zero,nonWhite
5073##...slt $at,$zero,$t0
5077##...bne $at,$zero,$+44
5080#	beq $t0,$zero,riSkipWhiteLoop # start over if space
5084#	subu $t0,$v0,10
5088#	beq $t0,$zero,riSkipWhiteLoop # start over if newline
5092#	subu $t0,$v0,9
5096#	beq $t0,$zero,riSkipWhiteLoop # start over if tab
5100#	subu $t0,$v0,13
5104#	beq $t0,$zero,riSkipWhiteLoop # start over if carriage return
5108#	subu $t0,$v0,12
5112#	beq $t0,$zero,riSkipWhiteLoop # start over if form-feed
5116#	j badIntegerFormat # illegal integer char: abort program

5120:  nonWhite:
5120#	subu $t0,$v0,'-'
5124#	li $t4,1 # final multiplier
5128#	bne $t0,$zero,helpReadInt # go read
5132#	li $t4,-1 # -1 in final multiplier

	# read another character to make up for the '-'
5136#	jal readLogicalChar

5140:  helpReadInt:
5140#	li $t2,10
5144#	subu $t1,$v0,'0' # convert digit to 0-9 value
5148#	bgeu $t1,$t2,badIntegerFormat # abort if not digit
5149##...sltu $at,$t1,$t2
5153##...beq $at,$zero,$+2080
5156#	move $t3,$t1 #

	#### at this point, $t3 contains value of the first digit read,
	#### and $t2 contains the value 10

5160:  digitLoop:
	# loop invariants:
	# - $t3 contains the value of the number we've read so far
	# - $t2 contains the value 10

5160#	jal readLogicalChar # read next character
5164#	subu $t1,$v0,'0' # convert digit to 0-9 value
5168#	bgeu $t1,$t2,doneDigitLoop # abort if not digit
5169##...sltu $at,$t1,$t2
5173##...beq $at,$zero,$+20

5176#	mul $t3,$t3,$t2 # multiply old value by 10
5177##...mult $t3,$t2
5181##...mflo $t3
5184#	addu $t3,$t3,$t1 # add in value of new digit
5188#	j digitLoop

5192:  doneDigitLoop:

	# "push back" unused character into queue
5192#	sw $v0,lastCharRead

	# restore return address and overwrite it with return-val;
	# write dummy GC tag as second word of return-val
5196#	lw $ra,($sp)
5200#	mult $t3,$t4 # multiply to account for poss. minus sign
5204#	mflo $t3
5208#	sw $t3,($sp) # result
5212#	sw $s5,4($sp) # dummy GC tag
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING
	
	# return
5216#	jr $ra

###################################################################
# readChar() - library method (class Lib)
# - reads a single character from standard input
# - returns the integer that is the encoding of the character
# - returns -1 if end of file was encountered
# - parameter:
#   - ($sp) - this-pointer
# - return-value:
#   - ($sp) - value that was read
#   - 4($sp) - (dummy) GC tag
###################################################################
5220:readChar:

	# save $ra by pushing onto stack
5220#	subu $sp,$sp,4
5224#	sw $ra,($sp)

  	# read the character
5228#	jal readLogicalChar

	# restore return address; put value (and dummy GC tag),
	# replacing this-pointer saved return address
5232#	lw $ra,($sp)
5236#	sw $s5,4($sp)
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING
5240#	sw $v0,($sp)

	# return
5244#	jr $ra

########################################################
# printStr(str) - library method (class Lib)
# - prints string to standard output
# parameters:
#   - ($sp) - the string to print
#   - 4($sp) - this-pointer
########################################################
5248:printStr:
	# check for null, printing "(null)", if so
5248#	lw $t0,($sp)
5252#	bne $t0,$zero,psNotNull

	# print "(null)"
5256#	la $a0,nullStr
5260#	li $v0,4
5264#	syscall
5268#	j donePrintStr
	
5272:  psNotNull:
	##### we have a non-null string #####
	# this means that:
	# - number of data words in object is in -8($t0)
	# - negative of number of characters in string is in -4($t0)
	# - string begins at $t0-8-(#dataWords*4), stored 1 char per byte
5272#	subu $t0,$t0,8
5276#	lw $t1,($t0) # word just beyond end of string
5280#	sll $t1,$t1,2
5284#	subu $t1,$t0,$t1 # first word in string
5288#	lw $t0,4($t0) # negative of string-length
5292#	subu $t0,$t1,$t0 # byte just beyond last char in string

	# print the chars in the string
5296#	beq $t0,$t1,donePrintStr
5300:  psLoop:
5300#	lb $a0,($t1) # next byte
5304#	li $v0,11 # code for printing char
5308#        syscall # print the char
5312#	addu $t1,$t1,1 # go to next char
5316#	blt $t1,$t0,psLoop
5317##...slt $at,$t1,$t0
5321##...bne $at,$zero,$-20

5324:  donePrintStr:
	# pop stack and return
5324#	addu $sp,$sp,8
5328#	jr $ra

########################################################
# printInt(n) - library method (class Lib)
# - prints integer in decimal format to standard output
# - parameters:
#   - ($sp) - the integer to print
#   - 4($sp) - (dummy) GC tag
#   - 8($sp) - this-pointer
########################################################
5332:printInt:
	# pop value off stack, along with 'this'
5332#	lw $a0,($sp)
5336#	addu $sp,$sp,12

	# print it
5340#	li $v0,1 # code for print-int
5344#	syscall

	# return
5348#	jr $ra

########################################################
# printBool(n) - library method (class Lib)
# - prints boolean to standard output
# - parameters:
#   - ($sp) - the boolean to print
#   - 4($sp) - this-pointer
########################################################
5352:printBool:
	# pop value off stack, along with 'this'
5352#	lw $t0,($sp)
5356#	addu $sp,$sp,8

	# print either 'true' or 'false', depending on the value
5360#	la $a0,falseString
5364#	beq $t0,$zero,skipPB
5368#	la $a0,trueString
5372:  skipPB:
5372#	li $v0,4 # code for print-string
5376#	syscall

	# return
5380#	jr $ra

########################################################
# str.substring(n, k) - library method (class String)
# takes a substring of a string: Java: str.substring(n, k)
# - parameters:
#   - ($sp) - k: one beyond index of last char in subrange
#   - 4($sp) - (dummy) GC tag
#   - 8($sp) - n: index of first char in subrange
#   - 12($sp) - (dummy) GC tag
#   - 16($sp) - str: string to take substring of
# - return value:
#  - ($sp) - substring
########################################################
5384:substring:

	# save $ra by pushing onto stack
5384#	subu $sp,$sp,4
5388#	sw $ra,($sp)

	# get string value off stack, test for null
5392#	lw $t0,20($sp)
5396#	beq $t0,$zero,nullPtrException

	# get both indices and string length, and ensure that
	#   0 <= n <= k <= length
5400#	lw $t0,-4($t0) # negative of string length
5404#	subu $t0,$zero,$t0 # string length
5408#	lw $t1,4($sp) # k
5412#	lw $t2,12($sp) # n
5416#	bgt $zero,$t2,strIndexOutOfBounds
5417##...slt $at,$t2,$zero
5421##...bne $at,$zero,$+1780
5424#	bgt $t2,$t1,strIndexOutOfBounds
5425##...slt $at,$t1,$t2
5429##...bne $at,$zero,$+1772
5432#	bgt $t1,$t0,strIndexOutOfBounds
5433##...slt $at,$t0,$t1
5437##...bne $at,$zero,$+1764

	# allocate memory
5440#	subu $s6,$t1,$t2 # # chars in target-string
5444#	addu $s6,$s6,7 # account for extra "class" (4) word + 3 to round up
5448#	srl $s6,$s6,2 # convert bytes-count to word-count
5452#	move $s7,$zero # (no object-bytes in string)
5456#	jal newObject

	# store "String" tag in object-type field
5460#	la $t0,CLASS_String
5464#	sw $t0,-12($s7)
	
	# store negative of count (=n-k) into object-length header-word
5468#	lw $t1,8($sp) # k
5472#	lw $t2,16($sp) # n
5476#	subu $t0,$t2,$t1 # value to store
5480#	sw $t0,-4($s7) # store value
	
	# store result in return-spot on stack
5484#	lw $t3,24($sp) # source string pointer
5488#	sw $s7,24($sp) # store final result in return-spot on stack
	
	# skip byte-copy loop if length is zero
5492#	beq $zero,$t0,doneSubCopyzz

	# get pointers set up in preparation for copy
5496#	lw $t4,-8($t3) # # data words in source string
5500#	sll $t4,$t4,2 # # data bytes in source string
5504#	subu $t3,$t3,$t4 # addr. of first data word of source string (+8)
5508#	addu $t3,$t3,$t2 # addr. of first source data byte to be copied (+8)
5512#	subu $t1,$t3,$t0 # addr. beyond last source data byte to be copied (+8)
5516#	lw $t2,-8($s7) # # data words in target string
5520#	sll $t2,$t2,2 # # data bytes in target string
5524#	subu $t2,$s7,$t2 # addr. of first target data byte (+8)
	
	############################################
	# at this point:
	# - we know that the string has a positive length
	# - $t3 contains 8 + address of the first source-byte
	# - $t1 contains 8 + limit-address of the first source-byte
	# - $t2 contains 8 + address first target byte
	############################################

	# copy the bytes from source to target
5528:  subCopyLoopzz:
5528#	lb $t4,-8($t3)
5532#	sb $t4,-8($t2)
5536#	addu $t2,$t2,1
5540#	addu $t3,$t3,1
5544#	blt $t3,$t1,subCopyLoopzz
5545##...slt $at,$t3,$t1
5549##...bne $at,$zero,$-20
	
5552:  doneSubCopyzz:
	# restore return address, store return value, pop stack
5552#	lw $ra,4($sp) # restore $ra
5556#	addu $sp,$sp,24 # pop stack
	
	# return
5560#	jr $ra

########################################################
# length() - library method (class String)
# returns length of a string: Java: str.length()
# - parameters:
#   - ($sp) - the string
# - return-value:
#   - ($sp) - length of string
#   - 4($sp) - (dummy) GC tag
########################################################
5564:length:

	# get string pointer
5564#	lw $t0,($sp)
	
	# grow stack
5568#	subu $sp,$sp,4

	# store GC tag
5572#	sw $s5,4($sp)
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING

	# push length onto stack
5576#	lw $t0,-4($t0) # -length
5580#	subu $t0,$zero,$t0
5584#	sw $t0,($sp) #store length

	# return
5588#	jr $ra


########################################################
# str1.concat(str2) - library method (class String)
# (as in Java)
# - parameters:
#   - ($sp) - the second string
#   - 4($sp) - the first string
# - returns:
#   - ($sp) - pointer to concatenated string
########################################################
5592:concat:
 	# save $ra by pushing onto stack
5592#	subu $sp,$sp,4
5596#	sw $ra($sp)

	# get string pointers and check parameter for null
5600#	lw $t0,4($sp)
5604#	beq $t0,$zero,nullPtrException
5608#	lw $t1,8($sp)
	
	# get lengths of two strings; allocate object whose size
	# is their sum divided by 4 (rounded up) plus 1
5612#	lw $t0,-4($t0) # negative size of second object
5616#	lw $t1,-4($t1) # negative size of first object
5620#	addu $s6,$t0,$t1 # sum of negative sizes
5624#	sra $s6,$s6,2 # negative word-size of char part
5628#	subu $s6,$zero,$s6 # word size of char part
5632#	addu $s6,$s6,1 # data word size, including v-table word
5636#	move $s7,$zero
5640#	jal newObject

	# store "String" tag in object-type field
5644#	la $t0,CLASS_String
5648#	sw $t0,-12($s7)
	
	# pop rtnVal, $ra and both parameters off stack; push rtnVal
	# onto stack
5652#	lw $ra,4($sp) # return address
5656#	lw $t0,8($sp) # second object
5660#	lw $t1,12($sp) # first object
5664#	addu $sp,$sp,12 # pop
5668#	sw $s7,($sp) # store return value
	
	# get negative sizes; sum and store in new object size-field
5672#	lw $t2,-4($t0) # negative length of second object
5676#	lw $t3,-4($t1) # negative length of first object
5680#	addu $t4,$t2,$t3 # sum of negative lengths
5684#	sw $t4,-4($s7) # store sum as negated target-string length

	#########################################################
	# at this point:
	# - $t0 is pointer to second object
	# - $t1 is pointer to first object
	# - $t2 is negated length of second object
	# - $t3 is negated length of first object
	# - $s7 is pointer to new object
	#########################################################

	# compute addresses for moving data from first string
5688#	lw $t4,-8($t1) # # data words in first string
5692#	sll $t4,$t4,2 # # data bytes in first string
5696#	subu $t1,$t1,$t4 # addr. (+8) of first byte in first string
5700#	lw $t4,-8($s7) # # data words in new string
5704#	sll $t4,$t4,2 # # data bytes in new string
5708#	subu $s7,$s7,$t4 # addr. (+8) of first byte in new string
5712#	beq $zero,$t3,doneConcatLoop1zz # skip first loop is no bytes to copy
5716#	subu $t3,$t1,$t3 # limit (+8) address for first string

	#########################################################
	# at this point:
	# - $t0 is pointer to second object
	# - $t1 is address (+8) of first byte in first object
	# - $t2 is negated length of second object
	# - $t3 is limit-address (+8) of data in first object
	# - $s7 is address (+8) of first byte in new object
	# - note: if data-length of first object is zero, then
	#   we skip over this part, and go to 'doneConcatLoop1'
	#########################################################

	# copy the bytes from first source to target
5720:  concatLoop1zz:
5720#	lb $t4,-8($t1)
5724#	sb $t4,-8($s7)
5728#	addu $s7,$s7,1
5732#	addu $t1,$t1,1
5736#	blt $t1,$t3,concatLoop1zz
5737##...slt $at,$t1,$t3
5741##...bne $at,$zero,$-20
5744:  doneConcatLoop1zz:
  
    # if second string is empty, skip rest of copy
5744#    beq $zero,$t2,doneConcatLoop2zz

  	# compute addresses for moving data from second string
5748#	lw $t4,-8($t0) # # data words in second string
5752#	sll $t4,$t4,2 # # data bytes in second string
5756#	subu $t1,$t0,$t4 # addr. (+8) of first byte in second string
5760#	subu $t3,$t1,$t2 # limit (+8) address for second string

	#########################################################
	# at this point:
	# - $t1 is address (+8) of first byte in second object
	# - $t3 is limit-address (+8) of data in second object
	# - $s7 is address (+8) of next byte to write new object
	# - note: if data-length of second object is zero, then
	#   we skip over this part, and go to 'doneConcatLoop2'
	#########################################################

	# copy the bytes from first source to target
5764:  concatLoop2zz:
5764#	lb $t4,-8($t1)
5768#	sb $t4,-8($s7)
5772#	addu $s7,$s7,1
5776#	addu $t1,$t1,1
5780#	blt $t1,$t3,concatLoop2zz
5781##...slt $at,$t1,$t3
5785##...bne $at,$zero,$-20
5788:  doneConcatLoop2zz:
 
5788:  concatRtnzz:
	# return
5788#	jr $ra

########################################################
# str.charAt(n) - library method (class String)
# accesses a character in a string, as in Java
# - parameters:
#   - ($sp) - the index, n
#   - 4($sp) - dummy GC tag
#   - 8($sp) - the string, str
# - returns:
#   - ($sp) - the character found
#   - 4($sp) - the dummy GC tag
########################################################
5792:charAt:
	# get string
5792#	lw $t0,8($sp)

	# check that index is in bounds
5796#	lw $t1,-4($t0) # negative of # data words in string
5800#	subu $t3,$zero,$t1 # # chars in string
5804#	lw $t2,($sp) # index
5808#	bgeu $t2,$t3,strIndexOutOfBounds
5809##...sltu $at,$t2,$t3
5813##...beq $at,$zero,$+1388

	# access element
5816#	lw $t1,-8($t0) # # data words in object
5820#	sll $t1,$t1,2 # - byte-offset from end of chars
5824#	subu $t1,$t2,$t1 # - address of first char in string, offset by 8
5828#	addu $t0,$t0,$t1 # - address of our char, offset by 8
5832#	lb $t0,-8($t0) # our char

	# pop elements off stack, pushing rtnVal
5836#	addu $sp,$sp,4
5840#	sw $t0,($sp)
5844#	sw $s5,4($sp)
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING

	# return
5848#	jr $ra

########################################################
# intToString(n) - library method (class Lib)
# converts int to string: Java: ""+n
# - parameters:
#   - ($sp) - the value to convert, n
#   - 4($sp) - dummy GC tag
#   - 8($sp) - this-pointer
# - returns:
#   - ($sp) - the string, which is the string representation of
#     the integer
########################################################
5852:intToString:

	# save return address on stack; allocate space for dummy GC tag
5852#	subu $sp,$sp,8
5856#	sw $ra,4($sp)

	# save current sp
5860#	move $t0,$sp

	# move constant 10 into $t3
5864#	li $t3,10

	# get argument, negate if negative
5868#	lw $t1,8($sp)
5872#	bge $t1,$zero,itsNonNegLoop
5873##...slt $at,$t1,$zero
5877##...beq $at,$zero,$+8
5880#	subu $t1,$zero,$t1

	# loop through, computing unsigned remainder by 10, and
	# storing digits on stack until we reach 0
5884:  itsNonNegLoop:
5884#	divu $t1,$t3
5888#	mflo $t1 # quotient
5892#	mfhi $t4 # remainder
5896#	addu $t4,$t4,'0' # turn remainder into digit
5900#	subu $sp,$sp,4
5904#	sw $t4,($sp) # push digit onto stack
5908#	bne $t1,$zero,itsNonNegLoop

	# push '-' if negative
5912#	lw $t4,8($t0)
5916#	bge $t4,$zero,itsSkipNeg
5917##...slt $at,$t4,$zero
5921##...beq $at,$zero,$+16
5924#	li $t4,'-'
5928#	subu $sp,$sp,4
5932#	sw $t4,($sp)
5936:  itsSkipNeg:

	################################################
	# At this point, all of our digits have been pushed
	# onto the stack.  $sp points to the first one;
	# $t0 contains the limit-pointer (into which we need to
	# write a GC tag).
	################################################

	# compute number of characters on stack (one word per character);
	# write GC tag onto stack; push char-count onto stack
5936#	subu $s6,$t0,$sp
5940#	addu $t3,$s6,5 # GC tag (including for count-word, about to be pushed
5944#	sw $t3,($t0)
5948#	srl $s6,$s6,2
5952#	subu $sp,$sp,4
5956#	sw $s6,($sp)
	
	# allocate memory
5960#	addu $s6,$s6,7 # 3 to round up, plus 4 for vtable word
5964#	srl $s6,$s6,2
5968#	move $s7,$zero # no "object" words in object
5972#	jal newObject

	# restore char-count; pop it and return value from 'newObject'
5976#	lw $t0,4($sp)
5980#	addu $sp,$sp,8

	# store "String" tag into class field
5984#	subu $s7,$s7,8 # address of header-1 word
5988#	la $t1,CLASS_String
5992#	sw $t1,-4($s7)
	
	# store negative of char-count into header-2 word
5996#	subu $t0,$zero,$t0
6000#	sw $t0,4($s7)

6004#	lw $t1,($s7) # number of data words in string
6008#	sll $t1,$t1,2 # number data bytes in string
6012#	subu $t1,$s7,$t1 # first location to store chars in string
6016#	subu $t0,$t1,$t0 # limit address for chars in string

	####################################################
	# at this point:
	# - $sp contains first source character address
	# - $t1 contains first target character address
	# - $t0 contains target-limit address
	####################################################

	# loop through and copy all elements as we pop them off the stack.
	# (In this case, we know that there is it least one.)
6020:  itsLoop:
6020#	lw $t2,($sp)
6024#	addu $sp,$sp,4
6028#	sb $t2,($t1)
6032#	addu $t1,$t1,1
6036#	bne $t1,$t0,itsLoop

	####################################################
	# At this point
	# - ($t0+15)&0xfffffffe is our return value
    # - ($sp) contains garbage (old GC tag)
	# - 4($sp) contains return address
	####################################################

	# adjust stack, restore return address; return
6040#	lw $ra,4($sp)
6044#	addu $sp,$sp,16
6048#	addu $t0,$t0,15
6052#	and $t0,$t0,0xfffffffc
6053##...lui $at,65535
6057##...ori $at,$at,0xfffc
6061##...and $t0,$t0,$at
6064#	sw $t0,($sp)
6068#	jr $ra

########################################################
# intToChar(n) - library method (class Lib)
# converts int to a one-character string: Java: ""+(char)(n&0xff)
# - parameters:
#   - ($sp) - the value to convert, n
#   - 4($sp) - dummy GC tag
#   - 8($sp) - this-pointer
# - returns:
#   - ($sp) - the string, which is the converted character
# - note: only the low 8 bits of the value n are used
########################################################
6072:intToChar:
	# save return address
6072#	subu $sp,$sp,4
6076#	sw $ra,($sp)

	# allocate object
6080#	li $s6,2
6084#	move $s7,$zero
6088#	jal newObject

	# restore $ra, get 'n', popping then and 'newObject' rtnVal
	# off stack
6092#	lw $ra,4($sp)
6096#	lw $t1,8($sp)
6100#	addu $sp,$sp,16

	# store "String" tag into class field
6104#	la $t0,CLASS_String
6108#	sw $t0,-12($s7)

	# store data in string
6112#	sb $t1,-16($s7)
	
	# store negative of size in header-word 2
6116#	li $t0,-1
6120#	sw $t0,-4($s7)

	# store string pointer (return val) on stack for return
6124#	sw $s7,($sp)

	# return
6128#	jr $ra

########################################################
# str1.compareTo(str2) - library method (class String)
# compares two strings as in Java
# - parameters:
#   - ($sp) - second string
#   - 4($sp) - first string
# - returns:
#   - ($sp) - -1, 0, or 1 depending on whether str1 is
#       lexographically less than, equal to or greater than str2
#   - 4($sp) - (dummy) GC tag
########################################################
6132:compareTo:
	# get string pointers and check parameter for null
6132#	lw $t0,($sp) # second string
6136#	beq $t0,$zero,nullPtrException
6140#	lw $t1,4($sp) # first string
	
	# get (negatives of) respective byte-lengths
6144#	lw $t2,-4($t0) # negative length of second string
6148#	lw $t3,-4($t1) # negative length of first string

	# put tentative return value in $t5.
	# The tentative return value is the one that we will use if we get
	# to the end of the shorter string during our comparison-loop.
6152#	slt $t4,$t3,$t2
6156#	slt $t5,$t2,$t3
6160#	subu $t5,$t5,$t4
	
	# at this point:
	# - $t0 contains the pointer to the second string object
	# - $t1 contains the pointer to the first string object
	# - $t5 contains the value to return if the strings compare equal up
	#   to the length of the shortest word

	# get begin-of-string addresses
6164#	lw $t2,-8($t0) # # data words in second string
6168#	lw $t3,-8($t1) # # data words in first string
6172#	sll $t2,$t2,2 # byte-offset to beginning of str2 (+8)
6176#	sll $t3,$t3,2 # byte-offset to beginning of str1 (+8)
6180#	subu $t0,$t0,$t2 # beginning of str1 address (+8)
6184#	subu $t1,$t1,$t3 # beginning of str2 address (+8)
	
	# put $t1-limit into $t2
6188#	beq $zero,$t5,skipStrCmpLenzz
6192#	move $t2,$t3
6196:  skipStrCmpLenzz:
6196#    add $t2,$t1,$t2
	
	# at this point:
	# - $t0 contains 8 plus the address of the first data-byte of str2
	# - $t1 contains 8 plus the address of the first data-byte of str1
	# - $t2 contains 8 plus the address of the last data-type of str1
	# - $t5 contains the value to return if the strings compare equal up
	#   to the length of the shortest word

	#######################################################
	# at this point, we have
	# - $t5 containing the tentative return-value
	# - $t1 containing address of first char in str2
	# - $t2 containing limit for $t1
	# - $t0 containing address of first char in str1
	#######################################################

	# loop through, until we find unequal words or we hit
	# our limit	
6200:  cmpLoopzz:
6200#	lw $t3,-8($t1) # word from str2
6204#	lw $t4,-8($t0) # word from str1
6208#	bne $t3,$t4,cmpNotEqualzz
6212#	addu $t1,$t1,4
6216#	addu $t0,$t0,4
6220#	bne $t1,$t2,cmpLoopzz

	# # got to the end of one string: go set up return
6224#	j cmpHitLimitzz

6228:  cmpNotEqualzz:
	# found unequal characters: return -1 or 1, depending on which is
	# greater
6228#	slt $t5,$t4,$t3 # 1 if str2 > str1, else 0
6232#	sll $t5,$t5,1 # 2 if str2 > str1, else 0
6236#	subu $t5,$t5,1 # 1 if str2 > str1, else -1
6240:  cmpHitLimitzz:
6240#	sw $t5,($sp) # store value
6244#	sw $s5,4($sp) # GC tag
	#lw $zero,4($sp)#**"" #--FOR MEMORY TAGGING
6248#	jr $ra # return

########################################################
# readLogicalChar (millicode)
#  - logically reads a character from standard input
#  - first checks character buffer, consuming it if possible
#  - return-result:
#    - returns character in $v0
#  - side-effects:
#    - reads a character
#    - clobbers $t0
########################################################
6252:readLogicalChar:

	# check if we already have a character
6252#	lw $v0,lastCharRead
6256#	li $t0,-2
6260#	beq $t0,$v0 doReadCh

	# we have our character from the buffer. Wipe out
	# buffer and return
6264#	sw $t0,lastCharRead # store -2 into buffer (i.e. "empty")
6268#	jr $ra # return
	
6272:  doReadCh:
	# we need to actually read a character: read and return
6272#	li $v0,12 # use system call to read a character
6276#	syscall
6280#	jr $ra # return

########################################################
# newObject (millicode)
#  - allocates a new object on the heap
#  - two-word header is set up properly
#  - all non-header words in object are set to zero
#  - parameters:
#    - $s6 = first header-word, which is -1 if it is a data-array
#      allocation, and is the number of data words in the object
#      otherwise
#    - $s7 - second header-word, which is the number of object
#      words in the object (unless $s6 is -1, in which case it
#      is the number of data words in the object
#    - it is illegal for $s6 to be less than -1 (this is not checked)
#    - it is illegal for $s7 to be less than 0 (this is checked)
#  - return-result:
#    - pushed onto the top of the stack
#    - also returned in $s7
#  - side-effects:
#  - may trash all $tx registers and all $sx registers, except the
#    "permanent" ones, which get updated with values that are
#    consistent with the new space
########################################################
6284:newObject:
	# $s6 = # data words (or -1 if data-array allocation)
	#   - note: it is illegal for $s6 to be less than -1
	# $s7 = # object words (# data words if data-array allocation)
	# $ra = return address
	## on return, pointer to new memory is on
	##   top of stack, and also in $s7
	
	# abort if the object size is negative (this would be an array
	# allocation)
6284#	blt $s7,$zero arraySizeOutOfBounds
6285##...slt $at,$s7,$zero
6289##...bne $at,$zero,$+928

	# mark the fact that we have not yet GC'd for this allocation
6292#	move $t5,$zero

	###### TEMPORARY #######
	# for now, go a GC unconditionally, so that a full GC occurs
	# every time we allocate an object
	### let's not do that for now
	# j doGC

6296:  gcJoin:
	# Determine actual size of "before-header" portion.
	# If negative, it really means zero
6296#	move $t3,$s6
6300#	bge $t3,$zero,newSkip
6301##...slt $at,$t3,$zero
6305##...beq $at,$zero,$+8
6308#	move $t3,$zero

6312:  newSkip:

	# at this point:
	#  $s6 contains the first header word
	#  $s7 contains the second header word, which is also the
	#    after-header word count
	#  $t3 contains the before-header word count
	#  $t5 is zero iff we have not GC'd for this allocation

	# determine if we have enough memory available
6312#	addu $t0,$t3,$s7
6316#	sll $t0,$t0,2
6320#	addu $t0,$t0,8 # amount of memory needed
6324#	addu $t1,$t0,$s3
6328#	bgtu $t1,$s4,doGC
6329##...sltu $at,$s4,$t1
6333##...bne $at,$zero,$+56

	# at this point:
	#  $s3 points to beginning of segment, and
	#  $t1 points just past the end

	# zero out the memory
6336#	move $t2,$s3
6340:  zeroObjLoop:
6340#	sw $zero,($s3)
	#lw $zero,($s3)#**"" #--FOR MEMORY TAGGING	

6344#	addu $s3,4
6348#	bltu $s3,$t1,zeroObjLoop
6349##...sltu $at,$s3,$t1
6353##...bne $at,$zero,$-12

	# at this point:
	#  $s3 has been updated to point to the next free slot,
	#    which is also the point just past our object

	# compute pointer value and set up header-words
6356#	sll $t0,$s7,2    # number of post-header bytes
6360#	subu $t0,$s3,$t0 # pointer that we will return

	# store header-values
6364#	sw $s6,-8($t0)   # first header-word
	#lw $zero,-8($t0)#**"H1" #--FOR MEMORY TAGGING
6368#	sw $s7,-4($t0)   # second header-word
	#lw $zero,-4($t0)#**"H2" #--FOR MEMORY TAGGING
	
	# put return-value into $s7 and also push it onto top of stack
6372#	move $s7,$t0
6376#	subu $sp,$sp,4
6380#	sw $t0,($sp)

6384#	jr $ra
	
6388:  doGC:
	#####################################################
	# We need to do a garbage-collect
	#####################################################
 
         # print that we are doing a GC 
         #la $a0,gcMsg # prints message: "GC!" 
         #li $v0,4 # syscall-code for print-string 
         #syscall 
 	  
	# if we've already done a GC for this allocation, then
	# we are actually out heap-memory: abort program
6388#	bne $t5,$zero,outOfHeapMemory
	  
	# save $s2 (our only rooted register) on the stack
	# so that the garbage collector processes it
6392#	subu $sp,$sp,4
6396#	sw $s2,($sp)

	# set $s3 to the address of the new segment and the
	# end-limit of the new segment, respectively,
	# Also, update cur_seg to refer to the other segment
6400#	lw $t0,cur_seg
6404#	move $t7,$s4
6408#	la $t6,seg1_start
6409##...lui $t6,16
6413##...addiu $t6,$t6,10016
6416#	la $s3,seg0_start
6420#	la $s4,seg0_end
6421##...lui $s4,16
6425##...addiu $s4,$s4,10016
6428#	sw $zero,cur_seg
6432#	bne $t0,$zero,skipGc1
6436#	la $t6,seg0_start
6440#	la $s3,seg1_start
6441##...lui $s3,16
6445##...addiu $s3,$s3,10016
6448#	la $s4,seg1_end
6449##...lui $s4,32
6453##...addiu $s4,$s4,10016
6456#	sw $s5,cur_seg
6460:  skipGc1:
6460#	li $t5,-2
6464#	lw $t0,stack_bottom
6468#	subu $t0,4

	##################################
	# TEMPORARY HACK TO EXERCISE GC
	##################################
	#lw $t1,heapFudge
	#addu $t6,$t6,$t1
	#addu $t1,$t1,4
	#addu $s3,$s3,$t1 # fudge new heap pointer

	###############################################################
	# at this point:
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $s3 contains the first address of the target space
	# - $s4 contains the limit address of the target space
	# - cur_seg has been updated to refer to the target space
	# - $t0 contains the address of the deepest stack element
	# - $sp contains the address of the top stack element
	# - $s2 is available for use, having been pushed onto the stack
	# - $t5 contains the value -2
	###############################################################


	###### begin outer loop to copy all stack-direct objects ######

6472:  gcStackCopyLoop:
6472#	lw $t1,($t0) # current stack element

	# test if we have a GC tag
6476#	sll $t2,$t1,31 # zero iff low bit was zero
6480#	bne $t2,$zero,gcBump # go skip data values if low bit not zero

	# bump stack-address pointer
6484#	subu $t0,$t0,4

	# if value is out of range (which includes null=0), and is
	# therefore does not refer to an object on the heap, just go
	# loop back and do the next one
6488#	bleu $t1,$t6,gcTestIterDone1
6489##...sltu $at,$t6,$t1
6493##...beq $at,$zero,$+148
6496#	bgtu $t1,$t7,gcTestIterDone1
6497##...sltu $at,$t7,$t1
6501##...bne $at,$zero,$+140

	# if the object has already been moved, update the stack-value
	# via the forwarding pointer
6504#	lw $t2,-8($t1) # possible forwarding tag
6508#	bne $t2,$t5,gcNoForward1 # if not forwarding tag, go copy
6512#	lw $t2,-4($t1) # forwarding pointer: object's new address
6516#	sw $t2,4($t0) # update stack value
6520#	j gcTestIterDone1 # do next iteration

6524:  gcNoForward1:
	#########################################################
	# we actually need to copy the object into the new space
	#########################################################

	# compute the amount of space that is needed
6524#	bge $t2,$zero,gcSkip2
6525##...slt $at,$t2,$zero
6529##...beq $at,$zero,$+8
6532#	move $t2,$zero # set to zero if -1 (number of data words)

6536:  gcSkip2:
6536#	sll $t2,$t2,2
6540#	addu $t2,$t2,8
6544#	subu $t4,$t1,$t2 # address of first word of source
6548#	lw $t3,-4($t1) # number of object words (negative treated as zero)
6552#	bge $t3,$zero,gcH2Neg1
6553##...slt $at,$t3,$zero
6557##...beq $at,$zero,$+8
6560#	move $t3,$zero
6564:  gcH2Neg1:
6564#	sll $t3,$t3,2
6568#	addu $t3,$t3,$t1 # address one word past last word of source

6572#	addu $t2,$s3,$t2 # pointer to target object

	#########################################################
	# At this point:
	# - $t0 contains the address of the stack slot we'll
	#   process next
	# - $t1 contains the contents of the stack slot we're
	#   currently working on, which is a pointer to the source
	#   object (i.e., the address just beyond the object's header
	# - $t2 contains the pointer to the target object
	# - $t3 contains the limit address of the source object
	# - $t4 contains the first address of the source object
	# - $t5 contains the value -2	
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $s3 contains the first unallocated address of the
	#   target space, which is also the first address of the
	#   target object
	# - $s4 contains the limit address of the target space
	# - $s5 contains the value 5
	# - $s6-7 contain the original parameters to the call to
	#   'newObject'
	# - $sp contains the address of the top stack element
	# - available for use: $s0-2
	#########################################################

	# swap first header word and first data word so that header
    # can be found by "trailing finger" in the target space
6576#	lw $s0,($t4)
6580#	lw $s1,-8($t1)
6584#	sw $s1,($t4)
6588#	sw $s0,-8($t1)
	
	# copy all source bytes to the target
6592:  gCinnerCopy1:
6592#	lw $s0,($t4)
6596#	sw $s0,($s3)
6600#	addu $t4,$t4,4
6604#	addu $s3,$s3,4
6608#	bltu $t4,$t3,gCinnerCopy1
6609##...sltu $at,$t4,$t3
6613##...bne $at,$zero,$-20

	###########################################################
	# All bytes have been copied to the target space.  We still
	# need to:
	# - set up forwarding pointer in source object
	# - update the pointer in the current stack slot
	###########################################################

	# set up the forwarding pointer
6616#	sw $t5,-8($t1) # -2 in first header-slot
6620#	sw $t2,-4($t1) # forwarding pointer in second header-slot

	# update the stack slot with the address in the target space
6624#	sw $t2,4($t0)
	#lw $zero,-8($t2)#**"H1" #--FOR MEMORY TAGGING
	#lw $zero,-4($t2)#**"H2" #--FOR MEMORY TAGGING

	# go handle next stack slot (testing if done)
6628#	j gcTestIterDone1

6632:  gcBump:
	#### we have a GC tag.  Bytes to skip: tag value + 3.
6632#	subu $t0,$t0,$t1
6636#	subu $t0,$t0,3

6640:  gcTestIterDone1:
6640#	bgeu $t0,$sp,gcStackCopyLoop
6641##...sltu $at,$t0,$sp
6645##...beq $at,$zero,$-172

	###### end outer loop to copy all stack-direct objects ######

	#############################################################
	# We have finished processing the stack elements.  Now we need
	# to update elements in the heap itself. This may itself involve
	# moving additional objects
	#############################################################

	#########################################################
	# At this point:
	# - $t5 contains the value -2	
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $s3 contains the first unallocated address of the
	#   target space
	# - $s4 contains the limit address of the target space
	# - $s5 contains the value 5
	# - $s6-7 contain the original parameters to the call to
	#   'newObject'
	# We want to set things up so that in addition:
	# - $t0 is the "trailing finger", containing the address
	#   of the first slot in target space that we have yet
	#   to process.
	# Then during processing:
	# - $t1 will contain the contents of the heap slot we're
	#   currently working on, which is a pointer to the source
	#   object
	# And when we're actually copying an object:
	# - $t2 will contain pointer to the target object
	# - $t3 will contain the limit address of the source object
	# - $t4 will contain the first address of the source object
	# - $s1 will contain the the limit address for the current
	#   object that tells where the pointers in the object end
	# - available for use: $s0
	##########################################################

	# set $t0 to be at the beginning of target-space
6648#	lw $t1,cur_seg
6652#	la $t0,seg0_start
6656#	beq $t1,$zero,gcSkip4
6660#	la $t0,seg1_start
6661##...lui $t0,16
6665##...addiu $t0,$t0,10016

	##################################
	# TEMPORARY HACK TO EXERCISE GC
	##################################
	#lw $s0,heapFudge
	#addu $s0,$s0,4
	#addu $t0,$t0,$s0
	#sw $s0,heapFudge

6668:  gcSkip4:

	# if there were no objects put into the heap during stack
	# processing, we're done, so go finish up
6668#	bgeu $t0,$s3,gcFinishUp
6669##...sltu $at,$t0,$s3
6673##...beq $at,$zero,$+256

	###### begin outer loop to copy all non-stack-direct objects ######

6676:  gcHeapCopyLoop:
	# check if we have a data array
6676#	lw $t1,($t0) # first header word for current object
6680#	bge $t1,$zero,gcNotDataArray # test for neg. num (actually -1)
6681##...slt $at,$t1,$zero
6685##...beq $at,$zero,$+24

	# We have a -1 header-word, which means this object has no pointers.
	# Skip over it and go loop to do next object.
6688#	lw $t1,4($t0) # data words
6692#	addu $t1,$t1,2 # add in # header words
6696#	sll $t1,$t1,2 # convert to byte-count
6700#	addu $t0,$t0,$t1 # skip over object
6704#	j gcTestIterDone2 # go do next object, if any

6708:  gcNotDataArray:
	# get data count for object; swap header-word with first word
	# of object so that they're back in the right place
6708#	sll $t2,$t1,2 # # data bytes
6712#	addu $t2,$t2,8 # to skip header word
6716#	addu $t2,$t0,$t2 # pointer to new object
6720#	lw $t3,-8($t2) # word to swap
6724#	sw $t1,-8($t2) # store header word
6728#	sw $t3,($t0) # restore first word of object

6732#	lw $t3,-4($t2) # # object words (negative treated as zero)
6736#	bge $t3,$zero,gcH2Neg2
6737##...slt $at,$t3,$zero
6741##...beq $at,$zero,$+8
6744#	move $t3,$zero
6748:  gcH2Neg2:
6748#	sll $t3,$t3,2 # # object bytes
6752#	move $t0,$t2 # address of first pointer in object
6756#	add $s1,$t2,$t3 # limit address for this object

	#####################################################
	# At this point, we have to "translate" all pointers,
	# starting at $t0 to (but not including) $s1
	#####################################################

	# if there are no pointer-slots (i.e., $t0=$s1), skip this
	# part
6760#	beq $t0,$s1,gcTestIterDone2
	
6764:  gcNextPointerInObject:
	# get pointer from object
6764#	lw $t1,($t0)

	# if value is out of range, and is therefore does not refer
	# to an object, just go loop back and do the next one
6768#	bleu $t1,$t6,gcGoNextPointerSlot
6769##...sltu $at,$t6,$t1
6773##...beq $at,$zero,$+136
6776#	bgtu $t1,$t7,gcGoNextPointerSlot
6777##...sltu $at,$t7,$t1
6781##...bne $at,$zero,$+128

	# if the object has already been moved, update the stack-value
	# via the forwarding pointer
6784#	lw $t8,-8($t1) # possible forwarding tag
6788#	bne $t8,$t5,gcNoForward2 # if not forwarding tag, go copy
6792#	lw $t8,-4($t1) # forwarding pointer: object's new address
6796#	sw $t8,($t0) # update pointer in object
6800#	j gcGoNextPointerSlot # do next iteration

6804:  gcNoForward2:
	#########################################################
	# we actually need to copy the object into the new space
	#########################################################

	#########################################################
	# At this point:
	# - $t0 contains the address of the heap-slot we're translating
	# - $t1 will contain the contents of the heap-slot we're
	#   currently working on, which is a pointer to the source
	#   object
	# - $t2 will contains pointer to the object we're in the
	#   middle of translating
	# - $t5 contains the value -2	
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $s3 contains the first unallocated address of the
	#   target space, which will also be the first address
	#   of the target object
	# - $s4 contains the limit address of the target space
	# - $s5 contains the value 5
	# - $s6-7 contain the original parameters to the call to
	#   'newObject'
	# Then during processing:
	# And when we're actually copying an object:
	# - $t3 will contain the limit address of the source object
	# - $t4 will contain the first address of the source object
	# - $s1 will contain the the limit address for the current
	#   object that tells where the pointers in the object end
	# - $t8 will contain a pointer to the target object
	# - available for use: $s0, $t8, $t9
	##########################################################

	# compute the amount of space that is needed
6804#	bge $t8,$zero,gcSkip5
6805##...slt $at,$t8,$zero
6809##...beq $at,$zero,$+8
6812#	move $t8,$zero # set to zero if -1

6816:  gcSkip5:
6816#	sll $t8,$t8,2
6820#	addu $t8,$t8,8
6824#	subu $t4,$t1,$t8 # address of first word of source
6828#	lw $t3,-4($t1)
6832#	bge $t3,$zero,gcNoNeg
6833##...slt $at,$t3,$zero
6837##...beq $at,$zero,$+8
6840#	move $t3,$zero
6844:  gcNoNeg:
6844#	sll $t3,$t3,2
6848#	addu $t3,$t3,$t1 # address one word past last word of source

6852#	addu $t8,$s3,$t8 # pointer to target object

	#########################################################
	# At this point:
	# - $t0 contains the address of the stack slot we'll
	#   process next
	# - $t1 contains the contents of the stack slot we're
	#   currently working on, which is a pointer to the source
	#   object
	# - $t2 will contains pointer to the object we're in the
	#   middle of translating
	# - $t3 contains the limit address of the source object
	# - $t4 contains the first address of the source object
	# - $t5 contains the value -2	
	# - $t6 contains the first address of the source space
	# - $t7 contains the limit address of the source space
	# - $t8 contains the pointer to the target object
	# - $s1 contains the the limit address for the current
	#   object that tells where the pointers in the object end
	# - $s3 contains the first unallocated address of the
	#   target space, which is also the first address of the
	#   target object
	# - $s4 contains the limit address of the target space
	# - $s5 contains the value 5
	# - $s6-7 contain the original parameters to the call to
	#   'newObject'
	# - $sp contains the address of the top stack element
	# - available for use: $s0, $t9
	#########################################################

	# swap first header word and first data word so that header
        # can be found by "trailing finger"
6856#	lw $s0,($t4)
6860#	lw $t9,-8($t1)
6864#	sw $t9,($t4)
6868#	sw $s0,-8($t1)

	# copy all source bytes to the target
6872:  gCinnerCopy2:
6872#	lw $s0,($t4)
6876#	sw $s0,($s3)
6880#	addu $t4,$t4,4
6884#	addu $s3,$s3,4
6888#	bltu $t4,$t3,gCinnerCopy2
6889##...sltu $at,$t4,$t3
6893##...bne $at,$zero,$-20

	###########################################################
	# All bytes have been copied to the target space.  We still
	# need to:
	# - set up forwarding pointer in source object
	# - update the pointer in the current stack slot
	###########################################################

	# set up the forwarding pointer
6896#	sw $t5,-8($t1) # -2 in first header-slot
6900#	sw $t8,-4($t1) # forwarding pointer in second header-slot

	# update the heap-slot with the address in the target space
6904#	sw $t8,($t0)

6908:  gcGoNextPointerSlot:
	# bump $t0 to next slot in object; if not done, loop back
6908#	addu $t0,$t0,4
6912#	bltu $t0,$s1,gcNextPointerInObject
6913##...sltu $at,$t0,$s1
6917##...bne $at,$zero,$-152

6920:  gcTestIterDone2:
6920#	bltu $t0,$s3,gcHeapCopyLoop
6921##...sltu $at,$t0,$s3
6925##...bne $at,$zero,$-248

	###### end outer loop to copy all non-stack-direct objects ######

6928:  gcFinishUp:
	# restore $s2 to its updated value by popping off stack
6928#	lw $s2,($sp)
6932#	addu $sp,$sp,4

	# mark us as having already GC'd
6936#	move $t5,$s5

	# go try and allocate again
6940#	j gcJoin
	    

########################################################
# vm_init (millicode)
#  - initialzes the virtual machine
#  - values 5 stored in $s5
#  - zero ("this pointer") stored in $s2
#  - heap and heap-limit pointers stored respectively in $s3 and $s4
#  - address of bottom of stack stored in 'stack_bottom' memory
#    location
#  - (note: 'cur_seg' memory location is already set to 0)
########################################################
6944:vm_init:

	# mark bottom of stack
6944#	sw $sp,stack_bottom
6948#"stack pointer"	move $sp,$sp#**"stack pointer"  #--FOR MEMORY TAGGING
	
	# set "this" pointer to be null, for now
6952#	move $s2,$zero
6956#"this pointer"	move $s2,$s2#**"this pointer"  #--FOR MEMORY TAGGING

	#set up the "five" register
6960#	li $s5,5
6964#"constant 5"	move $s5,$s5#**"constant 5"  #--FOR MEMORY TAGGING

6968#	la $s3,seg0_start
6972#"next-avail-heap"	move $s3,$s3#**"next-avail-heap"  #--FOR MEMORY TAGGING
6976#	la $s4,seg0_end
6977##...lui $s4,16
6981##...addiu $s4,$s4,10016
6984#"end-heap"	move $s4,$s4#**"end-heap"  #--FOR MEMORY TAGGING
	
	# return
6988#	jr $ra

########################################################
# divide (millicode)
#  - divides first arg by second (signed divide)
#  - aborts if divisor is zero
#  - follows calling conventions for library methods
#  - parameters:
#    - ($sp) divisor
#    - 4($sp) (dummy) GC tag
#    - 8($sp) dividend
#    - 12($sp) (dummy) GC tag
#  - return value:
#    - ($sp) result
#    - 4($sp) (dummy) GC tag
########################################################
6992:divide:
	# get parameters; abort if divisor zero
6992#	lw $t0,($sp)
6996#	lw $t1,8($sp)
7000#	beq $t0,$zero,divByZeroError
	
	# perform division
7004#	div $t1,$t0
7008#	mflo $t0

	# store result, adjust stack and return
7012#	addu $sp,$sp,8 # adjust stack
7016#	sw $t0,($sp) # store result
7020#	jr $ra

########################################################
# remainder (millicode)
#  - takes remainder first arg divided by second (signed divide)
#  - aborts if divisor is zero
#  - follows calling conventions for library methods
#  - parameters:
#    - ($sp) divisor
#    - 4($sp) (dummy) GC tag
#    - 8($sp) dividend
#    - 12($sp) (dummy) GC tag
#  - return value:
#    - ($sp) result
#    - 4($sp) (dummy) GC tag
########################################################
7024:remainder:
	# get parameters; abort if divisor zero
7024#	lw $t0,($sp)
7028#	lw $t1,8($sp)
7032#	beq $t0,$zero,divByZeroError
	
	# perform division
7036#	div $t1,$t0
7040#	mfhi $t0

	# store result, adjust stack and return
7044#	addu $sp,$sp,8 # adjust stack
7048#	sw $t0,($sp) # store result
7052#	jr $ra
	
########################################################
# checkCast (millicode) - checks that a cast is legal
#  - aborts if null
#  - aborts if cast is illegal cast
#  - parameters:
#    - ($sp) object to check
#    - $t0 address of vtable for target-class
#    - $t1 address one past vtable address of last
#      subclass of target-class
#  - return value:
#    - ($sp) object to check (now checked)
#  - side-effects: clobbers $t2 and $t3
########################################################
7056:checkCast:
	# get object, allow immediately if null
7056#	lw $t2,($sp)
7060#	beq $t2,$zero,checkCastReturn
	
	# get vtable address of object (using Object vtable
	# address for arrays)
7064#	lw $t3,-8($t2) # <= 0 if array
7068#	lw $t2,-12($t2) # vtable address (unless array)
7072#	bgt $t3,$zero,skipArrayCast
7073##...slt $at,$zero,$t3
7077##...bne $at,$zero,$+8
7080#	la $t2,CLASS_Object
	
	# get vtable address of object, abort if less than
	# lower limit or greater then or equal to higher
	# limit
7084:  skipArrayCast:
7084#	bge $t2,$t1,castException
7085##...slt $at,$t2,$t1
7089##...beq $at,$zero,$+152
7092#	blt $t2,$t0,castException
7093##...slt $at,$t2,$t0
7097##...bne $at,$zero,$+144
	
	# return, leaving object unchanged on stack
7100:  checkCastReturn:	
7100#	jr $ra	
	
########################################################
# instanceOf (millicode) - tests whether an object is
#   a member of a given class (or subclass)
#  - returns false if object is null
#  - parameters:
#    - ($sp) object to check
#    - $t0 address of vtable for target-class
#    - $t1 address one past vtable address of last
#      subclass of target-class
#  - return value:
#    - ($sp) true (1) or false (0), depending on whether
#      object is a member
#  - side-effects: clobbers $t2 and $t3
########################################################
7104:instanceOf:
	# get object, go return false if null
7104#	lw $t2,($sp)
7108#	beq $t2,$zero,doneInstanceOf
	
	# get vtable address of object.  If it's an array
	# (which would be H1 <= 0), use vtable address for Object
7112#	lw $t3,-8($t2) # <= 0 if array
7116#	lw $t2,-12($t2) # vtable address (unless array)
7120#	bgt $t3,$zero,skipArrayInstanceOf
7121##...slt $at,$zero,$t3
7125##...bne $at,$zero,$+8
7128#	la $t2,CLASS_Object
	
	# get vtable address of object, abort if less than
	# lower limit or greater then or equal to higher
	# limit
7132:  skipArrayInstanceOf:
7132#	sge $t0,$t2,$t0
7133##...slt $t0,$t2,$t0
7137##...xori $t0,$t0,0x1
7140#	slt $t1,$t2,$t1
	
	# store the AND of the two conditions onto the stack; return
7144#	and $t2,$t0,$t1
7148:  doneInstanceOf: # if we reach here via branch, we know $t2=0
7148#	sw $t2,($sp)
7152#	jr $ra

###########################################################
# jump-targets to terminate program:
# - exit: returns normally
# - outOfHeapMemory: prints "out of memory" error and returns
###########################################################

7156:exitError:
	# assumes $a0 has pointer to null-terminated string

	# print the string
7156#	li $v0,4 # syscall-code for print-string
7160#	syscall
7164:exit:
	# print termination message
7164#	li $v0,4
7168#	la $a0,exitString
7172#	syscall

	# terminate execution
7176#	li $v0,10 #syscall-code for "exit"
7180#	syscall

7184:outOfHeapMemory:
7184#	la $a0,heapMemoryMsg
7188#	j exitError
7192:divByZeroError:
7192#	la $a0,divByZeroMsg
7196#	j exitError
7200:strIndexOutOfBounds:
7200#	la $a0,strIndexOutOfBoundsMsg
7204#	j exitError
7208:arrayIndexOutOfBounds:
7208#	la $a0,arrayIndexOutOfBoundsMsg
7212#	j exitError
7216:arraySizeOutOfBounds:
7216#	la $a0,arraySizeOutOfBoundsMsg
7220#	j exitError
7224:nullPtrException:
7224#	la $a0,nullPtrExceptionMsg
7228#	j exitError
7232:badIntegerFormat:
7232#	la $a0,badIntegerFormatMsg
7236#	j exitError
7240:castException:
7240#	la $a0,castExceptionMsg
7244#	j exitError

############## data section ################
	.data
	.align 2

9708:cur_seg:
	.word 0

9712:lastCharRead:
	.word -2 # -2 => no buffered character

9716:heapMemoryMsg:
	.asciiz "ERROR: out of heap memory\n"
9743:divByZeroMsg:
	.asciiz "ERROR: divide by zero\n"
9766:strIndexOutOfBoundsMsg:
	.asciiz "ERROR: string index out of bounds\n"
9801:arrayIndexOutOfBoundsMsg:
	.asciiz "ERROR: array index out of bounds\n"
9835:arraySizeOutOfBoundsMsg:
	.asciiz "ERROR: array size out of bounds\n"
9868:nullPtrExceptionMsg:
	.asciiz "ERROR: null-pointer exception\n"
9899:badIntegerFormatMsg:
	.asciiz "ERROR: attempt to read badly formatted integer\n"
9947:castExceptionMsg:
	.asciiz "ERROR: illegal cast\n"
9968:gcMsg: 
      .asciiz "\nGC!\n"

9974:nullStr:
	.asciiz "null"
9979:trueString:
	.asciiz "true"
9984:falseString:
	.asciiz "false"
9990:exitString:
	.asciiz "Program terminated.\n"
	
	.align 2
10012:stack_bottom:
	.word 0

#heapFudge: # temporary fudge amount to exercise GC
#	.word 0

10016:seg0_start:
	.space 0x100000
1058592:seg0_end:
1058592:seg1_start:
	.space 0x100000
2107168:seg1_end:



